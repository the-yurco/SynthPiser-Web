{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaStop, FaRedo, FaCircle, FaSquare } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BeatControls = ({\n  socket\n}) => {\n  _s();\n  const [timerValue, setTimerValue] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [recordedButtons, setRecordedButtons] = useState([]);\n  const timerRef = useRef(null);\n  const buttonPins = [3, 7, 11]; // Example button pins for demonstration\n\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!timerRunning) {\n      setTimerValue(0);\n      setTimerRunning(true);\n      timerRef.current = window.setInterval(() => {\n        setTimerValue(prevValue => {\n          if (prevValue >= 10) {\n            setTimerRunning(false);\n            window.clearInterval(timerRef.current);\n            return 0;\n          }\n          return prevValue + 1;\n        });\n      }, 1000);\n    } else {\n      setTimerRunning(false);\n      window.clearInterval(timerRef.current);\n    }\n  };\n  const stopPlayback = () => {\n    setIsPlaying(false);\n    setTimerRunning(false);\n    setTimerValue(0);\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n  };\n  const resetTimer = () => {\n    setRecordedButtons([]);\n    setTimerValue(0);\n  };\n  const handleButtonPress = pin => {\n    setRecordedButtons(prevButtons => [...prevButtons, {\n      pin,\n      time: timerValue\n    }]);\n  };\n  const handleClearRecordedButtons = () => {\n    setRecordedButtons([]);\n  };\n  useEffect(() => {\n    if (socket) {\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'assign_sound' && data.pin) {\n          setRecordedButtons(prevButtons => [...prevButtons, {\n            pin: data.pin,\n            time: timerValue\n          }]);\n        }\n      };\n    }\n  }, [socket, timerValue]);\n  useEffect(() => {\n    if (isPlaying) {\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < recordedButtons.length) {\n          setTimerValue(recordedButtons[index].time);\n          index++;\n        } else {\n          clearInterval(interval);\n          setIsPlaying(false);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, recordedButtons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beat-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-axis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: timerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), recordedButtons.map(({\n        pin,\n        time\n      }, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-indicator\",\n        style: {\n          left: `${time / 10 * 100}%`\n        } // Adjust the position based on time\n        ,\n        children: pin % 2 === 0 ? /*#__PURE__*/_jsxDEV(FaSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 39\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPlayback,\n        children: /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: /*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearRecordedButtons,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"static-buttons\",\n      children: buttonPins.map((pin, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonPress(pin),\n        children: [\"Test Button \", index + 1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n};\n_s(BeatControls, \"eo/3czruISWE6L7A13rEA34+/r8=\");\n_c = BeatControls;\nexport default BeatControls;\nvar _c;\n$RefreshReg$(_c, \"BeatControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaPlay","FaPause","FaStop","FaRedo","FaCircle","FaSquare","jsxDEV","_jsxDEV","BeatControls","socket","_s","timerValue","setTimerValue","isPlaying","setIsPlaying","timerRunning","setTimerRunning","recordedButtons","setRecordedButtons","timerRef","buttonPins","togglePlayPause","current","window","setInterval","prevValue","clearInterval","stopPlayback","resetTimer","handleButtonPress","pin","prevButtons","time","handleClearRecordedButtons","onmessage","event","data","JSON","parse","type","index","interval","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","style","left","onClick","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n\tFaPlay,\n\tFaPause,\n\tFaStop,\n\tFaRedo,\n\tFaCircle,\n\tFaSquare\n} from 'react-icons/fa';\n\ntype BeatControlsProps = {\n\tsocket: WebSocket | null;\n};\n\nconst BeatControls = ({ socket }: BeatControlsProps) => {\n\tconst [timerValue, setTimerValue] = useState<number>(0);\n\tconst [isPlaying, setIsPlaying] = useState<boolean>(false);\n\tconst [timerRunning, setTimerRunning] = useState<boolean>(false);\n\tconst [recordedButtons, setRecordedButtons] = useState<\n\t\t{ pin: number; time: number }[]\n\t>([]);\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst buttonPins = [3, 7, 11]; // Example button pins for demonstration\n\n\tconst togglePlayPause = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tif (!timerRunning) {\n\t\t\tsetTimerValue(0);\n\t\t\tsetTimerRunning(true);\n\t\t\ttimerRef.current = window.setInterval(() => {\n\t\t\t\tsetTimerValue((prevValue) => {\n\t\t\t\t\tif (prevValue >= 10) {\n\t\t\t\t\t\tsetTimerRunning(false);\n\t\t\t\t\t\twindow.clearInterval(timerRef.current!);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevValue + 1;\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetTimerRunning(false);\n\t\t\twindow.clearInterval(timerRef.current!);\n\t\t}\n\t};\n\n\tconst stopPlayback = () => {\n\t\tsetIsPlaying(false);\n\t\tsetTimerRunning(false);\n\t\tsetTimerValue(0);\n\t\tif (timerRef.current) {\n\t\t\tclearInterval(timerRef.current);\n\t\t}\n\t};\n\n\tconst resetTimer = () => {\n\t\tsetRecordedButtons([]);\n\t\tsetTimerValue(0);\n\t};\n\n\tconst handleButtonPress = (pin: number) => {\n\t\tsetRecordedButtons((prevButtons) => [\n\t\t\t...prevButtons,\n\t\t\t{ pin, time: timerValue }\n\t\t]);\n\t};\n\n\tconst handleClearRecordedButtons = () => {\n\t\tsetRecordedButtons([]);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket) {\n\t\t\tsocket.onmessage = (event) => {\n\t\t\t\tconst data = JSON.parse(event.data);\n\t\t\t\tif (data.type === 'assign_sound' && data.pin) {\n\t\t\t\t\tsetRecordedButtons((prevButtons) => [\n\t\t\t\t\t\t...prevButtons,\n\t\t\t\t\t\t{ pin: data.pin, time: timerValue }\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, [socket, timerValue]);\n\n\tuseEffect(() => {\n\t\tif (isPlaying) {\n\t\t\tlet index = 0;\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (index < recordedButtons.length) {\n\t\t\t\t\tsetTimerValue(recordedButtons[index].time);\n\t\t\t\t\tindex++;\n\t\t\t\t} else {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t}\n\t}, [isPlaying, recordedButtons]);\n\n\treturn (\n\t\t<div className=\"beat-controls\">\n\t\t\t<div className=\"timer-axis\">\n\t\t\t\t<div className=\"timer-display\">{timerValue}</div>\n\t\t\t\t{recordedButtons.map(({ pin, time }, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tclassName=\"button-indicator\"\n\t\t\t\t\t\tstyle={{ left: `${(time / 10) * 100}%` }} // Adjust the position based on time\n\t\t\t\t\t>\n\t\t\t\t\t\t{pin % 2 === 0 ? <FaSquare /> : <FaCircle />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"playback-controls\">\n\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t{isPlaying ? <FaPause /> : <FaPlay />}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={stopPlayback}>\n\t\t\t\t\t<FaStop />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={resetTimer}>\n\t\t\t\t\t<FaRedo />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={handleClearRecordedButtons}>Clear</button>\n\t\t\t</div>\n\t\t\t<div className=\"static-buttons\">\n\t\t\t\t{buttonPins.map((pin, index) => (\n\t\t\t\t\t<button key={index} onClick={() => handleButtonPress(pin)}>\n\t\t\t\t\t\tTest Button {index + 1}\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BeatControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}