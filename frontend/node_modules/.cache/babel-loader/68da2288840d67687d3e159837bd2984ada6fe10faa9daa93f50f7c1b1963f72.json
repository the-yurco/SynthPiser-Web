{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronni\\\\OneDrive\\\\Po\\u010D\\xEDta\\u010D\\\\react-js\\\\SynthPiser-Web\\\\frontend\\\\src\\\\components\\\\PresetsDropdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PresetsDropdown = ({\n  handlePresetSelect,\n  socket,\n  buttonPins\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPreset, setSelectedPreset] = useState({\n    name: 'No Preset',\n    sounds: []\n  });\n  const [pianoSounds, setPianoSounds] = useState([]);\n  useEffect(() => {\n    const fetchPianoSounds = async () => {\n      try {\n        const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n        const packId = '4409';\n        const response = await fetch(`https://freesound.org/apiv2/packs/${packId}/sounds/?token=${apiKey}`);\n        const data = await response.json();\n        const pianoSoundsData = data.results.filter(sound => sound.tags.includes('keyboard') && sound.tags.includes('note'));\n        const fetchedPianoSounds = pianoSoundsData.map(sound => ({\n          id: sound.id,\n          name: sound.name,\n          url: `https://freesound.org/apiv2/sounds/${sound.id}/download/?token=${apiKey}`\n        }));\n        setPianoSounds(fetchedPianoSounds);\n      } catch (error) {\n        console.error('Error fetching piano sounds from the pack:', error);\n      }\n    };\n    fetchPianoSounds();\n  }, []);\n  const presets = [{\n    name: 'Piano Notes',\n    sounds: pianoSounds\n  }, {\n    name: 'Guitar Chords',\n    sounds: []\n  }\n  // Add more presets as needed\n  ];\n  const handlePresetClick = preset => {\n    preset.sounds.forEach((sound, index) => {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      if (socket) {\n        socket.send(JSON.stringify({\n          type: 'assign_sound',\n          pin,\n          sound\n        }));\n      }\n    });\n    handlePresetSelect(preset.sounds);\n    setSelectedPreset(preset);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"presets\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presets-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"preset-button\",\n        onClick: () => setIsOpen(!isOpen),\n        children: selectedPreset.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: presets.map((preset, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: preset.name !== 'No Preset' &&\n          /*#__PURE__*/\n          // Conditionally render options\n          _jsxDEV(\"button\", {\n            className: \"preset-button-dropdown\",\n            onClick: () => handlePresetClick(preset),\n            children: preset.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PresetsDropdown, \"gA4uVpFLLydokbf8rjVkMriSuqY=\");\n_c = PresetsDropdown;\nexport default PresetsDropdown;\nvar _c;\n$RefreshReg$(_c, \"PresetsDropdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PresetsDropdown","handlePresetSelect","socket","buttonPins","_s","isOpen","setIsOpen","selectedPreset","setSelectedPreset","name","sounds","pianoSounds","setPianoSounds","fetchPianoSounds","apiKey","packId","response","fetch","data","json","pianoSoundsData","results","filter","sound","tags","includes","fetchedPianoSounds","map","id","url","error","console","presets","handlePresetClick","preset","forEach","index","pin","log","send","JSON","stringify","type","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/ronni/OneDrive/Počítač/react-js/SynthPiser-Web/frontend/src/components/PresetsDropdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Sound } from '../pages/MainPage';\r\n\r\ninterface Preset {\r\n  name: string;\r\n  sounds: Sound[];\r\n}\r\n\r\ninterface PresetsDropdownProps {\r\n  handlePresetSelect: (sounds: Sound[]) => void;\r\n  socket: WebSocket | null;\r\n  buttonPins: number[];\r\n}\r\n\r\nconst PresetsDropdown: React.FC<PresetsDropdownProps> = ({ handlePresetSelect, socket, buttonPins }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedPreset, setSelectedPreset] = useState<Preset>({ name: 'No Preset', sounds: [] });\r\n  const [pianoSounds, setPianoSounds] = useState<Sound[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPianoSounds = async () => {\r\n      try {\r\n        const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\r\n        const packId = '4409';\r\n        const response = await fetch(`https://freesound.org/apiv2/packs/${packId}/sounds/?token=${apiKey}`);\r\n        const data = await response.json();\r\n\r\n        const pianoSoundsData = data.results.filter((sound: { name: string; tags: string[] }) =>\r\n          sound.tags.includes('keyboard') && sound.tags.includes('note')\r\n        );\r\n        const fetchedPianoSounds: Sound[] = pianoSoundsData.map((sound: { id: number; name: string }) => ({\r\n          id: sound.id,\r\n          name: sound.name,\r\n          url: `https://freesound.org/apiv2/sounds/${sound.id}/download/?token=${apiKey}`,\r\n        }));\r\n\r\n        setPianoSounds(fetchedPianoSounds);\r\n      } catch (error) {\r\n        console.error('Error fetching piano sounds from the pack:', error);\r\n      }\r\n    };\r\n\r\n    fetchPianoSounds();\r\n  }, []);\r\n\r\n  const presets: Preset[] = [\r\n    { name: 'Piano Notes', sounds: pianoSounds },\r\n    { name: 'Guitar Chords', sounds: [] },\r\n    // Add more presets as needed\r\n  ];\r\n\r\n  const handlePresetClick = (preset: Preset) => {\r\n    preset.sounds.forEach((sound, index) => {\r\n      const pin = buttonPins[index];\r\n      console.log('Sending sound to backend:', { pin, sound });\r\n      if (socket) {\r\n        socket.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\r\n      }\r\n    });\r\n    handlePresetSelect(preset.sounds);\r\n    setSelectedPreset(preset);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"presets\">\r\n      <div className=\"presets-dropdown\">\r\n        <button className=\"preset-button\" onClick={() => setIsOpen(!isOpen)}>\r\n          {selectedPreset.name}\r\n        </button>\r\n        {isOpen && (\r\n          <div className=\"dropdown-menu\">\r\n            {presets.map((preset, index) => (\r\n              <React.Fragment key={index}>\r\n                {preset.name !== 'No Preset' && ( // Conditionally render options\r\n                  <button\r\n                    className=\"preset-button-dropdown\"\r\n                    onClick={() => handlePresetClick(preset)}\r\n                  >\r\n                    {preset.name}\r\n                  </button>\r\n                )}\r\n              </React.Fragment>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresetsDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcnD,MAAMC,eAA+C,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAS;IAAEa,IAAI,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAC/F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAU,EAAE,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,MAAM,GAAG,0CAA0C;QACzD,MAAMC,MAAM,GAAG,MAAM;QACrB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,MAAO,kBAAiBD,MAAO,EAAC,CAAC;QACnG,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,eAAe,GAAGF,IAAI,CAACG,OAAO,CAACC,MAAM,CAAEC,KAAuC,IAClFA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,IAAIF,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAC/D,CAAC;QACD,MAAMC,kBAA2B,GAAGN,eAAe,CAACO,GAAG,CAAEJ,KAAmC,KAAM;UAChGK,EAAE,EAAEL,KAAK,CAACK,EAAE;UACZnB,IAAI,EAAEc,KAAK,CAACd,IAAI;UAChBoB,GAAG,EAAG,sCAAqCN,KAAK,CAACK,EAAG,oBAAmBd,MAAO;QAChF,CAAC,CAAC,CAAC;QAEHF,cAAc,CAACc,kBAAkB,CAAC;MACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDjB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,OAAiB,GAAG,CACxB;IAAEvB,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAEC;EAAY,CAAC,EAC5C;IAAEF,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAG;EACpC;EAAA,CACD;EAED,MAAMuB,iBAAiB,GAAIC,MAAc,IAAK;IAC5CA,MAAM,CAACxB,MAAM,CAACyB,OAAO,CAAC,CAACZ,KAAK,EAAEa,KAAK,KAAK;MACtC,MAAMC,GAAG,GAAGlC,UAAU,CAACiC,KAAK,CAAC;MAC7BL,OAAO,CAACO,GAAG,CAAC,2BAA2B,EAAE;QAAED,GAAG;QAAEd;MAAM,CAAC,CAAC;MACxD,IAAIrB,MAAM,EAAE;QACVA,MAAM,CAACqC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAE,cAAc;UAAEL,GAAG;UAAEd;QAAM,CAAC,CAAC,CAAC;MACnE;IACF,CAAC,CAAC;IACFtB,kBAAkB,CAACiC,MAAM,CAACxB,MAAM,CAAC;IACjCF,iBAAiB,CAAC0B,MAAM,CAAC;IACzB5B,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA;IAAK4C,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtB7C,OAAA;MAAK4C,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B7C,OAAA;QAAQ4C,SAAS,EAAC,eAAe;QAACE,OAAO,EAAEA,CAAA,KAAMvC,SAAS,CAAC,CAACD,MAAM,CAAE;QAAAuC,QAAA,EACjErC,cAAc,CAACE;MAAI;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EACR5C,MAAM,iBACLN,OAAA;QAAK4C,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BZ,OAAO,CAACL,GAAG,CAAC,CAACO,MAAM,EAAEE,KAAK,kBACzBrC,OAAA,CAACJ,KAAK,CAACuD,QAAQ;UAAAN,QAAA,EACZV,MAAM,CAACzB,IAAI,KAAK,WAAW;UAAA;UAAM;UAChCV,OAAA;YACE4C,SAAS,EAAC,wBAAwB;YAClCE,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,MAAM,CAAE;YAAAU,QAAA,EAExCV,MAAM,CAACzB;UAAI;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QACT,GARkBb,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASV,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA3EIJ,eAA+C;AAAAmD,EAAA,GAA/CnD,eAA+C;AA6ErD,eAAeA,eAAe;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}