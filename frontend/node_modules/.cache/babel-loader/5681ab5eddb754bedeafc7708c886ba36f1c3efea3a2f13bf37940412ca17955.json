{"ast":null,"code":"/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\n\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\n\n(function SM2(window, _undefined) {\n  /* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\n\n  'use strict';\n\n  if (!window || !window.document) {\n    // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\n    // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\n\n    throw new Error('SoundManager requires a browser with window and document objects.');\n  }\n  var soundManager = null;\n\n  /**\r\n   * The SoundManager constructor.\r\n   *\r\n   * @constructor\r\n   * @param {string} smURL Optional: Path to SWF files\r\n   * @param {string} smID Optional: The ID to use for the SWF container element\r\n   * @this {SoundManager}\r\n   * @return {SoundManager} The new SoundManager instance\r\n   */\n\n  function SoundManager(smURL, smID) {\n    /**\r\n     * soundManager configuration options list\r\n     * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n     * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n     */\n\n    this.setupOptions = {\n      url: smURL || null,\n      // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\n      flashVersion: 8,\n      // flash build to use (8 or 9.) Some API features require 9.\n      debugMode: true,\n      // enable debugging output (console.log() with HTML fallback)\n      debugFlash: false,\n      // enable debugging output inside SWF, troubleshoot Flash/browser issues\n      useConsole: true,\n      // use console.log() if available (otherwise, writes to #soundmanager-debug element)\n      consoleOnly: true,\n      // if console is being used, do not create/write to #soundmanager-debug\n      waitForWindowLoad: false,\n      // force SM2 to wait for window.onload() before trying to call soundManager.onload()\n      bgColor: '#ffffff',\n      // SWF background color. N/A when wmode = 'transparent'\n      useHighPerformance: false,\n      // position:fixed flash movie can help increase js/flash speed, minimize lag\n      flashPollingInterval: null,\n      // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\n      html5PollingInterval: null,\n      // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\n      flashLoadTimeout: 1000,\n      // msec to wait for flash movie to load before failing (0 = infinity)\n      wmode: null,\n      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\n      allowScriptAccess: 'always',\n      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\n      useFlashBlock: false,\n      // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\n      useHTML5Audio: true,\n      // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\n      forceUseGlobalHTML5Audio: false,\n      // if true, a single Audio() object is used for all sounds - and only one can play at a time.\n      ignoreMobileRestrictions: false,\n      // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\n      html5Test: /^(probably|maybe)$/i,\n      // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\n      preferFlash: false,\n      // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\n      noSWFCache: false,\n      // if true, appends ?ts={date} to break aggressive SWF caching.\n      idPrefix: 'sound' // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\n    };\n    this.defaultOptions = {\n      /**\r\n       * the default configuration for sound objects made with createSound() and related methods\r\n       * eg., volume, auto-load behaviour and so forth\r\n       */\n\n      autoLoad: false,\n      // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\n      autoPlay: false,\n      // enable playing of file as soon as possible (much faster if \"stream\" is true)\n      from: null,\n      // position to start playback within a sound (msec), default = beginning\n      loops: 1,\n      // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\n      onid3: null,\n      // callback function for \"ID3 data is added/available\"\n      onerror: null,\n      // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\n      onload: null,\n      // callback function for \"load finished\"\n      whileloading: null,\n      // callback function for \"download progress update\" (X of Y bytes received)\n      onplay: null,\n      // callback for \"play\" start\n      onpause: null,\n      // callback for \"pause\"\n      onresume: null,\n      // callback for \"resume\" (pause toggle)\n      whileplaying: null,\n      // callback during play (position update)\n      onposition: null,\n      // object containing times and function callbacks for positions of interest\n      onstop: null,\n      // callback for \"user stop\"\n      onfinish: null,\n      // callback function for \"sound finished playing\"\n      multiShot: true,\n      // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\n      multiShotEvents: false,\n      // fire multiple sound events (currently onfinish() only) when multiShot is enabled\n      position: null,\n      // offset (milliseconds) to seek to within loaded sound data.\n      pan: 0,\n      // \"pan\" settings, left-to-right, -100 to 100\n      playbackRate: 1,\n      // rate at which to play the sound (HTML5-only)\n      stream: true,\n      // allows playing before entire file has loaded (recommended)\n      to: null,\n      // position to end playback within a sound (msec), default = end\n      type: null,\n      // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\n      usePolicyFile: false,\n      // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\n      volume: 100 // self-explanatory. 0-100, the latter being the max.\n    };\n    this.flash9Options = {\n      /**\r\n       * flash 9-only options,\r\n       * merged into defaultOptions if flash 9 is being used\r\n       */\n\n      onfailure: null,\n      // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\n      isMovieStar: null,\n      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\n      usePeakData: false,\n      // enable left/right channel peak (level) data\n      useWaveformData: false,\n      // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\n      useEQData: false,\n      // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\n      onbufferchange: null,\n      // callback for \"isBuffering\" property change\n      ondataerror: null // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\n    };\n    this.movieStarOptions = {\n      /**\r\n       * flash 9.0r115+ MPEG4 audio options,\r\n       * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n       */\n\n      bufferTime: 3,\n      // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\n      serverURL: null,\n      // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\n      onconnect: null,\n      // rtmp: callback for connection to flash media server\n      duration: null // rtmp: song duration (msec)\n    };\n    this.audioFormats = {\n      /**\r\n       * determines HTML5 support + flash requirements.\r\n       * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n       * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n       */\n\n      mp3: {\n        type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\n        required: true\n      },\n      mp4: {\n        related: ['aac', 'm4a', 'm4b'],\n        // additional formats under the MP4 container\n        type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\n        required: false\n      },\n      ogg: {\n        type: ['audio/ogg; codecs=vorbis'],\n        required: false\n      },\n      opus: {\n        type: ['audio/ogg; codecs=opus', 'audio/opus'],\n        required: false\n      },\n      wav: {\n        type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\n        required: false\n      },\n      flac: {\n        type: ['audio/flac'],\n        required: false\n      }\n    };\n\n    // HTML attributes (id + class names) for the SWF container\n\n    this.movieID = 'sm2-container';\n    this.id = smID || 'sm2movie';\n    this.debugID = 'soundmanager-debug';\n    this.debugURLParam = /([#?&])debug=1/i;\n\n    // dynamic attributes\n\n    this.versionNumber = 'V2.97a.20170601';\n    this.version = null;\n    this.movieURL = null;\n    this.altURL = null;\n    this.swfLoaded = false;\n    this.enabled = false;\n    this.oMC = null;\n    this.sounds = {};\n    this.soundIDs = [];\n    this.muted = false;\n    this.didFlashBlock = false;\n    this.filePattern = null;\n    this.filePatterns = {\n      flash8: /\\.mp3(\\?.*)?$/i,\n      flash9: /\\.mp3(\\?.*)?$/i\n    };\n\n    // support indicators, set at init\n\n    this.features = {\n      buffering: false,\n      peakData: false,\n      waveformData: false,\n      eqData: false,\n      movieStar: false\n    };\n\n    // flash sandbox info, used primarily in troubleshooting\n\n    this.sandbox = {\n      // <d>\n      type: null,\n      types: {\n        remote: 'remote (domain-based) rules',\n        localWithFile: 'local with file access (no internet access)',\n        localWithNetwork: 'local with network (internet access only, no local access)',\n        localTrusted: 'local, trusted (local+internet access)'\n      },\n      description: null,\n      noRemote: null,\n      noLocal: null\n      // </d>\n    };\n\n    /**\r\n     * format support (html5/flash)\r\n     * stores canPlayType() results based on audioFormats.\r\n     * eg. { mp3: boolean, mp4: boolean }\r\n     * treat as read-only.\r\n     */\n\n    this.html5 = {\n      usingFlash: null // set if/when flash fallback is needed\n    };\n\n    // file type support hash\n    this.flash = {};\n\n    // determined at init time\n    this.html5Only = false;\n\n    // used for special cases (eg. iPad/iPhone/palm OS?)\n    this.ignoreFlash = false;\n\n    /**\r\n     * a few private internals (OK, a lot. :D)\r\n     */\n\n    var SMSound,\n      sm2 = this,\n      globalHTML5Audio = null,\n      flash = null,\n      sm = 'soundManager',\n      smc = sm + ': ',\n      h5 = 'HTML5::',\n      id,\n      ua = navigator.userAgent,\n      wl = window.location.href.toString(),\n      doc = document,\n      doNothing,\n      setProperties,\n      init,\n      fV,\n      on_queue = [],\n      debugOpen = true,\n      debugTS,\n      didAppend = false,\n      appendSuccess = false,\n      didInit = false,\n      disabled = false,\n      windowLoaded = false,\n      _wDS,\n      wdCount = 0,\n      initComplete,\n      mixin,\n      assign,\n      extraOptions,\n      addOnEvent,\n      processOnEvents,\n      initUserOnload,\n      delayWaitForEI,\n      waitForEI,\n      rebootIntoHTML5,\n      setVersionInfo,\n      handleFocus,\n      strings,\n      initMovie,\n      domContentLoaded,\n      winOnLoad,\n      didDCLoaded,\n      getDocument,\n      createMovie,\n      catchError,\n      setPolling,\n      initDebug,\n      debugLevels = ['log', 'info', 'warn', 'error'],\n      defaultFlashVersion = 8,\n      disableObject,\n      failSafely,\n      normalizeMovieURL,\n      oRemoved = null,\n      oRemovedHTML = null,\n      str,\n      flashBlockHandler,\n      getSWFCSS,\n      swfCSS,\n      toggleDebug,\n      loopFix,\n      policyFix,\n      complain,\n      idCheck,\n      waitingForEI = false,\n      initPending = false,\n      startTimer,\n      stopTimer,\n      timerExecute,\n      h5TimerCount = 0,\n      h5IntervalTimer = null,\n      parseURL,\n      messages = [],\n      canIgnoreFlash,\n      needsFlash = null,\n      featureCheck,\n      html5OK,\n      html5CanPlay,\n      html5ErrorCodes,\n      html5Ext,\n      html5Unload,\n      domContentLoadedIE,\n      testHTML5,\n      event,\n      slice = Array.prototype.slice,\n      useGlobalHTML5Audio = false,\n      lastGlobalHTML5URL,\n      hasFlash,\n      detectFlash,\n      badSafariFix,\n      html5_events,\n      showSupport,\n      flushMessages,\n      wrapCallback,\n      idCounter = 0,\n      didSetup,\n      msecScale = 1000,\n      is_iDevice = ua.match(/(ipad|iphone|ipod)/i),\n      isAndroid = ua.match(/android/i),\n      isIE = ua.match(/msie|trident/i),\n      isWebkit = ua.match(/webkit/i),\n      isSafari = ua.match(/safari/i) && !ua.match(/chrome/i),\n      isOpera = ua.match(/opera/i),\n      mobileHTML5 = ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid,\n      isBadSafari = !wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i),\n      // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\n      hasConsole = window.console !== _undefined && console.log !== _undefined,\n      isFocused = doc.hasFocus !== _undefined ? doc.hasFocus() : null,\n      tryInitOnFocus = isSafari && (doc.hasFocus === _undefined || !doc.hasFocus()),\n      okToDisable = !tryInitOnFocus,\n      flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\n      emptyURL = 'about:blank',\n      // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\n      emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==',\n      // tiny WAV for HTML5 unloading\n      overHTTP = doc.location ? doc.location.protocol.match(/http/i) : null,\n      http = !overHTTP ? '//' : '',\n      // mp3, mp4, aac etc.\n      netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\n      // Flash v9.0r115+ \"moviestar\" formats\n      netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\n      netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n    this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\n\n    // use altURL if not \"online\"\n    this.useAltURL = !overHTTP;\n    swfCSS = {\n      swfBox: 'sm2-object-box',\n      swfDefault: 'movieContainer',\n      swfError: 'swf_error',\n      // SWF loaded, but SM2 couldn't start (other error)\n      swfTimedout: 'swf_timedout',\n      swfLoaded: 'swf_loaded',\n      swfUnblocked: 'swf_unblocked',\n      // or loaded OK\n      sm2Debug: 'sm2_debug',\n      highPerf: 'high_performance',\n      flashDebug: 'flash_debug'\n    };\n\n    /**\r\n     * HTML5 error codes, per W3C\r\n     * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n     * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n     * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n     * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n     * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n     */\n    html5ErrorCodes = [null, 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED'];\n\n    /**\r\n     * basic HTML5 Audio() support test\r\n     * try...catch because of IE 9 \"not implemented\" nonsense\r\n     * https://github.com/Modernizr/Modernizr/issues/224\r\n     */\n\n    this.hasHTML5 = function () {\n      try {\n        // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\n        return Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined;\n      } catch (e) {\n        return false;\n      }\n    }();\n\n    /**\r\n     * Public SoundManager API\r\n     * -----------------------\r\n     */\n\n    /**\r\n     * Configures top-level soundManager properties.\r\n     *\r\n     * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n     * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n     */\n\n    this.setup = function (options) {\n      var noURL = !sm2.url;\n\n      // warn if flash options have already been applied\n\n      if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\n        complain(str('setupLate'));\n      }\n\n      // TODO: defer: true?\n\n      assign(options);\n      if (!useGlobalHTML5Audio) {\n        if (mobileHTML5) {\n          // force the singleton HTML5 pattern on mobile, by default.\n          if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\n            messages.push(strings.globalHTML5);\n            useGlobalHTML5Audio = true;\n          }\n        } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\n          // only apply singleton HTML5 on desktop if forced.\n          messages.push(strings.globalHTML5);\n          useGlobalHTML5Audio = true;\n        }\n      }\n      if (!didSetup && mobileHTML5) {\n        if (sm2.setupOptions.ignoreMobileRestrictions) {\n          messages.push(strings.ignoreMobile);\n        } else {\n          // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\n\n          // <d>\n          if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\n            // notify that defaults are being changed.\n            sm2._wD(strings.mobileUA);\n          }\n          // </d>\n\n          sm2.setupOptions.useHTML5Audio = true;\n          sm2.setupOptions.preferFlash = false;\n          if (is_iDevice) {\n            // no flash here.\n            sm2.ignoreFlash = true;\n          } else if (isAndroid && !ua.match(/android\\s2\\.3/i) || !isAndroid) {\n            /**\r\n             * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n             * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n             * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n             */\n\n            // <d>\n            sm2._wD(strings.globalHTML5);\n            // </d>\n\n            useGlobalHTML5Audio = true;\n          }\n        }\n      }\n\n      // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\n\n      if (options) {\n        if (noURL && didDCLoaded && options.url !== _undefined) {\n          sm2.beginDelayedInit();\n        }\n\n        // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\n\n        if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\n          setTimeout(domContentLoaded, 1);\n        }\n      }\n      didSetup = true;\n      return sm2;\n    };\n    this.ok = function () {\n      return needsFlash ? didInit && !disabled : sm2.useHTML5Audio && sm2.hasHTML5;\n    };\n    this.supported = this.ok; // legacy\n\n    this.getMovie = function (movie_id) {\n      // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\n      return id(movie_id) || doc[movie_id] || window[movie_id];\n    };\n\n    /**\r\n     * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n     *\r\n     * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n     * @return {object} SMSound The new SMSound object.\r\n     */\n\n    this.createSound = function (oOptions, _url) {\n      var cs,\n        cs_string,\n        options,\n        oSound = null;\n\n      // <d>\n      cs = sm + '.createSound(): ';\n      cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\n      // </d>\n\n      if (!didInit || !sm2.ok()) {\n        complain(cs_string);\n        return false;\n      }\n      if (_url !== _undefined) {\n        // function overloading in JS! :) ... assume simple createSound(id, url) use case.\n        oOptions = {\n          id: oOptions,\n          url: _url\n        };\n      }\n\n      // inherit from defaultOptions\n      options = mixin(oOptions);\n      options.url = parseURL(options.url);\n\n      // generate an id, if needed.\n      if (options.id === _undefined) {\n        options.id = sm2.setupOptions.idPrefix + idCounter++;\n      }\n\n      // <d>\n      if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\n        sm2._wD(cs + str('badID', options.id), 2);\n      }\n      sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\n      // </d>\n\n      if (idCheck(options.id, true)) {\n        sm2._wD(cs + options.id + ' exists', 1);\n        return sm2.sounds[options.id];\n      }\n      function make() {\n        options = loopFix(options);\n        sm2.sounds[options.id] = new SMSound(options);\n        sm2.soundIDs.push(options.id);\n        return sm2.sounds[options.id];\n      }\n      if (html5OK(options)) {\n        oSound = make();\n        // <d>\n        if (!sm2.html5Only) {\n          sm2._wD(options.id + ': Using HTML5');\n        }\n        // </d>\n        oSound._setup_html5(options);\n      } else {\n        if (sm2.html5Only) {\n          sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\n          return make();\n        }\n\n        // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\n\n        if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\n          // data: URIs not supported by Flash, either.\n          sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\n          return make();\n        }\n        if (fV > 8) {\n          if (options.isMovieStar === null) {\n            // attempt to detect MPEG-4 formats\n            options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || options.url && options.url.match(netStreamPattern));\n          }\n          // <d>\n          if (options.isMovieStar) {\n            sm2._wD(cs + 'using MovieStar handling');\n            if (options.loops > 1) {\n              _wDS('noNSLoop');\n            }\n          }\n          // </d>\n        }\n        options = policyFix(options, cs);\n        oSound = make();\n        if (fV === 8) {\n          flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\n        } else {\n          flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, options.isMovieStar ? options.bufferTime : false, options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\n          if (!options.serverURL) {\n            // We are connected immediately\n            oSound.connected = true;\n            if (options.onconnect) {\n              options.onconnect.apply(oSound);\n            }\n          }\n        }\n        if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\n          // call load for non-rtmp streams\n          oSound.load(options);\n        }\n      }\n\n      // rtmp will play in onconnect\n      if (!options.serverURL && options.autoPlay) {\n        oSound.play();\n      }\n      return oSound;\n    };\n\n    /**\r\n     * Destroys a SMSound sound object instance.\r\n     *\r\n     * @param {string} sID The ID of the sound to destroy\r\n     */\n\n    this.destroySound = function (sID, _bFromSound) {\n      // explicitly destroy a sound before normal page unload, etc.\n\n      if (!idCheck(sID)) return false;\n      var oS = sm2.sounds[sID],\n        i;\n      oS.stop();\n\n      // Disable all callbacks after stop(), when the sound is being destroyed\n      oS._iO = {};\n      oS.unload();\n      for (i = 0; i < sm2.soundIDs.length; i++) {\n        if (sm2.soundIDs[i] === sID) {\n          sm2.soundIDs.splice(i, 1);\n          break;\n        }\n      }\n      if (!_bFromSound) {\n        // ignore if being called from SMSound instance\n        oS.destruct(true);\n      }\n      oS = null;\n      delete sm2.sounds[sID];\n      return true;\n    };\n\n    /**\r\n     * Calls the load() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {object} oOptions Optional: Sound options\r\n     */\n\n    this.load = function (sID, oOptions) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].load(oOptions);\n    };\n\n    /**\r\n     * Calls the unload() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     */\n\n    this.unload = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].unload();\n    };\n\n    /**\r\n     * Calls the onPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.onPosition = function (sID, nPosition, oMethod, oScope) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\n    };\n\n    // legacy/backwards-compability: lower-case method name\n    this.onposition = this.onPosition;\n\n    /**\r\n     * Calls the clearOnPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod Optional: The relevant callback to fire\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.clearOnPosition = function (sID, nPosition, oMethod) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\n    };\n\n    /**\r\n     * Calls the play() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {object} oOptions Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.play = function (sID, oOptions) {\n      var result = null,\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\n        overloaded = oOptions && !(oOptions instanceof Object);\n      if (!didInit || !sm2.ok()) {\n        complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\n        return false;\n      }\n      if (!idCheck(sID, overloaded)) {\n        // no sound found for the given ID. Bail.\n        if (!overloaded) return false;\n        if (overloaded) {\n          oOptions = {\n            url: oOptions\n          };\n        }\n        if (oOptions && oOptions.url) {\n          // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\n          sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\n          oOptions.id = sID;\n          result = sm2.createSound(oOptions).play();\n        }\n      } else if (overloaded) {\n        // existing sound object case\n        oOptions = {\n          url: oOptions\n        };\n      }\n      if (result === null) {\n        // default case\n        result = sm2.sounds[sID].play(oOptions);\n      }\n      return result;\n    };\n\n    // just for convenience\n    this.start = this.play;\n\n    /**\r\n     * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.setPlaybackRate = function (sID, rate, allowOverride) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\n    };\n\n    /**\r\n     * Calls the setPosition() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.setPosition = function (sID, nMsecOffset) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPosition(nMsecOffset);\n    };\n\n    /**\r\n     * Calls the stop() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.stop = function (sID) {\n      if (!idCheck(sID)) return false;\n      sm2._wD(sm + '.stop(' + sID + ')', 1);\n      return sm2.sounds[sID].stop();\n    };\n\n    /**\r\n     * Stops all currently-playing sounds.\r\n     */\n\n    this.stopAll = function () {\n      var oSound;\n      sm2._wD(sm + '.stopAll()', 1);\n      for (oSound in sm2.sounds) {\n        if (sm2.sounds.hasOwnProperty(oSound)) {\n          // apply only to sound objects\n          sm2.sounds[oSound].stop();\n        }\n      }\n    };\n\n    /**\r\n     * Calls the pause() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.pause = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].pause();\n    };\n\n    /**\r\n     * Pauses all currently-playing sounds.\r\n     */\n\n    this.pauseAll = function () {\n      var i;\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].pause();\n      }\n    };\n\n    /**\r\n     * Calls the resume() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.resume = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].resume();\n    };\n\n    /**\r\n     * Resumes all currently-paused sounds.\r\n     */\n\n    this.resumeAll = function () {\n      var i;\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].resume();\n      }\n    };\n\n    /**\r\n     * Calls the togglePause() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.togglePause = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].togglePause();\n    };\n\n    /**\r\n     * Calls the setPan() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.setPan = function (sID, nPan) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setPan(nPan);\n    };\n\n    /**\r\n     * Calls the setVolume() method of a SMSound object by ID\r\n     * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.setVolume = function (sID, nVol) {\n      // setVolume(50) function overloading case - apply to all sounds\n\n      var i, j;\n      if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\n        for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\n          sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\n        }\n        return false;\n      }\n\n      // setVolume('mySound', 50) case\n\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].setVolume(nVol);\n    };\n\n    /**\r\n     * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n     *\r\n     * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n     */\n\n    this.mute = function (sID) {\n      var i = 0;\n      if (sID instanceof String) {\n        sID = null;\n      }\n      if (!sID) {\n        sm2._wD(sm + '.mute(): Muting all sounds');\n        for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n          sm2.sounds[sm2.soundIDs[i]].mute();\n        }\n        sm2.muted = true;\n      } else {\n        if (!idCheck(sID)) return false;\n        sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\n        return sm2.sounds[sID].mute();\n      }\n      return true;\n    };\n\n    /**\r\n     * Mutes all sounds.\r\n     */\n\n    this.muteAll = function () {\n      sm2.mute();\n    };\n\n    /**\r\n     * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n     *\r\n     * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n     */\n\n    this.unmute = function (sID) {\n      var i;\n      if (sID instanceof String) {\n        sID = null;\n      }\n      if (!sID) {\n        sm2._wD(sm + '.unmute(): Unmuting all sounds');\n        for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n          sm2.sounds[sm2.soundIDs[i]].unmute();\n        }\n        sm2.muted = false;\n      } else {\n        if (!idCheck(sID)) return false;\n        sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\n        return sm2.sounds[sID].unmute();\n      }\n      return true;\n    };\n\n    /**\r\n     * Unmutes all sounds.\r\n     */\n\n    this.unmuteAll = function () {\n      sm2.unmute();\n    };\n\n    /**\r\n     * Calls the toggleMute() method of a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.toggleMute = function (sID) {\n      if (!idCheck(sID)) return false;\n      return sm2.sounds[sID].toggleMute();\n    };\n\n    /**\r\n     * Retrieves the memory used by the flash plugin.\r\n     *\r\n     * @return {number} The amount of memory in use\r\n     */\n\n    this.getMemoryUse = function () {\n      // flash-only\n      var ram = 0;\n      if (flash && fV !== 8) {\n        ram = parseInt(flash._getMemoryUse(), 10);\n      }\n      return ram;\n    };\n\n    /**\r\n     * Undocumented: NOPs soundManager and all SMSound objects.\r\n     */\n\n    this.disable = function (bNoDisable) {\n      // destroy all functions\n      var i;\n      if (bNoDisable === _undefined) {\n        bNoDisable = false;\n      }\n\n      // already disabled?\n      if (disabled) return false;\n      disabled = true;\n      _wDS('shutdown', 1);\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        disableObject(sm2.sounds[sm2.soundIDs[i]]);\n      }\n      disableObject(sm2);\n\n      // fire \"complete\", despite fail\n      initComplete(bNoDisable);\n      event.remove(window, 'load', initUserOnload);\n      return true;\n    };\n\n    /**\r\n     * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n     */\n\n    this.canPlayMIME = function (sMIME) {\n      var result;\n      if (sm2.hasHTML5) {\n        result = html5CanPlay({\n          type: sMIME\n        });\n      }\n      if (!result && needsFlash) {\n        // if flash 9, test netStream (movieStar) types as well.\n        result = sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null; // TODO: make less \"weird\" (per JSLint)\n      }\n      return result;\n    };\n\n    /**\r\n     * Determines playability of a URL based on audio support.\r\n     *\r\n     * @param {string} sURL The URL to test\r\n     * @return {boolean} URL playability\r\n     */\n\n    this.canPlayURL = function (sURL) {\n      var result;\n      if (sm2.hasHTML5) {\n        result = html5CanPlay({\n          url: sURL\n        });\n      }\n      if (!result && needsFlash) {\n        result = sURL && sm2.ok() ? !!sURL.match(sm2.filePattern) : null;\n      }\n      return result;\n    };\n\n    /**\r\n     * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n     *\r\n     * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n     * @return {boolean} URL playability\r\n     */\n\n    this.canPlayLink = function (oLink) {\n      if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\n      return sm2.canPlayURL(oLink.href);\n    };\n\n    /**\r\n     * Retrieves a SMSound object by ID.\r\n     *\r\n     * @param {string} sID The ID of the sound\r\n     * @return {SMSound} The SMSound object\r\n     */\n\n    this.getSoundById = function (sID, _suppressDebug) {\n      if (!sID) return null;\n      var result = sm2.sounds[sID];\n\n      // <d>\n      if (!result && !_suppressDebug) {\n        sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\n      }\n      // </d>\n\n      return result;\n    };\n\n    /**\r\n     * Queues a callback for execution when SoundManager has successfully initialized.\r\n     *\r\n     * @param {function} oMethod The callback method to fire\r\n     * @param {object} oScope Optional: The scope to apply to the callback\r\n     */\n\n    this.onready = function (oMethod, oScope) {\n      var sType = 'onready',\n        result = false;\n      if (typeof oMethod === 'function') {\n        // <d>\n        if (didInit) {\n          sm2._wD(str('queue', sType));\n        }\n        // </d>\n\n        if (!oScope) {\n          oScope = window;\n        }\n        addOnEvent(sType, oMethod, oScope);\n        processOnEvents();\n        result = true;\n      } else {\n        throw str('needFunction', sType);\n      }\n      return result;\n    };\n\n    /**\r\n     * Queues a callback for execution when SoundManager has failed to initialize.\r\n     *\r\n     * @param {function} oMethod The callback method to fire\r\n     * @param {object} oScope Optional: The scope to apply to the callback\r\n     */\n\n    this.ontimeout = function (oMethod, oScope) {\n      var sType = 'ontimeout',\n        result = false;\n      if (typeof oMethod === 'function') {\n        // <d>\n        if (didInit) {\n          sm2._wD(str('queue', sType));\n        }\n        // </d>\n\n        if (!oScope) {\n          oScope = window;\n        }\n        addOnEvent(sType, oMethod, oScope);\n        processOnEvents({\n          type: sType\n        });\n        result = true;\n      } else {\n        throw str('needFunction', sType);\n      }\n      return result;\n    };\n\n    /**\r\n     * Writes console.log()-style debug output to a console or in-browser element.\r\n     * Applies when debugMode = true\r\n     *\r\n     * @param {string} sText The console message\r\n     * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n     */\n\n    this._writeDebug = function (sText, sTypeOrObject) {\n      // pseudo-private console.log()-style output\n      // <d>\n\n      var sDID = 'soundmanager-debug',\n        o,\n        oItem;\n      if (!sm2.setupOptions.debugMode) return false;\n      if (hasConsole && sm2.useConsole) {\n        if (sTypeOrObject && typeof sTypeOrObject === 'object') {\n          // object passed; dump to console.\n          console.log(sText, sTypeOrObject);\n        } else if (debugLevels[sTypeOrObject] !== _undefined) {\n          console[debugLevels[sTypeOrObject]](sText);\n        } else {\n          console.log(sText);\n        }\n        if (sm2.consoleOnly) return true;\n      }\n      o = id(sDID);\n      if (!o) return false;\n      oItem = doc.createElement('div');\n      if (++wdCount % 2 === 0) {\n        oItem.className = 'sm2-alt';\n      }\n      if (sTypeOrObject === _undefined) {\n        sTypeOrObject = 0;\n      } else {\n        sTypeOrObject = parseInt(sTypeOrObject, 10);\n      }\n      oItem.appendChild(doc.createTextNode(sText));\n      if (sTypeOrObject) {\n        if (sTypeOrObject >= 2) {\n          oItem.style.fontWeight = 'bold';\n        }\n        if (sTypeOrObject === 3) {\n          oItem.style.color = '#ff3333';\n        }\n      }\n\n      // top-to-bottom\n      // o.appendChild(oItem);\n\n      // bottom-to-top\n      o.insertBefore(oItem, o.firstChild);\n      o = null;\n      // </d>\n\n      return true;\n    };\n\n    // <d>\n    // last-resort debugging option\n    if (wl.indexOf('sm2-debug=alert') !== -1) {\n      this._writeDebug = function (sText) {\n        window.alert(sText);\n      };\n    }\n    // </d>\n\n    // alias\n    this._wD = this._writeDebug;\n\n    /**\r\n     * Provides debug / state information on all SMSound objects.\r\n     */\n\n    this._debug = function () {\n      // <d>\n      var i, j;\n      _wDS('currentObj', 1);\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\n        sm2.sounds[sm2.soundIDs[i]]._debug();\n      }\n      // </d>\n    };\n\n    /**\r\n     * Restarts and re-initializes the SoundManager instance.\r\n     *\r\n     * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n     * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\n\n    this.reboot = function (resetEvents, excludeInit) {\n      // reset some (or all) state, and re-init unless otherwise specified.\n\n      // <d>\n      if (sm2.soundIDs.length) {\n        sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\n      }\n      // </d>\n\n      var i, j, k;\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        sm2.sounds[sm2.soundIDs[i]].destruct();\n      }\n\n      // trash ze flash (remove from the DOM)\n\n      if (flash) {\n        try {\n          if (isIE) {\n            oRemovedHTML = flash.innerHTML;\n          }\n          oRemoved = flash.parentNode.removeChild(flash);\n        } catch (e) {\n          // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\n\n          _wDS('badRemove', 2);\n        }\n      }\n\n      // actually, force recreate of movie.\n\n      oRemovedHTML = oRemoved = needsFlash = flash = null;\n      sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\n      sm2.soundIDs = [];\n      sm2.sounds = {};\n      idCounter = 0;\n      didSetup = false;\n      if (!resetEvents) {\n        // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\n        for (i in on_queue) {\n          if (on_queue.hasOwnProperty(i)) {\n            for (j = 0, k = on_queue[i].length; j < k; j++) {\n              on_queue[i][j].fired = false;\n            }\n          }\n        }\n      } else {\n        // remove all callbacks entirely\n        on_queue = [];\n      }\n\n      // <d>\n      if (!excludeInit) {\n        sm2._wD(sm + ': Rebooting...');\n      }\n      // </d>\n\n      // reset HTML5 and flash canPlay test results\n\n      sm2.html5 = {\n        usingFlash: null\n      };\n      sm2.flash = {};\n\n      // reset device-specific HTML/flash mode switches\n\n      sm2.html5Only = false;\n      sm2.ignoreFlash = false;\n      window.setTimeout(function () {\n        // by default, re-init\n\n        if (!excludeInit) {\n          sm2.beginDelayedInit();\n        }\n      }, 20);\n      return sm2;\n    };\n    this.reset = function () {\n      /**\r\n       * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n       * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n       * @return {object} soundManager The soundManager instance.\r\n       */\n\n      _wDS('reset');\n      return sm2.reboot(true, true);\n    };\n\n    /**\r\n     * Undocumented: Determines the SM2 flash movie's load progress.\r\n     *\r\n     * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n     */\n\n    this.getMoviePercent = function () {\n      /**\r\n       * Interesting syntax notes...\r\n       * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n       * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n       * Thus, 'in' syntax must be used.\r\n       */\n\n      return flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null;\n    };\n\n    /**\r\n     * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n     */\n\n    this.beginDelayedInit = function () {\n      windowLoaded = true;\n      domContentLoaded();\n      setTimeout(function () {\n        if (initPending) return false;\n        createMovie();\n        initMovie();\n        initPending = true;\n        return true;\n      }, 20);\n      delayWaitForEI();\n    };\n\n    /**\r\n     * Destroys the SoundManager instance and all SMSound instances.\r\n     */\n\n    this.destruct = function () {\n      sm2._wD(sm + '.destruct()');\n      sm2.disable(true);\n    };\n\n    /**\r\n     * SMSound() (sound object) constructor\r\n     * ------------------------------------\r\n     *\r\n     * @param {object} oOptions Sound options (id and url are required attributes)\r\n     * @return {SMSound} The new SMSound object\r\n     */\n\n    SMSound = function (oOptions) {\n      var s = this,\n        resetProperties,\n        add_html5_events,\n        remove_html5_events,\n        stop_html5_timer,\n        start_html5_timer,\n        attachOnPosition,\n        onplay_called = false,\n        onPositionItems = [],\n        onPositionFired = 0,\n        detachOnPosition,\n        applyFromTo,\n        lastURL = null,\n        lastHTML5State,\n        urlOmitted;\n      lastHTML5State = {\n        // tracks duration + position (time)\n        duration: null,\n        time: null\n      };\n      this.id = oOptions.id;\n\n      // legacy\n      this.sID = this.id;\n      this.url = oOptions.url;\n      this.options = mixin(oOptions);\n\n      // per-play-instance-specific options\n      this.instanceOptions = this.options;\n\n      // short alias\n      this._iO = this.instanceOptions;\n\n      // assign property defaults\n      this.pan = this.options.pan;\n      this.volume = this.options.volume;\n\n      // whether or not this object is using HTML5\n      this.isHTML5 = false;\n\n      // internal HTML5 Audio() object reference\n      this._a = null;\n\n      // for flash 8 special-case createSound() without url, followed by load/play with url case\n      urlOmitted = !this.url;\n\n      /**\r\n       * SMSound() public methods\r\n       * ------------------------\r\n       */\n\n      this.id3 = {};\n\n      /**\r\n       * Writes SMSound object parameters to debug console\r\n       */\n\n      this._debug = function () {\n        // <d>\n        sm2._wD(s.id + ': Merged options:', s.options);\n        // </d>\n      };\n\n      /**\r\n       * Begins loading a sound per its *url*.\r\n       *\r\n       * @param {object} options Optional: Sound options\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.load = function (options) {\n        var oSound = null,\n          instanceOptions;\n        if (options !== _undefined) {\n          s._iO = mixin(options, s.options);\n        } else {\n          options = s.options;\n          s._iO = options;\n          if (lastURL && lastURL !== s.url) {\n            _wDS('manURL');\n            s._iO.url = s.url;\n            s.url = null;\n          }\n        }\n        if (!s._iO.url) {\n          s._iO.url = s.url;\n        }\n        s._iO.url = parseURL(s._iO.url);\n\n        // ensure we're in sync\n        s.instanceOptions = s._iO;\n\n        // local shortcut\n        instanceOptions = s._iO;\n        sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\n        if (!instanceOptions.url && !s.url) {\n          sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\n          return s;\n        }\n\n        // <d>\n        if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\n          // flash 8 load() -> play() won't work before onload has fired.\n          sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\n        }\n        // </d>\n\n        if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\n          _wDS('onURL', 1);\n          // if loaded and an onload() exists, fire immediately.\n          if (s.readyState === 3 && instanceOptions.onload) {\n            // assume success based on truthy duration.\n            wrapCallback(s, function () {\n              instanceOptions.onload.apply(s, [!!s.duration]);\n            });\n          }\n          return s;\n        }\n\n        // reset a few state properties\n\n        s.loaded = false;\n        s.readyState = 1;\n        s.playState = 0;\n        s.id3 = {};\n\n        // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\n\n        if (html5OK(instanceOptions)) {\n          oSound = s._setup_html5(instanceOptions);\n          if (!oSound._called_load) {\n            s._html5_canplay = false;\n\n            // TODO: review called_load / html5_canplay logic\n\n            // if url provided directly to load(), assign it here.\n\n            if (s.url !== instanceOptions.url) {\n              sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\n              s._a.src = instanceOptions.url;\n\n              // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\n\n              // reset position for new URL\n              s.setPosition(0);\n            }\n\n            // given explicit load call, try to preload.\n\n            // early HTML5 implementation (non-standard)\n            s._a.autobuffer = 'auto';\n\n            // standard property, values: none / metadata / auto\n            // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\n            s._a.preload = 'auto';\n            s._a._called_load = true;\n          } else {\n            sm2._wD(s.id + ': Ignoring request to load again');\n          }\n        } else {\n          if (sm2.html5Only) {\n            sm2._wD(s.id + ': No flash support. Exiting.');\n            return s;\n          }\n          if (s._iO.url && s._iO.url.match(/data:/i)) {\n            // data: URIs not supported by Flash, either.\n            sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\n            return s;\n          }\n          try {\n            s.isHTML5 = false;\n            s._iO = policyFix(loopFix(instanceOptions));\n            // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\n            if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\n              sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\n              s._iO.autoPlay = false;\n            }\n            // re-assign local shortcut\n            instanceOptions = s._iO;\n            if (fV === 8) {\n              flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\n            } else {\n              flash._load(s.id, instanceOptions.url, !!instanceOptions.stream, !!instanceOptions.autoPlay, instanceOptions.loops || 1, !!instanceOptions.autoLoad, instanceOptions.usePolicyFile);\n            }\n          } catch (e) {\n            _wDS('smError', 2);\n            debugTS('onload', false);\n            catchError({\n              type: 'SMSOUND_LOAD_JS_EXCEPTION',\n              fatal: true\n            });\n          }\n        }\n\n        // after all of this, ensure sound url is up to date.\n        s.url = instanceOptions.url;\n        return s;\n      };\n\n      /**\r\n       * Unloads a sound, canceling any open HTTP requests.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.unload = function () {\n        // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\n        // Flash 9/AS3: Close stream, preventing further load\n        // HTML5: Most UAs will use empty URL\n\n        if (s.readyState !== 0) {\n          sm2._wD(s.id + ': unload()');\n          if (!s.isHTML5) {\n            if (fV === 8) {\n              flash._unload(s.id, emptyURL);\n            } else {\n              flash._unload(s.id);\n            }\n          } else {\n            stop_html5_timer();\n            if (s._a) {\n              s._a.pause();\n\n              // update empty URL, too\n              lastURL = html5Unload(s._a);\n            }\n          }\n\n          // reset load/status flags\n          resetProperties();\n        }\n        return s;\n      };\n\n      /**\r\n       * Unloads and destroys a sound.\r\n       */\n\n      this.destruct = function (_bFromSM) {\n        sm2._wD(s.id + ': Destruct');\n        if (!s.isHTML5) {\n          // kill sound within Flash\n          // Disable the onfailure handler\n          s._iO.onfailure = null;\n          flash._destroySound(s.id);\n        } else {\n          stop_html5_timer();\n          if (s._a) {\n            s._a.pause();\n            html5Unload(s._a);\n            if (!useGlobalHTML5Audio) {\n              remove_html5_events();\n            }\n            // break obvious circular reference\n            s._a._s = null;\n            s._a = null;\n          }\n        }\n        if (!_bFromSM) {\n          // ensure deletion from controller\n          sm2.destroySound(s.id, true);\n        }\n      };\n\n      /**\r\n       * Begins playing a sound.\r\n       *\r\n       * @param {object} options Optional: Sound options\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.play = function (options, _updatePlayState) {\n        var fN,\n          allowMulti,\n          a,\n          onready,\n          audioClone,\n          onended,\n          oncanplay,\n          startOK = true;\n\n        // <d>\n        fN = s.id + ': play(): ';\n        // </d>\n\n        // default to true\n        _updatePlayState = _updatePlayState === _undefined ? true : _updatePlayState;\n        if (!options) {\n          options = {};\n        }\n\n        // first, use local URL (if specified)\n        if (s.url) {\n          s._iO.url = s.url;\n        }\n\n        // mix in any options defined at createSound()\n        s._iO = mixin(s._iO, s.options);\n\n        // mix in any options specific to this method\n        s._iO = mixin(options, s._iO);\n        s._iO.url = parseURL(s._iO.url);\n        s.instanceOptions = s._iO;\n\n        // RTMP-only\n        if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\n          if (!s.getAutoPlay()) {\n            sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\n            s.setAutoPlay(true);\n          }\n          // play will be called in onconnect()\n          return s;\n        }\n        if (html5OK(s._iO)) {\n          s._setup_html5(s._iO);\n          start_html5_timer();\n        }\n        if (s.playState === 1 && !s.paused) {\n          allowMulti = s._iO.multiShot;\n          if (!allowMulti) {\n            sm2._wD(fN + 'Already playing (one-shot)', 1);\n            if (s.isHTML5) {\n              // go back to original position.\n              s.setPosition(s._iO.position);\n            }\n            return s;\n          }\n          sm2._wD(fN + 'Already playing (multi-shot)', 1);\n        }\n\n        // edge case: play() with explicit URL parameter\n        if (options.url && options.url !== s.url) {\n          // special case for createSound() followed by load() / play() with url; avoid double-load case.\n          if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\n            urlOmitted = false;\n          } else {\n            // load using merged options\n            s.load(s._iO);\n          }\n        }\n        if (!s.loaded) {\n          if (s.readyState === 0) {\n            sm2._wD(fN + 'Attempting to load');\n\n            // try to get this sound playing ASAP\n            if (!s.isHTML5 && !sm2.html5Only) {\n              // flash: assign directly because setAutoPlay() increments the instanceCount\n              s._iO.autoPlay = true;\n              s.load(s._iO);\n            } else if (s.isHTML5) {\n              // iOS needs this when recycling sounds, loading a new URL on an existing object.\n              s.load(s._iO);\n            } else {\n              sm2._wD(fN + 'Unsupported type. Exiting.');\n              return s;\n            }\n\n            // HTML5 hack - re-set instanceOptions?\n            s.instanceOptions = s._iO;\n          } else if (s.readyState === 2) {\n            sm2._wD(fN + 'Could not load - exiting', 2);\n            return s;\n          } else {\n            sm2._wD(fN + 'Loading - attempting to play...');\n          }\n        } else {\n          // \"play()\"\n          sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\n        }\n        if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\n          // flash 9 needs a position reset if play() is called while at the end of a sound.\n          sm2._wD(fN + 'Sound at end, resetting to position: 0');\n          options.position = 0;\n        }\n\n        /**\r\n         * Streams will pause when their buffer is full if they are being loaded.\r\n         * In this case paused is true, but the song hasn't started playing yet.\r\n         * If we just call resume() the onplay() callback will never be called.\r\n         * So only call resume() if the position is > 0.\r\n         * Another reason is because options like volume won't have been applied yet.\r\n         * For normal sounds, just resume.\r\n         */\n\n        if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\n          // https://gist.github.com/37b17df75cc4d7a90bf6\n          sm2._wD(fN + 'Resuming from paused state', 1);\n          s.resume();\n        } else {\n          s._iO = mixin(options, s._iO);\n\n          /**\r\n           * Preload in the event of play() with position under Flash,\r\n           * or from/to parameters and non-RTMP case\r\n           */\n          if ((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0 || s._iO.from !== null && s._iO.from > 0 || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\n            onready = function () {\n              // sound \"canplay\" or onload()\n              // re-apply position/from/to to instance options, and start playback\n              s._iO = mixin(options, s._iO);\n              s.play(s._iO);\n            };\n\n            // HTML5 needs to at least have \"canplay\" fired before seeking.\n            if (s.isHTML5 && !s._html5_canplay) {\n              // this hasn't been loaded yet. load it first, and then do this again.\n              sm2._wD(fN + 'Beginning load for non-zero offset case');\n              s.load({\n                // note: custom HTML5-only event added for from/to implementation.\n                _oncanplay: onready\n              });\n            } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\n              // to be safe, preload the whole thing in Flash.\n\n              sm2._wD(fN + 'Preloading for non-zero offset case');\n              s.load({\n                onload: onready\n              });\n            }\n\n            // otherwise, we're ready to go. re-apply local options, and continue\n\n            s._iO = applyFromTo();\n          }\n\n          // sm2._wD(fN + 'Starting to play');\n\n          // increment instance counter, where enabled + supported\n          if (!s.instanceCount || s._iO.multiShotEvents || s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio || !s.isHTML5 && fV > 8 && !s.getAutoPlay()) {\n            s.instanceCount++;\n          }\n\n          // if first play and onposition parameters exist, apply them now\n          if (s._iO.onposition && s.playState === 0) {\n            attachOnPosition(s);\n          }\n          s.playState = 1;\n          s.paused = false;\n          s.position = s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0;\n          if (!s.isHTML5) {\n            s._iO = policyFix(loopFix(s._iO));\n          }\n          if (s._iO.onplay && _updatePlayState) {\n            s._iO.onplay.apply(s);\n            onplay_called = true;\n          }\n          s.setVolume(s._iO.volume, true);\n          s.setPan(s._iO.pan, true);\n          if (s._iO.playbackRate !== 1) {\n            s.setPlaybackRate(s._iO.playbackRate);\n          }\n          if (!s.isHTML5) {\n            startOK = flash._start(s.id, s._iO.loops || 1, fV === 9 ? s.position : s.position / msecScale, s._iO.multiShot || false);\n            if (fV === 9 && !startOK) {\n              // edge case: no sound hardware, or 32-channel flash ceiling hit.\n              // applies only to Flash 9, non-NetStream/MovieStar sounds.\n              // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\n              sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\n              if (s._iO.onplayerror) {\n                s._iO.onplayerror.apply(s);\n              }\n            }\n          } else if (s.instanceCount < 2) {\n            // HTML5 single-instance case\n\n            start_html5_timer();\n            a = s._setup_html5();\n            s.setPosition(s._iO.position);\n            a.play();\n          } else {\n            // HTML5 multi-shot case\n\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\n            audioClone = new Audio(s._iO.url);\n            onended = function () {\n              event.remove(audioClone, 'ended', onended);\n              s._onfinish(s);\n              // cleanup\n              html5Unload(audioClone);\n              audioClone = null;\n            };\n            oncanplay = function () {\n              event.remove(audioClone, 'canplay', oncanplay);\n              try {\n                audioClone.currentTime = s._iO.position / msecScale;\n              } catch (err) {\n                complain(s.id + ': multiShot play() failed to apply position of ' + s._iO.position / msecScale);\n              }\n              audioClone.play();\n            };\n            event.add(audioClone, 'ended', onended);\n\n            // apply volume to clones, too\n            if (s._iO.volume !== _undefined) {\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\n            }\n\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\n            if (s.muted) {\n              audioClone.muted = true;\n            }\n            if (s._iO.position) {\n              // HTML5 audio can't seek before onplay() event has fired.\n              // wait for canplay, then seek to position and start playback.\n              event.add(audioClone, 'canplay', oncanplay);\n            } else {\n              // begin playback at currentTime: 0\n              audioClone.play();\n            }\n          }\n        }\n        return s;\n      };\n\n      // just for convenience\n      this.start = this.play;\n\n      /**\r\n       * Stops playing a sound (and optionally, all sounds)\r\n       *\r\n       * @param {boolean} bAll Optional: Whether to stop all sounds\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.stop = function (bAll) {\n        var instanceOptions = s._iO,\n          originalPosition;\n        if (s.playState === 1) {\n          sm2._wD(s.id + ': stop()');\n          s._onbufferchange(0);\n          s._resetOnPosition(0);\n          s.paused = false;\n          if (!s.isHTML5) {\n            s.playState = 0;\n          }\n\n          // remove onPosition listeners, if any\n          detachOnPosition();\n\n          // and \"to\" position, if set\n          if (instanceOptions.to) {\n            s.clearOnPosition(instanceOptions.to);\n          }\n          if (!s.isHTML5) {\n            flash._stop(s.id, bAll);\n\n            // hack for netStream: just unload\n            if (instanceOptions.serverURL) {\n              s.unload();\n            }\n          } else if (s._a) {\n            originalPosition = s.position;\n\n            // act like Flash, though\n            s.setPosition(0);\n\n            // hack: reflect old position for onstop() (also like Flash)\n            s.position = originalPosition;\n\n            // html5 has no stop()\n            // NOTE: pausing means iOS requires interaction to resume.\n            s._a.pause();\n            s.playState = 0;\n\n            // and update UI\n            s._onTimer();\n            stop_html5_timer();\n          }\n          s.instanceCount = 0;\n          s._iO = {};\n          if (instanceOptions.onstop) {\n            instanceOptions.onstop.apply(s);\n          }\n        }\n        return s;\n      };\n\n      /**\r\n       * Undocumented/internal: Sets autoPlay for RTMP.\r\n       *\r\n       * @param {boolean} autoPlay state\r\n       */\n\n      this.setAutoPlay = function (autoPlay) {\n        sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\n        s._iO.autoPlay = autoPlay;\n        if (!s.isHTML5) {\n          flash._setAutoPlay(s.id, autoPlay);\n          if (autoPlay) {\n            // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\n            if (!s.instanceCount && s.readyState === 1) {\n              s.instanceCount++;\n              sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\n            }\n          }\n        }\n      };\n\n      /**\r\n       * Undocumented/internal: Returns the autoPlay boolean.\r\n       *\r\n       * @return {boolean} The current autoPlay value\r\n       */\n\n      this.getAutoPlay = function () {\n        return s._iO.autoPlay;\n      };\n\n      /**\r\n       * Sets the playback rate of a sound (HTML5-only.)\r\n       *\r\n       * @param {number} playbackRate (+/-)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.setPlaybackRate = function (playbackRate) {\n        // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\n        // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\n        var normalizedRate = Math.max(0.5, Math.min(4, playbackRate));\n\n        // <d>\n        if (normalizedRate !== playbackRate) {\n          sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\n        }\n        // </d>\n\n        if (s.isHTML5) {\n          try {\n            s._iO.playbackRate = normalizedRate;\n            s._a.playbackRate = normalizedRate;\n          } catch (e) {\n            sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\n          }\n        }\n        return s;\n      };\n\n      /**\r\n       * Sets the position of a sound.\r\n       *\r\n       * @param {number} nMsecOffset Position (milliseconds)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.setPosition = function (nMsecOffset) {\n        if (nMsecOffset === _undefined) {\n          nMsecOffset = 0;\n        }\n        var position,\n          position1K,\n          // Use the duration from the instance options, if we don't have a track duration yet.\n          // position >= 0 and <= current available (loaded) duration\n          offset = s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0));\n        s.position = offset;\n        position1K = s.position / msecScale;\n        s._resetOnPosition(s.position);\n        s._iO.position = offset;\n        if (!s.isHTML5) {\n          position = fV === 9 ? s.position : position1K;\n          if (s.readyState && s.readyState !== 2) {\n            // if paused or not playing, will not resume (by playing)\n            flash._setPosition(s.id, position, s.paused || !s.playState, s._iO.multiShot);\n          }\n        } else if (s._a) {\n          // Set the position in the canplay handler if the sound is not ready yet\n          if (s._html5_canplay) {\n            if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\n              /**\r\n               * DOM/JS errors/exceptions to watch out for:\r\n               * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n               * \"INDEX_SIZE_ERR\": DOM exception 1\r\n               */\n              sm2._wD(s.id + ': setPosition(' + position1K + ')');\n              try {\n                s._a.currentTime = position1K;\n                if (s.playState === 0 || s.paused) {\n                  // allow seek without auto-play/resume\n                  s._a.pause();\n                }\n              } catch (e) {\n                sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\n              }\n            }\n          } else if (position1K) {\n            // warn on non-zero seek attempts\n            sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\n            return s;\n          }\n          if (s.paused) {\n            // if paused, refresh UI right away by forcing update\n            s._onTimer(true);\n          }\n        }\n        return s;\n      };\n\n      /**\r\n       * Pauses sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.pause = function (_bCallFlash) {\n        if (s.paused || s.playState === 0 && s.readyState !== 1) return s;\n        sm2._wD(s.id + ': pause()');\n        s.paused = true;\n        if (!s.isHTML5) {\n          if (_bCallFlash || _bCallFlash === _undefined) {\n            flash._pause(s.id, s._iO.multiShot);\n          }\n        } else {\n          s._setup_html5().pause();\n          stop_html5_timer();\n        }\n        if (s._iO.onpause) {\n          s._iO.onpause.apply(s);\n        }\n        return s;\n      };\n\n      /**\r\n       * Resumes sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      /**\r\n       * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n       * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n       * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n       * hasn't been called already. In this case since the sound is being played for the\r\n       * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n       */\n\n      this.resume = function () {\n        var instanceOptions = s._iO;\n        if (!s.paused) return s;\n        sm2._wD(s.id + ': resume()');\n        s.paused = false;\n        s.playState = 1;\n        if (!s.isHTML5) {\n          if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\n            // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\n            s.setPosition(s.position);\n          }\n\n          // flash method is toggle-based (pause/resume)\n          flash._pause(s.id, instanceOptions.multiShot);\n        } else {\n          s._setup_html5().play();\n          start_html5_timer();\n        }\n        if (!onplay_called && instanceOptions.onplay) {\n          instanceOptions.onplay.apply(s);\n          onplay_called = true;\n        } else if (instanceOptions.onresume) {\n          instanceOptions.onresume.apply(s);\n        }\n        return s;\n      };\n\n      /**\r\n       * Toggles sound playback.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.togglePause = function () {\n        sm2._wD(s.id + ': togglePause()');\n        if (s.playState === 0) {\n          s.play({\n            position: fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale\n          });\n          return s;\n        }\n        if (s.paused) {\n          s.resume();\n        } else {\n          s.pause();\n        }\n        return s;\n      };\n\n      /**\r\n       * Sets the panning (L-R) effect.\r\n       *\r\n       * @param {number} nPan The pan value (-100 to 100)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.setPan = function (nPan, bInstanceOnly) {\n        if (nPan === _undefined) {\n          nPan = 0;\n        }\n        if (bInstanceOnly === _undefined) {\n          bInstanceOnly = false;\n        }\n        if (!s.isHTML5) {\n          flash._setPan(s.id, nPan);\n        } // else { no HTML5 pan? }\n\n        s._iO.pan = nPan;\n        if (!bInstanceOnly) {\n          s.pan = nPan;\n          s.options.pan = nPan;\n        }\n        return s;\n      };\n\n      /**\r\n       * Sets the volume.\r\n       *\r\n       * @param {number} nVol The volume value (0 to 100)\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.setVolume = function (nVol, _bInstanceOnly) {\n        /**\r\n         * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n         * Hardware volume control overrides software, and volume\r\n         * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n         * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n         */\n\n        if (nVol === _undefined) {\n          nVol = 100;\n        }\n        if (_bInstanceOnly === _undefined) {\n          _bInstanceOnly = false;\n        }\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, sm2.muted && !s.muted || s.muted ? 0 : nVol);\n        } else if (s._a) {\n          if (sm2.muted && !s.muted) {\n            s.muted = true;\n            s._a.muted = true;\n          }\n\n          // valid range for native HTML5 Audio(): 0-1\n          s._a.volume = Math.max(0, Math.min(1, nVol / 100));\n        }\n        s._iO.volume = nVol;\n        if (!_bInstanceOnly) {\n          s.volume = nVol;\n          s.options.volume = nVol;\n        }\n        return s;\n      };\n\n      /**\r\n       * Mutes the sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.mute = function () {\n        s.muted = true;\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, 0);\n        } else if (s._a) {\n          s._a.muted = true;\n        }\n        return s;\n      };\n\n      /**\r\n       * Unmutes the sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.unmute = function () {\n        s.muted = false;\n        var hasIO = s._iO.volume !== _undefined;\n        if (!s.isHTML5) {\n          flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\n        } else if (s._a) {\n          s._a.muted = false;\n        }\n        return s;\n      };\n\n      /**\r\n       * Toggles the muted state of a sound.\r\n       *\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.toggleMute = function () {\n        return s.muted ? s.unmute() : s.mute();\n      };\n\n      /**\r\n       * Registers a callback to be fired when a sound reaches a given position during playback.\r\n       *\r\n       * @param {number} nPosition The position to watch for\r\n       * @param {function} oMethod The relevant callback to fire\r\n       * @param {object} oScope Optional: The scope to apply the callback to\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.onPosition = function (nPosition, oMethod, oScope) {\n        // TODO: basic dupe checking?\n\n        onPositionItems.push({\n          position: parseInt(nPosition, 10),\n          method: oMethod,\n          scope: oScope !== _undefined ? oScope : s,\n          fired: false\n        });\n        return s;\n      };\n\n      // legacy/backwards-compability: lower-case method name\n      this.onposition = this.onPosition;\n\n      /**\r\n       * Removes registered callback(s) from a sound, by position and/or callback.\r\n       *\r\n       * @param {number} nPosition The position to clear callback(s) for\r\n       * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n       * @return {SMSound} The SMSound object\r\n       */\n\n      this.clearOnPosition = function (nPosition, oMethod) {\n        var i;\n        nPosition = parseInt(nPosition, 10);\n        if (isNaN(nPosition)) {\n          // safety check\n          return;\n        }\n        for (i = 0; i < onPositionItems.length; i++) {\n          if (nPosition === onPositionItems[i].position) {\n            // remove this item if no method was specified, or, if the method matches\n\n            if (!oMethod || oMethod === onPositionItems[i].method) {\n              if (onPositionItems[i].fired) {\n                // decrement \"fired\" counter, too\n                onPositionFired--;\n              }\n              onPositionItems.splice(i, 1);\n            }\n          }\n        }\n      };\n      this._processOnPosition = function () {\n        var i,\n          item,\n          j = onPositionItems.length;\n        if (!j || !s.playState || onPositionFired >= j) return false;\n        for (i = j - 1; i >= 0; i--) {\n          item = onPositionItems[i];\n          if (!item.fired && s.position >= item.position) {\n            item.fired = true;\n            onPositionFired++;\n            item.method.apply(item.scope, [item.position]);\n\n            //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\n            j = onPositionItems.length;\n          }\n        }\n        return true;\n      };\n      this._resetOnPosition = function (nPosition) {\n        // reset \"fired\" for items interested in this position\n        var i,\n          item,\n          j = onPositionItems.length;\n        if (!j) return false;\n        for (i = j - 1; i >= 0; i--) {\n          item = onPositionItems[i];\n          if (item.fired && nPosition <= item.position) {\n            item.fired = false;\n            onPositionFired--;\n          }\n        }\n        return true;\n      };\n\n      /**\r\n       * SMSound() private internals\r\n       * --------------------------------\r\n       */\n\n      applyFromTo = function () {\n        var instanceOptions = s._iO,\n          f = instanceOptions.from,\n          t = instanceOptions.to,\n          start,\n          end;\n        end = function () {\n          // end has been reached.\n          sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\n\n          // detach listener\n          s.clearOnPosition(t, end);\n\n          // stop should clear this, too\n          s.stop();\n        };\n        start = function () {\n          sm2._wD(s.id + ': Playing \"from\" ' + f);\n\n          // add listener for end\n          if (t !== null && !isNaN(t)) {\n            s.onPosition(t, end);\n          }\n        };\n        if (f !== null && !isNaN(f)) {\n          // apply to instance options, guaranteeing correct start position.\n          instanceOptions.position = f;\n\n          // multiShot timing can't be tracked, so prevent that.\n          instanceOptions.multiShot = false;\n          start();\n        }\n\n        // return updated instanceOptions including starting position\n        return instanceOptions;\n      };\n      attachOnPosition = function () {\n        var item,\n          op = s._iO.onposition;\n\n        // attach onposition things, if any, now.\n\n        if (op) {\n          for (item in op) {\n            if (op.hasOwnProperty(item)) {\n              s.onPosition(parseInt(item, 10), op[item]);\n            }\n          }\n        }\n      };\n      detachOnPosition = function () {\n        var item,\n          op = s._iO.onposition;\n\n        // detach any onposition()-style listeners.\n\n        if (op) {\n          for (item in op) {\n            if (op.hasOwnProperty(item)) {\n              s.clearOnPosition(parseInt(item, 10));\n            }\n          }\n        }\n      };\n      start_html5_timer = function () {\n        if (s.isHTML5) {\n          startTimer(s);\n        }\n      };\n      stop_html5_timer = function () {\n        if (s.isHTML5) {\n          stopTimer(s);\n        }\n      };\n      resetProperties = function (retainPosition) {\n        if (!retainPosition) {\n          onPositionItems = [];\n          onPositionFired = 0;\n        }\n        onplay_called = false;\n        s._hasTimer = null;\n        s._a = null;\n        s._html5_canplay = false;\n        s.bytesLoaded = null;\n        s.bytesTotal = null;\n        s.duration = s._iO && s._iO.duration ? s._iO.duration : null;\n        s.durationEstimate = null;\n        s.buffered = [];\n\n        // legacy: 1D array\n        s.eqData = [];\n        s.eqData.left = [];\n        s.eqData.right = [];\n        s.failures = 0;\n        s.isBuffering = false;\n        s.instanceOptions = {};\n        s.instanceCount = 0;\n        s.loaded = false;\n        s.metadata = {};\n\n        // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\n        s.readyState = 0;\n        s.muted = false;\n        s.paused = false;\n        s.peakData = {\n          left: 0,\n          right: 0\n        };\n        s.waveformData = {\n          left: [],\n          right: []\n        };\n        s.playState = 0;\n        s.position = null;\n        s.id3 = {};\n      };\n      resetProperties();\n\n      /**\r\n       * Pseudo-private SMSound internals\r\n       * --------------------------------\r\n       */\n\n      this._onTimer = function (bForce) {\n        /**\r\n         * HTML5-only _whileplaying() etc.\r\n         * called from both HTML5 native events, and polling/interval-based timers\r\n         * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n         */\n\n        var duration,\n          isNew = false,\n          time,\n          x = {};\n        if (s._hasTimer || bForce) {\n          // TODO: May not need to track readyState (1 = loading)\n\n          if (s._a && (bForce || (s.playState > 0 || s.readyState === 1) && !s.paused)) {\n            duration = s._get_html5_duration();\n            if (duration !== lastHTML5State.duration) {\n              lastHTML5State.duration = duration;\n              s.duration = duration;\n              isNew = true;\n            }\n\n            // TODO: investigate why this goes wack if not set/re-set each time.\n            s.durationEstimate = s.duration;\n            time = s._a.currentTime * msecScale || 0;\n            if (time !== lastHTML5State.time) {\n              lastHTML5State.time = time;\n              isNew = true;\n            }\n            if (isNew || bForce) {\n              s._whileplaying(time, x, x, x, x);\n            }\n          } /* else {\r\n               // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n               return false;\r\n             }*/\n        }\n        return isNew;\n      };\n      this._get_html5_duration = function () {\n        var instanceOptions = s._iO,\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\n          d = s._a && s._a.duration ? s._a.duration * msecScale : instanceOptions && instanceOptions.duration ? instanceOptions.duration : null,\n          result = d && !isNaN(d) && d !== Infinity ? d : null;\n        return result;\n      };\n      this._apply_loop = function (a, nLoops) {\n        /**\r\n         * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n         * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n         */\n\n        // <d>\n        if (!a.loop && nLoops > 1) {\n          sm2._wD('Note: Native HTML5 looping is infinite.', 1);\n        }\n        // </d>\n\n        a.loop = nLoops > 1 ? 'loop' : '';\n      };\n      this._setup_html5 = function (options) {\n        var instanceOptions = mixin(s._iO, options),\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\n          dURL = decodeURI(instanceOptions.url),\n          sameURL;\n\n        /**\r\n         * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n         * Fixes case with devices that can only play one sound at a time\r\n         * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n         */\n\n        if (useGlobalHTML5Audio) {\n          if (dURL === decodeURI(lastGlobalHTML5URL)) {\n            // global HTML5 audio: re-use of URL\n            sameURL = true;\n          }\n        } else if (dURL === decodeURI(lastURL)) {\n          // options URL is the same as the \"last\" URL, and we used (loaded) it\n          sameURL = true;\n        }\n        if (a) {\n          if (a._s) {\n            if (useGlobalHTML5Audio) {\n              if (a._s && a._s.playState && !sameURL) {\n                // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\n                a._s.stop();\n              }\n            } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\n              // non-global HTML5 reuse case: same url, ignore request\n              s._apply_loop(a, instanceOptions.loops);\n              return a;\n            }\n          }\n          if (!sameURL) {\n            // don't retain onPosition() stuff with new URLs.\n\n            if (lastURL) {\n              resetProperties(false);\n            }\n\n            // assign new HTML5 URL\n\n            a.src = instanceOptions.url;\n            s.url = instanceOptions.url;\n            lastURL = instanceOptions.url;\n            lastGlobalHTML5URL = instanceOptions.url;\n            a._called_load = false;\n          }\n        } else {\n          if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\n            s._a = new Audio(instanceOptions.url);\n            s._a.load();\n          } else {\n            // null for stupid Opera 9.64 case\n            s._a = isOpera && opera.version() < 10 ? new Audio(null) : new Audio();\n          }\n\n          // assign local reference\n          a = s._a;\n          a._called_load = false;\n          if (useGlobalHTML5Audio) {\n            globalHTML5Audio = a;\n          }\n        }\n        s.isHTML5 = true;\n\n        // store a ref on the track\n        s._a = a;\n\n        // store a ref on the audio\n        a._s = s;\n        add_html5_events();\n        s._apply_loop(a, instanceOptions.loops);\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\n          s.load();\n        } else {\n          // early HTML5 implementation (non-standard)\n          a.autobuffer = false;\n\n          // standard ('none' is also an option.)\n          a.preload = 'auto';\n        }\n        return a;\n      };\n      add_html5_events = function () {\n        if (s._a._added_events) return false;\n        var f;\n        function add(oEvt, oFn, bCapture) {\n          return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\n        }\n        s._a._added_events = true;\n        for (f in html5_events) {\n          if (html5_events.hasOwnProperty(f)) {\n            add(f, html5_events[f]);\n          }\n        }\n        return true;\n      };\n      remove_html5_events = function () {\n        // Remove event listeners\n\n        var f;\n        function remove(oEvt, oFn, bCapture) {\n          return s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null;\n        }\n        sm2._wD(s.id + ': Removing event listeners');\n        s._a._added_events = false;\n        for (f in html5_events) {\n          if (html5_events.hasOwnProperty(f)) {\n            remove(f, html5_events[f]);\n          }\n        }\n      };\n\n      /**\r\n       * Pseudo-private event internals\r\n       * ------------------------------\r\n       */\n\n      this._onload = function (nSuccess) {\n        var fN,\n          // check for duration to prevent false positives from flash 8 when loading from cache.\n          loadOK = !!nSuccess || !s.isHTML5 && fV === 8 && s.duration;\n\n        // <d>\n        fN = s.id + ': ';\n        sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), loadOK ? 1 : 2);\n        if (!loadOK && !s.isHTML5) {\n          if (sm2.sandbox.noRemote === true) {\n            sm2._wD(fN + str('noNet'), 1);\n          }\n          if (sm2.sandbox.noLocal === true) {\n            sm2._wD(fN + str('noLocal'), 1);\n          }\n        }\n        // </d>\n\n        s.loaded = loadOK;\n        s.readyState = loadOK ? 3 : 2;\n        s._onbufferchange(0);\n        if (!loadOK && !s.isHTML5) {\n          // note: no error code from Flash.\n          s._onerror();\n        }\n        if (s._iO.onload) {\n          wrapCallback(s, function () {\n            s._iO.onload.apply(s, [loadOK]);\n          });\n        }\n        return true;\n      };\n      this._onerror = function (errorCode, description) {\n        // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\n        if (s._iO.onerror) {\n          wrapCallback(s, function () {\n            s._iO.onerror.apply(s, [errorCode, description]);\n          });\n        }\n      };\n      this._onbufferchange = function (nIsBuffering) {\n        // ignore if not playing\n        if (s.playState === 0) return false;\n        if (nIsBuffering && s.isBuffering || !nIsBuffering && !s.isBuffering) return false;\n        s.isBuffering = nIsBuffering === 1;\n        if (s._iO.onbufferchange) {\n          sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\n          s._iO.onbufferchange.apply(s, [nIsBuffering]);\n        }\n        return true;\n      };\n\n      /**\r\n       * Playback may have stopped due to buffering, or related reason.\r\n       * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n       */\n\n      this._onsuspend = function () {\n        if (s._iO.onsuspend) {\n          sm2._wD(s.id + ': Playback suspended');\n          s._iO.onsuspend.apply(s);\n        }\n        return true;\n      };\n\n      /**\r\n       * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n       * at this point we just recreate failed sounds rather than trying to reconnect\r\n       */\n\n      this._onfailure = function (msg, level, code) {\n        s.failures++;\n        sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\n        if (s._iO.onfailure && s.failures === 1) {\n          s._iO.onfailure(msg, level, code);\n        } else {\n          sm2._wD(s.id + ': Ignoring failure');\n        }\n      };\n\n      /**\r\n       * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n       * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n       */\n\n      this._onwarning = function (msg, level, code) {\n        if (s._iO.onwarning) {\n          s._iO.onwarning(msg, level, code);\n        }\n      };\n      this._onfinish = function () {\n        // store local copy before it gets trashed...\n        var io_onfinish = s._iO.onfinish;\n        s._onbufferchange(0);\n        s._resetOnPosition(0);\n\n        // reset some state items\n        if (s.instanceCount) {\n          s.instanceCount--;\n          if (!s.instanceCount) {\n            // remove onPosition listeners, if any\n            detachOnPosition();\n\n            // reset instance options\n            s.playState = 0;\n            s.paused = false;\n            s.instanceCount = 0;\n            s.instanceOptions = {};\n            s._iO = {};\n            stop_html5_timer();\n\n            // reset position, too\n            if (s.isHTML5) {\n              s.position = 0;\n            }\n          }\n          if (!s.instanceCount || s._iO.multiShotEvents) {\n            // fire onfinish for last, or every instance\n            if (io_onfinish) {\n              sm2._wD(s.id + ': onfinish()');\n              wrapCallback(s, function () {\n                io_onfinish.apply(s);\n              });\n            }\n          }\n        }\n      };\n      this._whileloading = function (nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\n        var instanceOptions = s._iO;\n        s.bytesLoaded = nBytesLoaded;\n        s.bytesTotal = nBytesTotal;\n        s.duration = Math.floor(nDuration);\n        s.bufferLength = nBufferLength;\n        if (!s.isHTML5 && !instanceOptions.isMovieStar) {\n          if (instanceOptions.duration) {\n            // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\n            s.durationEstimate = s.duration > instanceOptions.duration ? s.duration : instanceOptions.duration;\n          } else {\n            s.durationEstimate = parseInt(s.bytesTotal / s.bytesLoaded * s.duration, 10);\n          }\n        } else {\n          s.durationEstimate = s.duration;\n        }\n\n        // for flash, reflect sequential-load-style buffering\n        if (!s.isHTML5) {\n          s.buffered = [{\n            start: 0,\n            end: s.duration\n          }];\n        }\n\n        // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\n        if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\n          instanceOptions.whileloading.apply(s);\n        }\n      };\n      this._whileplaying = function (nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\n        var instanceOptions = s._iO,\n          eqLeft;\n\n        // flash safety net\n        if (isNaN(nPosition) || nPosition === null) return false;\n\n        // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\n        s.position = Math.max(0, nPosition);\n        s._processOnPosition();\n        if (!s.isHTML5 && fV > 8) {\n          if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\n            s.peakData = {\n              left: oPeakData.leftPeak,\n              right: oPeakData.rightPeak\n            };\n          }\n          if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\n            s.waveformData = {\n              left: oWaveformDataLeft.split(','),\n              right: oWaveformDataRight.split(',')\n            };\n          }\n          if (instanceOptions.useEQData) {\n            if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\n              eqLeft = oEQData.leftEQ.split(',');\n              s.eqData = eqLeft;\n              s.eqData.left = eqLeft;\n              if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\n                s.eqData.right = oEQData.rightEQ.split(',');\n              }\n            }\n          }\n        }\n        if (s.playState === 1) {\n          // special case/hack: ensure buffering is false if loading from cache (and not yet started)\n          if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\n            s._onbufferchange(0);\n          }\n          if (instanceOptions.whileplaying) {\n            // flash may call after actual finish\n            instanceOptions.whileplaying.apply(s);\n          }\n        }\n        return true;\n      };\n      this._oncaptiondata = function (oData) {\n        /**\r\n         * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n         *\r\n         * @param {object} oData\r\n         */\n\n        sm2._wD(s.id + ': Caption data received.');\n        s.captiondata = oData;\n        if (s._iO.oncaptiondata) {\n          s._iO.oncaptiondata.apply(s, [oData]);\n        }\n      };\n      this._onmetadata = function (oMDProps, oMDData) {\n        /**\r\n         * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n         * RTMP may include song title, MovieStar content may include encoding info\r\n         *\r\n         * @param {array} oMDProps (names)\r\n         * @param {array} oMDData (values)\r\n         */\n\n        sm2._wD(s.id + ': Metadata received.');\n        var oData = {},\n          i,\n          j;\n        for (i = 0, j = oMDProps.length; i < j; i++) {\n          oData[oMDProps[i]] = oMDData[i];\n        }\n        s.metadata = oData;\n        if (s._iO.onmetadata) {\n          s._iO.onmetadata.call(s, s.metadata);\n        }\n      };\n      this._onid3 = function (oID3Props, oID3Data) {\n        /**\r\n         * internal: flash 8 + flash 9 ID3 feature\r\n         * may include artist, song title etc.\r\n         *\r\n         * @param {array} oID3Props (names)\r\n         * @param {array} oID3Data (values)\r\n         */\n\n        sm2._wD(s.id + ': ID3 data received.');\n        var oData = [],\n          i,\n          j;\n        for (i = 0, j = oID3Props.length; i < j; i++) {\n          oData[oID3Props[i]] = oID3Data[i];\n        }\n        s.id3 = mixin(s.id3, oData);\n        if (s._iO.onid3) {\n          s._iO.onid3.apply(s);\n        }\n      };\n\n      // flash/RTMP-only\n\n      this._onconnect = function (bSuccess) {\n        bSuccess = bSuccess === 1;\n        sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), bSuccess ? 1 : 2);\n        s.connected = bSuccess;\n        if (bSuccess) {\n          s.failures = 0;\n          if (idCheck(s.id)) {\n            if (s.getAutoPlay()) {\n              // only update the play state if auto playing\n              s.play(_undefined, s.getAutoPlay());\n            } else if (s._iO.autoLoad) {\n              s.load();\n            }\n          }\n          if (s._iO.onconnect) {\n            s._iO.onconnect.apply(s, [bSuccess]);\n          }\n        }\n      };\n      this._ondataerror = function (sError) {\n        // flash 9 wave/eq data handler\n        // hack: called at start, and end from flash at/after onfinish()\n        if (s.playState > 0) {\n          sm2._wD(s.id + ': Data error: ' + sError);\n          if (s._iO.ondataerror) {\n            s._iO.ondataerror.apply(s);\n          }\n        }\n      };\n\n      // <d>\n      this._debug();\n      // </d>\n    }; // SMSound()\n\n    /**\r\n     * Private SoundManager internals\r\n     * ------------------------------\r\n     */\n\n    getDocument = function () {\n      return doc.body || doc.getElementsByTagName('div')[0];\n    };\n    id = function (sID) {\n      return doc.getElementById(sID);\n    };\n    mixin = function (oMain, oAdd) {\n      // non-destructive merge\n      var o1 = oMain || {},\n        o2,\n        o;\n\n      // if unspecified, o2 is the default options object\n      o2 = oAdd === _undefined ? sm2.defaultOptions : oAdd;\n      for (o in o2) {\n        if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\n          if (typeof o2[o] !== 'object' || o2[o] === null) {\n            // assign directly\n            o1[o] = o2[o];\n          } else {\n            // recurse through o2\n            o1[o] = mixin(o1[o], o2[o]);\n          }\n        }\n      }\n      return o1;\n    };\n    wrapCallback = function (oSound, callback) {\n      /**\r\n       * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n       * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n       * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n       * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n       * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n       */\n      if (!oSound.isHTML5 && fV === 8) {\n        window.setTimeout(callback, 0);\n      } else {\n        callback();\n      }\n    };\n\n    // additional soundManager properties that soundManager.setup() will accept\n\n    extraOptions = {\n      onready: 1,\n      ontimeout: 1,\n      defaultOptions: 1,\n      flash9Options: 1,\n      movieStarOptions: 1\n    };\n    assign = function (o, oParent) {\n      /**\r\n       * recursive assignment of properties, soundManager.setup() helper\r\n       * allows property assignment based on whitelist\r\n       */\n\n      var i,\n        result = true,\n        hasParent = oParent !== _undefined,\n        setupOptions = sm2.setupOptions,\n        bonusOptions = extraOptions;\n\n      // <d>\n\n      // if soundManager.setup() called, show accepted parameters.\n\n      if (o === _undefined) {\n        result = [];\n        for (i in setupOptions) {\n          if (setupOptions.hasOwnProperty(i)) {\n            result.push(i);\n          }\n        }\n        for (i in bonusOptions) {\n          if (bonusOptions.hasOwnProperty(i)) {\n            if (typeof sm2[i] === 'object') {\n              result.push(i + ': {...}');\n            } else if (sm2[i] instanceof Function) {\n              result.push(i + ': function() {...}');\n            } else {\n              result.push(i);\n            }\n          }\n        }\n        sm2._wD(str('setup', result.join(', ')));\n        return false;\n      }\n\n      // </d>\n\n      for (i in o) {\n        if (o.hasOwnProperty(i)) {\n          // if not an {object} we want to recurse through...\n\n          if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\n            // check \"allowed\" options\n\n            if (hasParent && bonusOptions[oParent] !== _undefined) {\n              // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\n              sm2[oParent][i] = o[i];\n            } else if (setupOptions[i] !== _undefined) {\n              // special case: assign to setupOptions object, which soundManager property references\n              sm2.setupOptions[i] = o[i];\n\n              // assign directly to soundManager, too\n              sm2[i] = o[i];\n            } else if (bonusOptions[i] === _undefined) {\n              // invalid or disallowed parameter. complain.\n              complain(str(sm2[i] === _undefined ? 'setupUndef' : 'setupError', i), 2);\n              result = false;\n            } else if (sm2[i] instanceof Function) {\n              /**\r\n               * valid extraOptions (bonusOptions) parameter.\r\n               * is it a method, like onready/ontimeout? call it.\r\n               * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n               */\n              sm2[i].apply(sm2, o[i] instanceof Array ? o[i] : [o[i]]);\n            } else {\n              // good old-fashioned direct assignment\n              sm2[i] = o[i];\n            }\n          } else if (bonusOptions[i] === _undefined) {\n            // recursion case, eg., { defaultOptions: { ... } }\n\n            // invalid or disallowed parameter. complain.\n            complain(str(sm2[i] === _undefined ? 'setupUndef' : 'setupError', i), 2);\n            result = false;\n          } else {\n            // recurse through object\n            return assign(o[i], i);\n          }\n        }\n      }\n      return result;\n    };\n    function preferFlashCheck(kind) {\n      // whether flash should play a given type\n      return sm2.preferFlash && hasFlash && !sm2.ignoreFlash && sm2.flash[kind] !== _undefined && sm2.flash[kind];\n    }\n\n    /**\r\n     * Internal DOM2-level event helpers\r\n     * ---------------------------------\r\n     */\n\n    event = function () {\n      // normalize event methods\n      var old = window.attachEvent,\n        evt = {\n          add: old ? 'attachEvent' : 'addEventListener',\n          remove: old ? 'detachEvent' : 'removeEventListener'\n        };\n\n      // normalize \"on\" event prefix, optional capture argument\n      function getArgs(oArgs) {\n        var args = slice.call(oArgs),\n          len = args.length;\n        if (old) {\n          // prefix\n          args[1] = 'on' + args[1];\n          if (len > 3) {\n            // no capture\n            args.pop();\n          }\n        } else if (len === 3) {\n          args.push(false);\n        }\n        return args;\n      }\n      function apply(args, sType) {\n        // normalize and call the event method, with the proper arguments\n        var element = args.shift(),\n          method = [evt[sType]];\n        if (old) {\n          // old IE can't do apply().\n          element[method](args[0], args[1]);\n        } else {\n          element[method].apply(element, args);\n        }\n      }\n      function add() {\n        apply(getArgs(arguments), 'add');\n      }\n      function remove() {\n        apply(getArgs(arguments), 'remove');\n      }\n      return {\n        add: add,\n        remove: remove\n      };\n    }();\n\n    /**\r\n     * Internal HTML5 event handling\r\n     * -----------------------------\r\n     */\n\n    function html5_event(oFn) {\n      // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\n\n      return function (e) {\n        var s = this._s,\n          result;\n        if (!s || !s._a) {\n          // <d>\n          if (s && s.id) {\n            sm2._wD(s.id + ': Ignoring ' + e.type);\n          } else {\n            sm2._wD(h5 + 'Ignoring ' + e.type);\n          }\n          // </d>\n          result = null;\n        } else {\n          result = oFn.call(this, e);\n        }\n        return result;\n      };\n    }\n    html5_events = {\n      // HTML5 event-name-to-handler map\n\n      abort: html5_event(function () {\n        sm2._wD(this._s.id + ': abort');\n      }),\n      // enough has loaded to play\n\n      canplay: html5_event(function () {\n        var s = this._s,\n          position1K;\n        if (s._html5_canplay) {\n          // this event has already fired. ignore.\n          return;\n        }\n        s._html5_canplay = true;\n        sm2._wD(s.id + ': canplay');\n        s._onbufferchange(0);\n\n        // position according to instance options\n        position1K = s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null;\n\n        // set the position if position was provided before the sound loaded\n        if (this.currentTime !== position1K) {\n          sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\n          try {\n            this.currentTime = position1K;\n          } catch (ee) {\n            sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\n          }\n        }\n\n        // hack for HTML5 from/to case\n        if (s._iO._oncanplay) {\n          s._iO._oncanplay();\n        }\n      }),\n      canplaythrough: html5_event(function () {\n        var s = this._s;\n        if (!s.loaded) {\n          s._onbufferchange(0);\n          s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\n          s._onload(true);\n        }\n      }),\n      durationchange: html5_event(function () {\n        // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\n\n        var s = this._s,\n          duration;\n        duration = s._get_html5_duration();\n        if (!isNaN(duration) && duration !== s.duration) {\n          sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\n          s.durationEstimate = s.duration = duration;\n        }\n      }),\n      // TODO: Reserved for potential use\n      /*\r\n      emptied: html5_event(function() {\r\n          sm2._wD(this._s.id + ': emptied');\r\n        }),\r\n      */\n\n      ended: html5_event(function () {\n        var s = this._s;\n        sm2._wD(s.id + ': ended');\n        s._onfinish();\n      }),\n      error: html5_event(function () {\n        var description = html5ErrorCodes[this.error.code] || null;\n        sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\n        this._s._onload(false);\n        this._s._onerror(this.error.code, description);\n      }),\n      loadeddata: html5_event(function () {\n        var s = this._s;\n        sm2._wD(s.id + ': loadeddata');\n\n        // safari seems to nicely report progress events, eventually totalling 100%\n        if (!s._loaded && !isSafari) {\n          s.duration = s._get_html5_duration();\n        }\n      }),\n      loadedmetadata: html5_event(function () {\n        sm2._wD(this._s.id + ': loadedmetadata');\n      }),\n      loadstart: html5_event(function () {\n        sm2._wD(this._s.id + ': loadstart');\n        // assume buffering at first\n        this._s._onbufferchange(1);\n      }),\n      play: html5_event(function () {\n        // sm2._wD(this._s.id + ': play()');\n        // once play starts, no buffering\n        this._s._onbufferchange(0);\n      }),\n      playing: html5_event(function () {\n        sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\n        // once play starts, no buffering\n        this._s._onbufferchange(0);\n      }),\n      progress: html5_event(function (e) {\n        // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\n\n        var s = this._s,\n          i,\n          j,\n          progStr,\n          buffered = 0,\n          isProgress = e.type === 'progress',\n          ranges = e.target.buffered,\n          // firefox 3.6 implements e.loaded/total (bytes)\n          loaded = e.loaded || 0,\n          total = e.total || 1;\n\n        // reset the \"buffered\" (loaded byte ranges) array\n        s.buffered = [];\n        if (ranges && ranges.length) {\n          // if loaded is 0, try TimeRanges implementation as % of load\n          // https://developer.mozilla.org/en/DOM/TimeRanges\n\n          // re-build \"buffered\" array\n          // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\n          for (i = 0, j = ranges.length; i < j; i++) {\n            s.buffered.push({\n              start: ranges.start(i) * msecScale,\n              end: ranges.end(i) * msecScale\n            });\n          }\n\n          // use the last value locally\n          buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\n\n          // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\n          loaded = Math.min(1, buffered / (e.target.duration * msecScale));\n\n          // <d>\n          if (isProgress && ranges.length > 1) {\n            progStr = [];\n            j = ranges.length;\n            for (i = 0; i < j; i++) {\n              progStr.push(e.target.buffered.start(i) * msecScale + '-' + e.target.buffered.end(i) * msecScale);\n            }\n            sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\n          }\n          if (isProgress && !isNaN(loaded)) {\n            sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\n          }\n          // </d>\n        }\n        if (!isNaN(loaded)) {\n          // TODO: prevent calls with duplicate values.\n          s._whileloading(loaded, total, s._get_html5_duration());\n          if (loaded && total && loaded === total) {\n            // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\n            html5_events.canplaythrough.call(this, e);\n          }\n        }\n      }),\n      ratechange: html5_event(function () {\n        sm2._wD(this._s.id + ': ratechange');\n      }),\n      suspend: html5_event(function (e) {\n        // download paused/stopped, may have finished (eg. onload)\n        var s = this._s;\n        sm2._wD(this._s.id + ': suspend');\n        html5_events.progress.call(this, e);\n        s._onsuspend();\n      }),\n      stalled: html5_event(function () {\n        sm2._wD(this._s.id + ': stalled');\n      }),\n      timeupdate: html5_event(function () {\n        this._s._onTimer();\n      }),\n      waiting: html5_event(function () {\n        var s = this._s;\n\n        // see also: seeking\n        sm2._wD(this._s.id + ': waiting');\n\n        // playback faster than download rate, etc.\n        s._onbufferchange(1);\n      })\n    };\n    html5OK = function (iO) {\n      // playability test based on URL or MIME type\n\n      var result;\n      if (!iO || !iO.type && !iO.url && !iO.serverURL) {\n        // nothing to check\n        result = false;\n      } else if (iO.serverURL || iO.type && preferFlashCheck(iO.type)) {\n        // RTMP, or preferring flash\n        result = false;\n      } else {\n        // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\n        result = iO.type ? html5CanPlay({\n          type: iO.type\n        }) : html5CanPlay({\n          url: iO.url\n        }) || sm2.html5Only || iO.url.match(/data:/i);\n      }\n      return result;\n    };\n    html5Unload = function (oAudio) {\n      /**\r\n       * Internal method: Unload media, and cancel any current/pending network requests.\r\n       * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n       * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n       * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n       * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n       */\n\n      var url;\n      if (oAudio) {\n        // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\n        // Desktop Safari complains / fails on data: URI, so it gets about:blank.\n        url = isSafari ? emptyURL : sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL;\n        oAudio.src = url;\n\n        // reset some state, too\n        if (oAudio._called_unload !== _undefined) {\n          oAudio._called_load = false;\n        }\n      }\n      if (useGlobalHTML5Audio) {\n        // ensure URL state is trashed, also\n        lastGlobalHTML5URL = null;\n      }\n      return url;\n    };\n    html5CanPlay = function (o) {\n      /**\r\n       * Try to find MIME, test and return truthiness\r\n       * o = {\r\n       *  url: '/path/to/an.mp3',\r\n       *  type: 'audio/mp3'\r\n       * }\r\n       */\n\n      if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\n      var url = o.url || null,\n        mime = o.type || null,\n        aF = sm2.audioFormats,\n        result,\n        offset,\n        fileExt,\n        item;\n\n      // account for known cases like audio/mp3\n\n      if (mime && sm2.html5[mime] !== _undefined) return sm2.html5[mime] && !preferFlashCheck(mime);\n      if (!html5Ext) {\n        html5Ext = [];\n        for (item in aF) {\n          if (aF.hasOwnProperty(item)) {\n            html5Ext.push(item);\n            if (aF[item].related) {\n              html5Ext = html5Ext.concat(aF[item].related);\n            }\n          }\n        }\n        html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\n      }\n\n      // TODO: Strip URL queries, etc.\n      fileExt = url ? url.toLowerCase().match(html5Ext) : null;\n      if (!fileExt || !fileExt.length) {\n        if (!mime) {\n          result = false;\n        } else {\n          // audio/mp3 -> mp3, result should be known\n          offset = mime.indexOf(';');\n\n          // strip \"audio/X; codecs...\"\n          fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\n        }\n      } else {\n        // match the raw extension name - \"mp3\", for example\n        fileExt = fileExt[1];\n      }\n      if (fileExt && sm2.html5[fileExt] !== _undefined) {\n        // result known\n        result = sm2.html5[fileExt] && !preferFlashCheck(fileExt);\n      } else {\n        mime = 'audio/' + fileExt;\n        result = sm2.html5.canPlayType({\n          type: mime\n        });\n        sm2.html5[fileExt] = result;\n\n        // sm2._wD('canPlayType, found result: ' + result);\n        result = result && sm2.html5[mime] && !preferFlashCheck(mime);\n      }\n      return result;\n    };\n    testHTML5 = function () {\n      /**\r\n       * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n       * assigns results to html5[] and flash[].\r\n       */\n\n      if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\n        // without HTML5, we need Flash.\n        sm2.html5.usingFlash = true;\n        needsFlash = true;\n        return false;\n      }\n\n      // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\n      var a = Audio !== _undefined ? isOpera && opera.version() < 10 ? new Audio(null) : new Audio() : null,\n        item,\n        lookup,\n        support = {},\n        aF,\n        i;\n      function cp(m) {\n        var canPlay,\n          j,\n          result = false,\n          isOK = false;\n        if (!a || typeof a.canPlayType !== 'function') return result;\n        if (m instanceof Array) {\n          // iterate through all mime types, return any successes\n\n          for (i = 0, j = m.length; i < j; i++) {\n            if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\n              isOK = true;\n              sm2.html5[m[i]] = true;\n\n              // note flash support, too\n              sm2.flash[m[i]] = !!m[i].match(flashMIME);\n            }\n          }\n          result = isOK;\n        } else {\n          canPlay = a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false;\n          result = !!(canPlay && canPlay.match(sm2.html5Test));\n        }\n        return result;\n      }\n\n      // test all registered formats + codecs\n\n      aF = sm2.audioFormats;\n      for (item in aF) {\n        if (aF.hasOwnProperty(item)) {\n          lookup = 'audio/' + item;\n          support[item] = cp(aF[item].type);\n\n          // write back generic type too, eg. audio/mp3\n          support[lookup] = support[item];\n\n          // assign flash\n          if (item.match(flashMIME)) {\n            sm2.flash[item] = true;\n            sm2.flash[lookup] = true;\n          } else {\n            sm2.flash[item] = false;\n            sm2.flash[lookup] = false;\n          }\n\n          // assign result to related formats, too\n\n          if (aF[item] && aF[item].related) {\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\n              // eg. audio/m4a\n              support['audio/' + aF[item].related[i]] = support[item];\n              sm2.html5[aF[item].related[i]] = support[item];\n              sm2.flash[aF[item].related[i]] = support[item];\n            }\n          }\n        }\n      }\n      support.canPlayType = a ? cp : null;\n      sm2.html5 = mixin(sm2.html5, support);\n      sm2.html5.usingFlash = featureCheck();\n      needsFlash = sm2.html5.usingFlash;\n      return true;\n    };\n    strings = {\n      // <d>\n      notReady: 'Unavailable - wait until onready() has fired.',\n      notOK: 'Audio support is not available.',\n      domError: sm + 'exception caught while appending SWF to DOM.',\n      spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\n      swf404: smc + 'Verify that %s is a valid path.',\n      tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\n      checkSWF: 'See SWF output for more debug info.',\n      localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\n      waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\n      waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\n      waitSWF: smc + 'Waiting for 100% SWF load...',\n      needFunction: smc + 'Function object expected for %s',\n      badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\n      currentObj: smc + '_debug(): Current sound objects',\n      waitOnload: smc + 'Waiting for window.onload()',\n      docLoaded: smc + 'Document already loaded',\n      onload: smc + 'initComplete(): calling soundManager.onload()',\n      onloadOK: sm + '.onload() complete',\n      didInit: smc + 'init(): Already called?',\n      secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\n      badRemove: smc + 'Failed to remove Flash node.',\n      shutdown: sm + '.disable(): Shutting down',\n      queue: smc + 'Queueing %s handler',\n      smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\n      fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\n      fbLoaded: 'Flash loaded',\n      fbHandler: smc + 'flashBlockHandler()',\n      manURL: 'SMSound.load(): Using manually-assigned URL',\n      onURL: sm + '.load(): current URL already assigned.',\n      badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\n      as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\n      noNSLoop: 'Note: Looping not implemented for MovieStar formats',\n      needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\n      mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\n      needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\n      gotFocus: smc + 'Got window focus.',\n      policy: 'Enabling usePolicyFile for data access',\n      setup: sm + '.setup(): allowed parameters: %s',\n      setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\n      setupUndef: sm + '.setup(): Could not find option \"%s\"',\n      setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\n      noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\n      sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\n      reset: sm + '.reset(): Removing event callbacks',\n      mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\n      globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\n      ignoreMobile: 'Ignoring mobile restrictions for this device.'\n      // </d>\n    };\n    str = function () {\n      // internal string replace helper.\n      // arguments: o [,items to replace]\n      // <d>\n\n      var args, i, j, o, sstr;\n\n      // real array, please\n      args = slice.call(arguments);\n\n      // first argument\n      o = args.shift();\n      sstr = strings && strings[o] ? strings[o] : '';\n      if (sstr && args && args.length) {\n        for (i = 0, j = args.length; i < j; i++) {\n          sstr = sstr.replace('%s', args[i]);\n        }\n      }\n      return sstr;\n      // </d>\n    };\n    loopFix = function (sOpt) {\n      // flash 8 requires stream = false for looping to work\n      if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\n        _wDS('as2loop');\n        sOpt.stream = false;\n      }\n      return sOpt;\n    };\n    policyFix = function (sOpt, sPre) {\n      if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\n        sm2._wD((sPre || '') + str('policy'));\n        sOpt.usePolicyFile = true;\n      }\n      return sOpt;\n    };\n    complain = function (sMsg) {\n      // <d>\n      if (hasConsole && console.warn !== _undefined) {\n        console.warn(sMsg);\n      } else {\n        sm2._wD(sMsg);\n      }\n      // </d>\n    };\n    doNothing = function () {\n      return false;\n    };\n    disableObject = function (o) {\n      var oProp;\n      for (oProp in o) {\n        if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\n          o[oProp] = doNothing;\n        }\n      }\n      oProp = null;\n    };\n    failSafely = function (bNoDisable) {\n      // general failure exception handler\n\n      if (bNoDisable === _undefined) {\n        bNoDisable = false;\n      }\n      if (disabled || bNoDisable) {\n        sm2.disable(bNoDisable);\n      }\n    };\n    normalizeMovieURL = function (movieURL) {\n      var urlParams = null,\n        url;\n      if (movieURL) {\n        if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\n          urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4);\n\n          // assume user knows what they're doing\n          if (urlParams) return movieURL;\n        } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\n          // append trailing slash, if needed\n          movieURL += '/';\n        }\n      }\n      url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\n      if (sm2.noSWFCache) {\n        url += '?ts=' + new Date().getTime();\n      }\n      return url;\n    };\n    setVersionInfo = function () {\n      // short-hand for internal use\n\n      fV = parseInt(sm2.flashVersion, 10);\n      if (fV !== 8 && fV !== 9) {\n        sm2._wD(str('badFV', fV, defaultFlashVersion));\n        sm2.flashVersion = fV = defaultFlashVersion;\n      }\n\n      // debug flash movie, if applicable\n\n      var isDebug = sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf';\n      if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\n        sm2._wD(str('needfl9'));\n        sm2.flashVersion = fV = 9;\n      }\n      sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)');\n\n      // set up default options\n      if (fV > 8) {\n        // +flash 9 base options\n        sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\n        sm2.features.buffering = true;\n\n        // +moviestar support\n        sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\n        sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\n        sm2.features.movieStar = true;\n      } else {\n        sm2.features.movieStar = false;\n      }\n\n      // regExp for flash canPlay(), etc.\n      sm2.filePattern = sm2.filePatterns[fV !== 8 ? 'flash9' : 'flash8'];\n\n      // if applicable, use _debug versions of SWFs\n      sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\n      sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = fV > 8;\n    };\n    setPolling = function (bPolling, bHighPerformance) {\n      if (!flash) {\n        return;\n      }\n      flash._setPolling(bPolling, bHighPerformance);\n    };\n    initDebug = function () {\n      // starts debug mode, creating output <div> for UAs without console object\n\n      // allow force of debug mode via URL\n      // <d>\n      if (sm2.debugURLParam.test(wl)) {\n        sm2.setupOptions.debugMode = sm2.debugMode = true;\n      }\n      if (id(sm2.debugID)) {\n        return;\n      }\n      var oD, oDebug, oTarget, oToggle, tmp;\n      if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\n        oD = doc.createElement('div');\n        oD.id = sm2.debugID + '-toggle';\n        oToggle = {\n          position: 'fixed',\n          bottom: '0px',\n          right: '0px',\n          width: '1.2em',\n          height: '1.2em',\n          lineHeight: '1.2em',\n          margin: '2px',\n          textAlign: 'center',\n          border: '1px solid #999',\n          cursor: 'pointer',\n          background: '#fff',\n          color: '#333',\n          zIndex: 10001\n        };\n        oD.appendChild(doc.createTextNode('-'));\n        oD.onclick = toggleDebug;\n        oD.title = 'Toggle SM2 debug console';\n        if (ua.match(/msie 6/i)) {\n          oD.style.position = 'absolute';\n          oD.style.cursor = 'hand';\n        }\n        for (tmp in oToggle) {\n          if (oToggle.hasOwnProperty(tmp)) {\n            oD.style[tmp] = oToggle[tmp];\n          }\n        }\n        oDebug = doc.createElement('div');\n        oDebug.id = sm2.debugID;\n        oDebug.style.display = sm2.debugMode ? 'block' : 'none';\n        if (sm2.debugMode && !id(oD.id)) {\n          try {\n            oTarget = getDocument();\n            oTarget.appendChild(oD);\n          } catch (e2) {\n            throw new Error(str('domError') + ' \\n' + e2.toString());\n          }\n          oTarget.appendChild(oDebug);\n        }\n      }\n      oTarget = null;\n      // </d>\n    };\n    idCheck = this.getSoundById;\n\n    // <d>\n    _wDS = function (o, errorLevel) {\n      return !o ? '' : sm2._wD(str(o), errorLevel);\n    };\n    toggleDebug = function () {\n      var o = id(sm2.debugID),\n        oT = id(sm2.debugID + '-toggle');\n      if (!o) {\n        return;\n      }\n      if (debugOpen) {\n        // minimize\n        oT.innerHTML = '+';\n        o.style.display = 'none';\n      } else {\n        oT.innerHTML = '-';\n        o.style.display = 'block';\n      }\n      debugOpen = !debugOpen;\n    };\n    debugTS = function (sEventType, bSuccess, sMessage) {\n      // troubleshooter debug hooks\n\n      if (window.sm2Debugger !== _undefined) {\n        try {\n          sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\n        } catch (e) {\n          // oh well\n          return false;\n        }\n      }\n      return true;\n    };\n    // </d>\n\n    getSWFCSS = function () {\n      var css = [];\n      if (sm2.debugMode) {\n        css.push(swfCSS.sm2Debug);\n      }\n      if (sm2.debugFlash) {\n        css.push(swfCSS.flashDebug);\n      }\n      if (sm2.useHighPerformance) {\n        css.push(swfCSS.highPerf);\n      }\n      return css.join(' ');\n    };\n    flashBlockHandler = function () {\n      // *possible* flash block situation.\n\n      var name = str('fbHandler'),\n        p = sm2.getMoviePercent(),\n        css = swfCSS,\n        error = {\n          type: 'FLASHBLOCK'\n        };\n      if (sm2.html5Only) {\n        // no flash, or unused\n        return;\n      }\n      if (!sm2.ok()) {\n        if (needsFlash) {\n          // make the movie more visible, so user can fix\n          sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\n          sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\n        }\n        sm2.didFlashBlock = true;\n\n        // fire onready(), complain lightly\n        processOnEvents({\n          type: 'ontimeout',\n          ignoreInit: true,\n          error: error\n        });\n        catchError(error);\n      } else {\n        // SM2 loaded OK (or recovered)\n\n        // <d>\n        if (sm2.didFlashBlock) {\n          sm2._wD(name + ': Unblocked');\n        }\n        // </d>\n\n        if (sm2.oMC) {\n          sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\n        }\n      }\n    };\n    addOnEvent = function (sType, oMethod, oScope) {\n      if (on_queue[sType] === _undefined) {\n        on_queue[sType] = [];\n      }\n      on_queue[sType].push({\n        method: oMethod,\n        scope: oScope || null,\n        fired: false\n      });\n    };\n    processOnEvents = function (oOptions) {\n      // if unspecified, assume OK/error\n\n      if (!oOptions) {\n        oOptions = {\n          type: sm2.ok() ? 'onready' : 'ontimeout'\n        };\n      }\n\n      // not ready yet.\n      if (!didInit && oOptions && !oOptions.ignoreInit) return false;\n\n      // invalid case\n      if (oOptions.type === 'ontimeout' && (sm2.ok() || disabled && !oOptions.ignoreInit)) return false;\n      var status = {\n          success: oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled\n        },\n        // queue specified by type, or none\n        srcQueue = oOptions && oOptions.type ? on_queue[oOptions.type] || [] : [],\n        queue = [],\n        i,\n        j,\n        args = [status],\n        canRetry = needsFlash && !sm2.ok();\n      if (oOptions.error) {\n        args[0].error = oOptions.error;\n      }\n      for (i = 0, j = srcQueue.length; i < j; i++) {\n        if (srcQueue[i].fired !== true) {\n          queue.push(srcQueue[i]);\n        }\n      }\n      if (queue.length) {\n        // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\n        for (i = 0, j = queue.length; i < j; i++) {\n          if (queue[i].scope) {\n            queue[i].method.apply(queue[i].scope, args);\n          } else {\n            queue[i].method.apply(this, args);\n          }\n          if (!canRetry) {\n            // useFlashBlock and SWF timeout case doesn't count here.\n            queue[i].fired = true;\n          }\n        }\n      }\n      return true;\n    };\n    initUserOnload = function () {\n      window.setTimeout(function () {\n        if (sm2.useFlashBlock) {\n          flashBlockHandler();\n        }\n        processOnEvents();\n\n        // call user-defined \"onload\", scoped to window\n\n        if (typeof sm2.onload === 'function') {\n          _wDS('onload', 1);\n          sm2.onload.apply(window);\n          _wDS('onloadOK', 1);\n        }\n        if (sm2.waitForWindowLoad) {\n          event.add(window, 'load', initUserOnload);\n        }\n      }, 1);\n    };\n    detectFlash = function () {\n      /**\r\n       * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n       * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n       */\n\n      // this work has already been done.\n      if (hasFlash !== _undefined) return hasFlash;\n      var hasPlugin = false,\n        n = navigator,\n        obj,\n        type,\n        types,\n        AX = window.ActiveXObject;\n\n      // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\n      var nP;\n      try {\n        nP = n.plugins;\n      } catch (e) {\n        nP = undefined;\n      }\n      if (nP && nP.length) {\n        type = 'application/x-shockwave-flash';\n        types = n.mimeTypes;\n        if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\n          hasPlugin = true;\n        }\n      } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\n        // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\n        try {\n          obj = new AX('ShockwaveFlash.ShockwaveFlash');\n        } catch (e) {\n          // oh well\n          obj = null;\n        }\n        hasPlugin = !!obj;\n\n        // cleanup, because it is ActiveX after all\n        obj = null;\n      }\n      hasFlash = hasPlugin;\n      return hasPlugin;\n    };\n    featureCheck = function () {\n      var flashNeeded,\n        item,\n        formats = sm2.audioFormats,\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\n        isSpecial = is_iDevice && !!ua.match(/os (1|2|3_0|3_1)\\s/i);\n      if (isSpecial) {\n        // has Audio(), but is broken; let it load links directly.\n        sm2.hasHTML5 = false;\n\n        // ignore flash case, however\n        sm2.html5Only = true;\n\n        // hide the SWF, if present\n        if (sm2.oMC) {\n          sm2.oMC.style.display = 'none';\n        }\n      } else if (sm2.useHTML5Audio) {\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\n          sm2.hasHTML5 = false;\n        }\n\n        // <d>\n        if (isBadSafari) {\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\n        }\n        // </d>\n      }\n      if (sm2.useHTML5Audio && sm2.hasHTML5) {\n        // sort out whether flash is optional, required or can be ignored.\n\n        // innocent until proven guilty.\n        canIgnoreFlash = true;\n        for (item in formats) {\n          if (formats.hasOwnProperty(item)) {\n            if (formats[item].required) {\n              if (!sm2.html5.canPlayType(formats[item].type)) {\n                // 100% HTML5 mode is not possible.\n                canIgnoreFlash = false;\n                flashNeeded = true;\n              } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\n                // flash may be required, or preferred for this format.\n                flashNeeded = true;\n              }\n            }\n          }\n        }\n      }\n\n      // sanity check...\n      if (sm2.ignoreFlash) {\n        flashNeeded = false;\n        canIgnoreFlash = true;\n      }\n      sm2.html5Only = sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded;\n      return !sm2.html5Only;\n    };\n    parseURL = function (url) {\n      /**\r\n       * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n       * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n       */\n\n      var i,\n        j,\n        urlResult = 0,\n        result;\n      if (url instanceof Array) {\n        // find the first good one\n        for (i = 0, j = url.length; i < j; i++) {\n          if (url[i] instanceof Object) {\n            // MIME check\n            if (sm2.canPlayMIME(url[i].type)) {\n              urlResult = i;\n              break;\n            }\n          } else if (sm2.canPlayURL(url[i])) {\n            // URL string check\n            urlResult = i;\n            break;\n          }\n        }\n\n        // normalize to string\n        if (url[urlResult].url) {\n          url[urlResult] = url[urlResult].url;\n        }\n        result = url[urlResult];\n      } else {\n        // single URL case\n        result = url;\n      }\n      return result;\n    };\n    startTimer = function (oSound) {\n      /**\r\n       * attach a timer to this sound, and start an interval if needed\r\n       */\n\n      if (!oSound._hasTimer) {\n        oSound._hasTimer = true;\n        if (!mobileHTML5 && sm2.html5PollingInterval) {\n          if (h5IntervalTimer === null && h5TimerCount === 0) {\n            h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\n          }\n          h5TimerCount++;\n        }\n      }\n    };\n    stopTimer = function (oSound) {\n      /**\r\n       * detach a timer\r\n       */\n\n      if (oSound._hasTimer) {\n        oSound._hasTimer = false;\n        if (!mobileHTML5 && sm2.html5PollingInterval) {\n          // interval will stop itself at next execution.\n\n          h5TimerCount--;\n        }\n      }\n    };\n    timerExecute = function () {\n      /**\r\n       * manual polling for HTML5 progress events, ie., whileplaying()\r\n       * (can achieve greater precision than conservative default HTML5 interval)\r\n       */\n\n      var i;\n      if (h5IntervalTimer !== null && !h5TimerCount) {\n        // no active timers, stop polling interval.\n\n        clearInterval(h5IntervalTimer);\n        h5IntervalTimer = null;\n        return;\n      }\n\n      // check all HTML5 sounds with timers\n\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\n        if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\n          sm2.sounds[sm2.soundIDs[i]]._onTimer();\n        }\n      }\n    };\n    catchError = function (options) {\n      options = options !== _undefined ? options : {};\n      if (typeof sm2.onerror === 'function') {\n        sm2.onerror.apply(window, [{\n          type: options.type !== _undefined ? options.type : null\n        }]);\n      }\n      if (options.fatal !== _undefined && options.fatal) {\n        sm2.disable();\n      }\n    };\n    badSafariFix = function () {\n      // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\n      if (!isBadSafari || !detectFlash()) {\n        // doesn't apply\n        return;\n      }\n      var aF = sm2.audioFormats,\n        i,\n        item;\n      for (item in aF) {\n        if (aF.hasOwnProperty(item)) {\n          if (item === 'mp3' || item === 'mp4') {\n            sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\n            sm2.html5[item] = false;\n\n            // assign result to related formats, too\n            if (aF[item] && aF[item].related) {\n              for (i = aF[item].related.length - 1; i >= 0; i--) {\n                sm2.html5[aF[item].related[i]] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    /**\r\n     * Pseudo-private flash/ExternalInterface methods\r\n     * ----------------------------------------------\r\n     */\n\n    this._setSandboxType = function (sandboxType) {\n      // <d>\n      // Security sandbox according to Flash plugin\n      var sb = sm2.sandbox;\n      sb.type = sandboxType;\n      sb.description = sb.types[sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown'];\n      if (sb.type === 'localWithFile') {\n        sb.noRemote = true;\n        sb.noLocal = false;\n        _wDS('secNote', 2);\n      } else if (sb.type === 'localWithNetwork') {\n        sb.noRemote = false;\n        sb.noLocal = true;\n      } else if (sb.type === 'localTrusted') {\n        sb.noRemote = false;\n        sb.noLocal = false;\n      }\n      // </d>\n    };\n    this._externalInterfaceOK = function (swfVersion) {\n      // flash callback confirming flash loaded, EI working etc.\n      // swfVersion: SWF build string\n\n      if (sm2.swfLoaded) {\n        return;\n      }\n      var e;\n      debugTS('swf', true);\n      debugTS('flashtojs', true);\n      sm2.swfLoaded = true;\n      tryInitOnFocus = false;\n      if (isBadSafari) {\n        badSafariFix();\n      }\n\n      // complain if JS + SWF build/version strings don't match, excluding +DEV builds\n      // <d>\n      if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\n        e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\n\n        // escape flash -> JS stack so this error fires in window.\n        setTimeout(function () {\n          throw new Error(e);\n        }, 0);\n\n        // exit, init will fail with timeout\n        return;\n      }\n      // </d>\n\n      // IE needs a larger timeout\n      setTimeout(init, isIE ? 100 : 1);\n    };\n\n    /**\r\n     * Private initialization helpers\r\n     * ------------------------------\r\n     */\n\n    createMovie = function (movieID, movieURL) {\n      // ignore if already connected\n      if (didAppend && appendSuccess) return false;\n      function initMsg() {\n        // <d>\n\n        var options = [],\n          title,\n          msg = [],\n          delimiter = ' + ';\n        title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support' : '');\n        if (!sm2.html5Only) {\n          if (sm2.preferFlash) {\n            options.push('preferFlash');\n          }\n          if (sm2.useHighPerformance) {\n            options.push('useHighPerformance');\n          }\n          if (sm2.flashPollingInterval) {\n            options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\n          }\n          if (sm2.html5PollingInterval) {\n            options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n          }\n          if (sm2.wmode) {\n            options.push('wmode (' + sm2.wmode + ')');\n          }\n          if (sm2.debugFlash) {\n            options.push('debugFlash');\n          }\n          if (sm2.useFlashBlock) {\n            options.push('flashBlock');\n          }\n        } else if (sm2.html5PollingInterval) {\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\n        }\n        if (options.length) {\n          msg = msg.concat([options.join(delimiter)]);\n        }\n        sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\n        showSupport();\n\n        // </d>\n      }\n      if (sm2.html5Only) {\n        // 100% HTML5 mode\n        setVersionInfo();\n        initMsg();\n        sm2.oMC = id(sm2.movieID);\n        init();\n\n        // prevent multiple init attempts\n        didAppend = true;\n        appendSuccess = true;\n        return false;\n      }\n\n      // flash path\n      var remoteURL = movieURL || sm2.url,\n        localURL = sm2.altURL || remoteURL,\n        swfTitle = 'JS/Flash audio component (SoundManager 2)',\n        oTarget = getDocument(),\n        extraClass = getSWFCSS(),\n        isRTL = null,\n        html = doc.getElementsByTagName('html')[0],\n        oEmbed,\n        oMovie,\n        tmp,\n        movieHTML,\n        oEl,\n        s,\n        x,\n        sClass;\n      isRTL = html && html.dir && html.dir.match(/rtl/i);\n      movieID = movieID === _undefined ? sm2.id : movieID;\n      function param(name, value) {\n        return '<param name=\"' + name + '\" value=\"' + value + '\" />';\n      }\n\n      // safety check for legacy (change to Flash 9 URL)\n      setVersionInfo();\n      sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\n      movieURL = sm2.url;\n      sm2.wmode = !sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode;\n      if (sm2.wmode !== null && (ua.match(/msie 8/i) || !isIE && !sm2.useHighPerformance) && navigator.platform.match(/win32|win64/i)) {\n        /**\r\n         * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n         * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n         * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n         */\n        messages.push(strings.spcWmode);\n        sm2.wmode = null;\n      }\n      oEmbed = {\n        name: movieID,\n        id: movieID,\n        src: movieURL,\n        quality: 'high',\n        allowScriptAccess: sm2.allowScriptAccess,\n        bgcolor: sm2.bgColor,\n        pluginspage: http + 'www.macromedia.com/go/getflashplayer',\n        title: swfTitle,\n        type: 'application/x-shockwave-flash',\n        wmode: sm2.wmode,\n        // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\n        hasPriority: 'true'\n      };\n      if (sm2.debugFlash) {\n        oEmbed.FlashVars = 'debug=1';\n      }\n      if (!sm2.wmode) {\n        // don't write empty attribute\n        delete oEmbed.wmode;\n      }\n      if (isIE) {\n        // IE is \"special\".\n        oMovie = doc.createElement('div');\n        movieHTML = ['<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">', param('movie', movieURL), param('AllowScriptAccess', sm2.allowScriptAccess), param('quality', oEmbed.quality), sm2.wmode ? param('wmode', sm2.wmode) : '', param('bgcolor', sm2.bgColor), param('hasPriority', 'true'), sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : '', '</object>'].join('');\n      } else {\n        oMovie = doc.createElement('embed');\n        for (tmp in oEmbed) {\n          if (oEmbed.hasOwnProperty(tmp)) {\n            oMovie.setAttribute(tmp, oEmbed[tmp]);\n          }\n        }\n      }\n      initDebug();\n      extraClass = getSWFCSS();\n      oTarget = getDocument();\n      if (oTarget) {\n        sm2.oMC = id(sm2.movieID) || doc.createElement('div');\n        if (!sm2.oMC.id) {\n          sm2.oMC.id = sm2.movieID;\n          sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\n          s = null;\n          oEl = null;\n          if (!sm2.useFlashBlock) {\n            if (sm2.useHighPerformance) {\n              // on-screen at all times\n              s = {\n                position: 'fixed',\n                width: '8px',\n                height: '8px',\n                // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\n                bottom: '0px',\n                left: '0px',\n                overflow: 'hidden'\n              };\n            } else {\n              // hide off-screen, lower priority\n              s = {\n                position: 'absolute',\n                width: '6px',\n                height: '6px',\n                top: '-9999px',\n                left: '-9999px'\n              };\n              if (isRTL) {\n                s.left = Math.abs(parseInt(s.left, 10)) + 'px';\n              }\n            }\n          }\n          if (isWebkit) {\n            // soundcloud-reported render/crash fix, safari 5\n            sm2.oMC.style.zIndex = 10000;\n          }\n          if (!sm2.debugFlash) {\n            for (x in s) {\n              if (s.hasOwnProperty(x)) {\n                sm2.oMC.style[x] = s[x];\n              }\n            }\n          }\n          try {\n            if (!isIE) {\n              sm2.oMC.appendChild(oMovie);\n            }\n            oTarget.appendChild(sm2.oMC);\n            if (isIE) {\n              oEl = sm2.oMC.appendChild(doc.createElement('div'));\n              oEl.className = swfCSS.swfBox;\n              oEl.innerHTML = movieHTML;\n            }\n            appendSuccess = true;\n          } catch (e) {\n            throw new Error(str('domError') + ' \\n' + e.toString());\n          }\n        } else {\n          // SM2 container is already in the document (eg. flashblock use case)\n          sClass = sm2.oMC.className;\n          sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\n          sm2.oMC.appendChild(oMovie);\n          if (isIE) {\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\n            oEl.className = swfCSS.swfBox;\n            oEl.innerHTML = movieHTML;\n          }\n          appendSuccess = true;\n        }\n      }\n      didAppend = true;\n      initMsg();\n\n      // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\n\n      return true;\n    };\n    initMovie = function () {\n      if (sm2.html5Only) {\n        createMovie();\n        return false;\n      }\n\n      // attempt to get, or create, movie (may already exist)\n      if (flash) return false;\n      if (!sm2.url) {\n        /**\r\n         * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n         * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n         * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n         */\n\n        _wDS('noURL');\n        return false;\n      }\n\n      // inline markup case\n      flash = sm2.getMovie(sm2.id);\n      if (!flash) {\n        if (!oRemoved) {\n          // try to create\n          createMovie(sm2.id, sm2.url);\n        } else {\n          // try to re-append removed movie after reboot()\n          if (!isIE) {\n            sm2.oMC.appendChild(oRemoved);\n          } else {\n            sm2.oMC.innerHTML = oRemovedHTML;\n          }\n          oRemoved = null;\n          didAppend = true;\n        }\n        flash = sm2.getMovie(sm2.id);\n      }\n      if (typeof sm2.oninitmovie === 'function') {\n        setTimeout(sm2.oninitmovie, 1);\n      }\n\n      // <d>\n      flushMessages();\n      // </d>\n\n      return true;\n    };\n    delayWaitForEI = function () {\n      setTimeout(waitForEI, 1000);\n    };\n    rebootIntoHTML5 = function () {\n      // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\n\n      window.setTimeout(function () {\n        complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\n        sm2.setup({\n          preferFlash: false\n        }).reboot();\n\n        // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\n        sm2.didFlashBlock = true;\n        sm2.beginDelayedInit();\n      }, 1);\n    };\n    waitForEI = function () {\n      var p,\n        loadIncomplete = false;\n      if (!sm2.url) {\n        // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\n        return;\n      }\n      if (waitingForEI) {\n        return;\n      }\n      waitingForEI = true;\n      event.remove(window, 'load', delayWaitForEI);\n      if (hasFlash && tryInitOnFocus && !isFocused) {\n        // Safari won't load flash in background tabs, only when focused.\n        _wDS('waitFocus');\n        return;\n      }\n      if (!didInit) {\n        p = sm2.getMoviePercent();\n        if (p > 0 && p < 100) {\n          loadIncomplete = true;\n        }\n      }\n      setTimeout(function () {\n        p = sm2.getMoviePercent();\n        if (loadIncomplete) {\n          // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\n          waitingForEI = false;\n          sm2._wD(str('waitSWF'));\n          window.setTimeout(delayWaitForEI, 1);\n          return;\n        }\n\n        // <d>\n        if (!didInit) {\n          sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\n          if (!overHTTP && p) {\n            _wDS('localFail', 2);\n            if (!sm2.debugFlash) {\n              _wDS('tryDebug', 2);\n            }\n          }\n          if (p === 0) {\n            // if 0 (not null), probably a 404.\n            sm2._wD(str('swf404', sm2.url), 1);\n          }\n          debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\n        }\n        // </d>\n\n        // give up / time-out, depending\n\n        if (!didInit && okToDisable) {\n          if (p === null) {\n            // SWF failed to report load progress. Possibly blocked.\n\n            if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\n              if (sm2.useFlashBlock) {\n                flashBlockHandler();\n              }\n              _wDS('waitForever');\n            } else if (!sm2.useFlashBlock && canIgnoreFlash) {\n              // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\n              rebootIntoHTML5();\n            } else {\n              _wDS('waitForever');\n\n              // fire any regular registered ontimeout() listeners.\n              processOnEvents({\n                type: 'ontimeout',\n                ignoreInit: true,\n                error: {\n                  type: 'INIT_FLASHBLOCK'\n                }\n              });\n            }\n          } else if (sm2.flashLoadTimeout === 0) {\n            // SWF loaded? Shouldn't be a blocking issue, then.\n\n            _wDS('waitForever');\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\n            rebootIntoHTML5();\n          } else {\n            failSafely(true);\n          }\n        }\n      }, sm2.flashLoadTimeout);\n    };\n    handleFocus = function () {\n      function cleanup() {\n        event.remove(window, 'focus', handleFocus);\n      }\n      if (isFocused || !tryInitOnFocus) {\n        // already focused, or not special Safari background tab case\n        cleanup();\n        return true;\n      }\n      okToDisable = true;\n      isFocused = true;\n      _wDS('gotFocus');\n\n      // allow init to restart\n      waitingForEI = false;\n\n      // kick off ExternalInterface timeout, now that the SWF has started\n      delayWaitForEI();\n      cleanup();\n      return true;\n    };\n    flushMessages = function () {\n      // <d>\n\n      // SM2 pre-init debug messages\n      if (messages.length) {\n        sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\n        messages = [];\n      }\n\n      // </d>\n    };\n    showSupport = function () {\n      // <d>\n\n      flushMessages();\n      var item,\n        tests = [];\n      if (sm2.useHTML5Audio && sm2.hasHTML5) {\n        for (item in sm2.audioFormats) {\n          if (sm2.audioFormats.hasOwnProperty(item)) {\n            tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : !sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''));\n          }\n        }\n        sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\n      }\n\n      // </d>\n    };\n    initComplete = function (bNoDisable) {\n      if (didInit) return false;\n      if (sm2.html5Only) {\n        // all good.\n        _wDS('sm2Loaded', 1);\n        didInit = true;\n        initUserOnload();\n        debugTS('onload', true);\n        return true;\n      }\n      var wasTimeout = sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent(),\n        result = true,\n        error;\n      if (!wasTimeout) {\n        didInit = true;\n      }\n      error = {\n        type: !hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT'\n      };\n      sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\n      if (disabled || bNoDisable) {\n        if (sm2.useFlashBlock && sm2.oMC) {\n          sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\n        }\n        processOnEvents({\n          type: 'ontimeout',\n          error: error,\n          ignoreInit: true\n        });\n        debugTS('onload', false);\n        catchError(error);\n        result = false;\n      } else {\n        debugTS('onload', true);\n      }\n      if (!disabled) {\n        if (sm2.waitForWindowLoad && !windowLoaded) {\n          _wDS('waitOnload');\n          event.add(window, 'load', initUserOnload);\n        } else {\n          // <d>\n          if (sm2.waitForWindowLoad && windowLoaded) {\n            _wDS('docLoaded');\n          }\n          // </d>\n\n          initUserOnload();\n        }\n      }\n      return result;\n    };\n\n    /**\r\n     * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n     * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n     */\n\n    setProperties = function () {\n      var i,\n        o = sm2.setupOptions;\n      for (i in o) {\n        if (o.hasOwnProperty(i)) {\n          // assign local property if not already defined\n\n          if (sm2[i] === _undefined) {\n            sm2[i] = o[i];\n          } else if (sm2[i] !== o[i]) {\n            // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\n            sm2.setupOptions[i] = sm2[i];\n          }\n        }\n      }\n    };\n    init = function () {\n      // called after onload()\n\n      if (didInit) {\n        _wDS('didInit');\n        return false;\n      }\n      function cleanup() {\n        event.remove(window, 'load', sm2.beginDelayedInit);\n      }\n      if (sm2.html5Only) {\n        if (!didInit) {\n          // we don't need no steenking flash!\n          cleanup();\n          sm2.enabled = true;\n          initComplete();\n        }\n        return true;\n      }\n\n      // flash path\n      initMovie();\n      try {\n        // attempt to talk to Flash\n        flash._externalInterfaceTest(false);\n\n        /**\r\n         * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n         * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n         */\n        setPolling(true, sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50));\n        if (!sm2.debugMode) {\n          // stop the SWF from making debug output calls to JS\n          flash._disableDebug();\n        }\n        sm2.enabled = true;\n        debugTS('jstoflash', true);\n        if (!sm2.html5Only) {\n          // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\n          // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\n          event.add(window, 'unload', doNothing);\n        }\n      } catch (e) {\n        sm2._wD('js/flash exception: ' + e.toString());\n        debugTS('jstoflash', false);\n        catchError({\n          type: 'JS_TO_FLASH_EXCEPTION',\n          fatal: true\n        });\n\n        // don't disable, for reboot()\n        failSafely(true);\n        initComplete();\n        return false;\n      }\n      initComplete();\n\n      // disconnect events\n      cleanup();\n      return true;\n    };\n    domContentLoaded = function () {\n      if (didDCLoaded) return false;\n      didDCLoaded = true;\n\n      // assign top-level soundManager properties eg. soundManager.url\n      setProperties();\n      initDebug();\n      if (!hasFlash && sm2.hasHTML5) {\n        sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\n        sm2.setup({\n          useHTML5Audio: true,\n          // make sure we aren't preferring flash, either\n          // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\n          preferFlash: false\n        });\n      }\n      testHTML5();\n      if (!hasFlash && needsFlash) {\n        messages.push(strings.needFlash);\n\n        // TODO: Fatal here vs. timeout approach, etc.\n        // hack: fail sooner.\n        sm2.setup({\n          flashLoadTimeout: 1\n        });\n      }\n      if (doc.removeEventListener) {\n        doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\n      }\n      initMovie();\n      return true;\n    };\n    domContentLoadedIE = function () {\n      if (doc.readyState === 'complete') {\n        domContentLoaded();\n        doc.detachEvent('onreadystatechange', domContentLoadedIE);\n      }\n      return true;\n    };\n    winOnLoad = function () {\n      // catch edge case of initComplete() firing after window.load()\n      windowLoaded = true;\n\n      // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\n      domContentLoaded();\n      event.remove(window, 'load', winOnLoad);\n    };\n\n    // sniff up-front\n    detectFlash();\n\n    // focus and window load, init (primarily flash-driven)\n    event.add(window, 'focus', handleFocus);\n    event.add(window, 'load', delayWaitForEI);\n    event.add(window, 'load', winOnLoad);\n    if (doc.addEventListener) {\n      doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\n    } else if (doc.attachEvent) {\n      doc.attachEvent('onreadystatechange', domContentLoadedIE);\n    } else {\n      // no add/attachevent support - safe to assume no JS -> Flash either\n      debugTS('onload', false);\n      catchError({\n        type: 'NO_DOM2_EVENTS',\n        fatal: true\n      });\n    }\n  } // SoundManager()\n\n  // SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\n\n  if (window.SM2_DEFER === _undefined || !SM2_DEFER) {\n    soundManager = new SoundManager();\n  }\n\n  /**\r\n   * SoundManager public interfaces\r\n   * ------------------------------\r\n   */\n\n  if (typeof module === 'object' && module && typeof module.exports === 'object') {\n    /**\r\n     * commonJS module\r\n     */\n\n    module.exports.SoundManager = SoundManager;\n    module.exports.soundManager = soundManager;\n  } else if (typeof define === 'function' && define.amd) {\n    /**\r\n     * AMD - requireJS\r\n     * basic usage:\r\n     * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n     *   SoundManager.getInstance().setup({\r\n     *     url: '/swf/',\r\n     *     onready: function() { ... }\r\n     *   })\r\n     * });\r\n     *\r\n     * SM2_DEFER usage:\r\n     * window.SM2_DEFER = true;\r\n     * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n     *   SoundManager.getInstance(function() {\r\n     *     var soundManager = new SoundManager.constructor();\r\n     *     soundManager.setup({\r\n     *       url: '/swf/',\r\n     *       ...\r\n     *     });\r\n     *     ...\r\n     *     soundManager.beginDelayedInit();\r\n     *     return soundManager;\r\n     *   })\r\n     * });\r\n     */\n\n    define(function () {\n      /**\r\n       * Retrieve the global instance of SoundManager.\r\n       * If a global instance does not exist it can be created using a callback.\r\n       *\r\n       * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n       * @return {SoundManager} The global SoundManager instance\r\n       */\n      function getInstance(smBuilder) {\n        if (!window.soundManager && smBuilder instanceof Function) {\n          var instance = smBuilder(SoundManager);\n          if (instance instanceof SoundManager) {\n            window.soundManager = instance;\n          }\n        }\n        return window.soundManager;\n      }\n      return {\n        constructor: SoundManager,\n        getInstance: getInstance\n      };\n    });\n  }\n\n  // standard browser case\n\n  // constructor\n  window.SoundManager = SoundManager;\n\n  /**\r\n   * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n   * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n   */\n\n  // public API, flash callbacks etc.\n  window.soundManager = soundManager;\n})(window);","map":{"version":3,"names":["SM2","window","_undefined","document","Error","soundManager","SoundManager","smURL","smID","setupOptions","url","flashVersion","debugMode","debugFlash","useConsole","consoleOnly","waitForWindowLoad","bgColor","useHighPerformance","flashPollingInterval","html5PollingInterval","flashLoadTimeout","wmode","allowScriptAccess","useFlashBlock","useHTML5Audio","forceUseGlobalHTML5Audio","ignoreMobileRestrictions","html5Test","preferFlash","noSWFCache","idPrefix","defaultOptions","autoLoad","autoPlay","from","loops","onid3","onerror","onload","whileloading","onplay","onpause","onresume","whileplaying","onposition","onstop","onfinish","multiShot","multiShotEvents","position","pan","playbackRate","stream","to","type","usePolicyFile","volume","flash9Options","onfailure","isMovieStar","usePeakData","useWaveformData","useEQData","onbufferchange","ondataerror","movieStarOptions","bufferTime","serverURL","onconnect","duration","audioFormats","mp3","required","mp4","related","ogg","opus","wav","flac","movieID","id","debugID","debugURLParam","versionNumber","version","movieURL","altURL","swfLoaded","enabled","oMC","sounds","soundIDs","muted","didFlashBlock","filePattern","filePatterns","flash8","flash9","features","buffering","peakData","waveformData","eqData","movieStar","sandbox","types","remote","localWithFile","localWithNetwork","localTrusted","description","noRemote","noLocal","html5","usingFlash","flash","html5Only","ignoreFlash","SMSound","sm2","globalHTML5Audio","sm","smc","h5","ua","navigator","userAgent","wl","location","href","toString","doc","doNothing","setProperties","init","fV","on_queue","debugOpen","debugTS","didAppend","appendSuccess","didInit","disabled","windowLoaded","_wDS","wdCount","initComplete","mixin","assign","extraOptions","addOnEvent","processOnEvents","initUserOnload","delayWaitForEI","waitForEI","rebootIntoHTML5","setVersionInfo","handleFocus","strings","initMovie","domContentLoaded","winOnLoad","didDCLoaded","getDocument","createMovie","catchError","setPolling","initDebug","debugLevels","defaultFlashVersion","disableObject","failSafely","normalizeMovieURL","oRemoved","oRemovedHTML","str","flashBlockHandler","getSWFCSS","swfCSS","toggleDebug","loopFix","policyFix","complain","idCheck","waitingForEI","initPending","startTimer","stopTimer","timerExecute","h5TimerCount","h5IntervalTimer","parseURL","messages","canIgnoreFlash","needsFlash","featureCheck","html5OK","html5CanPlay","html5ErrorCodes","html5Ext","html5Unload","domContentLoadedIE","testHTML5","event","slice","Array","prototype","useGlobalHTML5Audio","lastGlobalHTML5URL","hasFlash","detectFlash","badSafariFix","html5_events","showSupport","flushMessages","wrapCallback","idCounter","didSetup","msecScale","is_iDevice","match","isAndroid","isIE","isWebkit","isSafari","isOpera","mobileHTML5","isBadSafari","hasConsole","console","log","isFocused","hasFocus","tryInitOnFocus","okToDisable","flashMIME","emptyURL","emptyWAV","overHTTP","protocol","http","netStreamMimeTypes","netStreamTypes","netStreamPattern","RegExp","join","mimePattern","useAltURL","swfBox","swfDefault","swfError","swfTimedout","swfUnblocked","sm2Debug","highPerf","flashDebug","hasHTML5","Audio","opera","canPlayType","e","setup","options","noURL","ok","push","globalHTML5","ignoreMobile","_wD","mobileUA","beginDelayedInit","readyState","setTimeout","supported","getMovie","movie_id","createSound","oOptions","_url","cs","cs_string","oSound","charAt","make","_setup_html5","_createSound","connected","apply","load","play","destroySound","sID","_bFromSound","oS","i","stop","_iO","unload","length","splice","destruct","onPosition","nPosition","oMethod","oScope","clearOnPosition","result","overloaded","Object","start","setPlaybackRate","rate","allowOverride","setPosition","nMsecOffset","stopAll","hasOwnProperty","pause","pauseAll","resume","resumeAll","togglePause","setPan","nPan","setVolume","nVol","j","isNaN","mute","String","muteAll","unmute","unmuteAll","toggleMute","getMemoryUse","ram","parseInt","_getMemoryUse","disable","bNoDisable","remove","canPlayMIME","sMIME","canPlayURL","sURL","canPlayLink","oLink","getSoundById","_suppressDebug","onready","sType","ontimeout","_writeDebug","sText","sTypeOrObject","sDID","o","oItem","createElement","className","appendChild","createTextNode","style","fontWeight","color","insertBefore","firstChild","indexOf","alert","_debug","reboot","resetEvents","excludeInit","k","innerHTML","parentNode","removeChild","fired","reset","getMoviePercent","PercentLoaded","s","resetProperties","add_html5_events","remove_html5_events","stop_html5_timer","start_html5_timer","attachOnPosition","onplay_called","onPositionItems","onPositionFired","detachOnPosition","applyFromTo","lastURL","lastHTML5State","urlOmitted","time","instanceOptions","isHTML5","_a","id3","loaded","playState","_called_load","_html5_canplay","src","autobuffer","preload","_load","fatal","_unload","_bFromSM","_destroySound","_s","_updatePlayState","fN","allowMulti","a","audioClone","onended","oncanplay","startOK","getAutoPlay","setAutoPlay","paused","substr","lastIndexOf","instanceCount","_oncanplay","_start","onplayerror","_onfinish","currentTime","err","add","Math","max","min","bAll","originalPosition","_onbufferchange","_resetOnPosition","_stop","_onTimer","_setAutoPlay","normalizedRate","message","position1K","offset","_setPosition","toFixed","_bCallFlash","_pause","bInstanceOnly","_setPan","_bInstanceOnly","_setVolume","hasIO","method","scope","_processOnPosition","item","f","t","end","op","retainPosition","_hasTimer","bytesLoaded","bytesTotal","durationEstimate","buffered","left","right","failures","isBuffering","metadata","bForce","isNew","x","_get_html5_duration","_whileplaying","d","Infinity","_apply_loop","nLoops","loop","dURL","decodeURI","sameURL","_added_events","oEvt","oFn","bCapture","addEventListener","removeEventListener","_onload","nSuccess","loadOK","_onerror","errorCode","nIsBuffering","_onsuspend","onsuspend","_onfailure","msg","level","code","_onwarning","onwarning","io_onfinish","_whileloading","nBytesLoaded","nBytesTotal","nDuration","nBufferLength","floor","bufferLength","oPeakData","oWaveformDataLeft","oWaveformDataRight","oEQData","eqLeft","leftPeak","rightPeak","split","leftEQ","rightEQ","_oncaptiondata","oData","captiondata","oncaptiondata","_onmetadata","oMDProps","oMDData","onmetadata","call","_onid3","oID3Props","oID3Data","_onconnect","bSuccess","_ondataerror","sError","body","getElementsByTagName","getElementById","oMain","oAdd","o1","o2","callback","oParent","hasParent","bonusOptions","Function","preferFlashCheck","kind","old","attachEvent","evt","getArgs","oArgs","args","len","pop","element","shift","arguments","html5_event","abort","canplay","ee","canplaythrough","durationchange","ended","error","loadeddata","_loaded","loadedmetadata","loadstart","playing","fromCharCode","progress","progStr","isProgress","ranges","target","total","ratechange","suspend","stalled","timeupdate","waiting","iO","oAudio","_called_unload","mime","aF","fileExt","concat","toLowerCase","lookup","support","cp","m","canPlay","isOK","notReady","notOK","domError","spcWmode","swf404","tryDebug","checkSWF","localFail","waitFocus","waitForever","waitSWF","needFunction","badID","currentObj","waitOnload","docLoaded","onloadOK","secNote","badRemove","shutdown","queue","smError","fbTimeout","fbLoaded","fbHandler","manURL","onURL","badFV","as2loop","noNSLoop","needfl9","mfTimeout","needFlash","gotFocus","policy","setupError","setupUndef","setupLate","sm2Loaded","sstr","replace","sOpt","sPre","sMsg","warn","oProp","urlParams","Date","getTime","isDebug","bPolling","bHighPerformance","_setPolling","test","oD","oDebug","oTarget","oToggle","tmp","bottom","width","height","lineHeight","margin","textAlign","border","cursor","background","zIndex","onclick","title","display","e2","errorLevel","oT","sEventType","sMessage","sm2Debugger","handleEvent","css","name","p","ignoreInit","status","success","srcQueue","canRetry","hasPlugin","n","obj","AX","ActiveXObject","nP","plugins","undefined","mimeTypes","enabledPlugin","flashNeeded","formats","isSpecial","urlResult","setInterval","clearInterval","_setSandboxType","sandboxType","sb","_externalInterfaceOK","swfVersion","initMsg","delimiter","remoteURL","localURL","swfTitle","extraClass","isRTL","html","oEmbed","oMovie","movieHTML","oEl","sClass","dir","param","value","platform","quality","bgcolor","pluginspage","hasPriority","FlashVars","setAttribute","overflow","top","abs","oninitmovie","loadIncomplete","cleanup","tests","wasTimeout","_externalInterfaceTest","_disableDebug","detachEvent","SM2_DEFER","module","exports","define","amd","getInstance","smBuilder","instance","constructor"],"sources":["/home/jurco/node_modules/soundmanager2/script/soundmanager2.js"],"sourcesContent":["/** @license\r\n *\r\n * SoundManager 2: JavaScript Sound for the Web\r\n * ----------------------------------------------\r\n * http://schillmania.com/projects/soundmanager2/\r\n *\r\n * Copyright (c) 2007, Scott Schiller. All rights reserved.\r\n * Code provided under the BSD License:\r\n * http://schillmania.com/projects/soundmanager2/license.txt\r\n *\r\n * V2.97a.20170601\r\n */\r\n\r\n/**\r\n * About this file\r\n * -------------------------------------------------------------------------------------\r\n * This is the fully-commented source version of the SoundManager 2 API,\r\n * recommended for use during development and testing.\r\n *\r\n * See soundmanager2-nodebug-jsmin.js for an optimized build (~11KB with gzip.)\r\n * http://schillmania.com/projects/soundmanager2/doc/getstarted/#basic-inclusion\r\n * Alternately, serve this file with gzip for 75% compression savings (~30KB over HTTP.)\r\n *\r\n * You may notice <d> and </d> comments in this source; these are delimiters for\r\n * debug blocks which are removed in the -nodebug builds, further optimizing code size.\r\n *\r\n * Also, as you may note: Whoa, reliable cross-platform/device audio support is hard! ;)\r\n */\r\n\r\n(function SM2(window, _undefined) {\r\n\r\n/* global Audio, document, window, navigator, define, module, SM2_DEFER, opera, setTimeout, setInterval, clearTimeout, sm2Debugger */\r\n\r\n'use strict';\r\n\r\nif (!window || !window.document) {\r\n\r\n  // Don't cross the [environment] streams. SM2 expects to be running in a browser, not under node.js etc.\r\n  // Additionally, if a browser somehow manages to fail this test, as Egon said: \"It would be bad.\"\r\n\r\n  throw new Error('SoundManager requires a browser with window and document objects.');\r\n\r\n}\r\n\r\nvar soundManager = null;\r\n\r\n/**\r\n * The SoundManager constructor.\r\n *\r\n * @constructor\r\n * @param {string} smURL Optional: Path to SWF files\r\n * @param {string} smID Optional: The ID to use for the SWF container element\r\n * @this {SoundManager}\r\n * @return {SoundManager} The new SoundManager instance\r\n */\r\n\r\nfunction SoundManager(smURL, smID) {\r\n\r\n  /**\r\n   * soundManager configuration options list\r\n   * defines top-level configuration properties to be applied to the soundManager instance (eg. soundManager.flashVersion)\r\n   * to set these properties, use the setup() method - eg., soundManager.setup({url: '/swf/', flashVersion: 9})\r\n   */\r\n\r\n  this.setupOptions = {\r\n\r\n    url: (smURL || null),             // path (directory) where SoundManager 2 SWFs exist, eg., /path/to/swfs/\r\n    flashVersion: 8,                  // flash build to use (8 or 9.) Some API features require 9.\r\n    debugMode: true,                  // enable debugging output (console.log() with HTML fallback)\r\n    debugFlash: false,                // enable debugging output inside SWF, troubleshoot Flash/browser issues\r\n    useConsole: true,                 // use console.log() if available (otherwise, writes to #soundmanager-debug element)\r\n    consoleOnly: true,                // if console is being used, do not create/write to #soundmanager-debug\r\n    waitForWindowLoad: false,         // force SM2 to wait for window.onload() before trying to call soundManager.onload()\r\n    bgColor: '#ffffff',               // SWF background color. N/A when wmode = 'transparent'\r\n    useHighPerformance: false,        // position:fixed flash movie can help increase js/flash speed, minimize lag\r\n    flashPollingInterval: null,       // msec affecting whileplaying/loading callback frequency. If null, default of 50 msec is used.\r\n    html5PollingInterval: null,       // msec affecting whileplaying() for HTML5 audio, excluding mobile devices. If null, native HTML5 update events are used.\r\n    flashLoadTimeout: 1000,           // msec to wait for flash movie to load before failing (0 = infinity)\r\n    wmode: null,                      // flash rendering mode - null, 'transparent', or 'opaque' (last two allow z-index to work)\r\n    allowScriptAccess: 'always',      // for scripting the SWF (object/embed property), 'always' or 'sameDomain'\r\n    useFlashBlock: false,             // *requires flashblock.css, see demos* - allow recovery from flash blockers. Wait indefinitely and apply timeout CSS to SWF, if applicable.\r\n    useHTML5Audio: true,              // use HTML5 Audio() where API is supported (most Safari, Chrome versions), Firefox (MP3/MP4 support varies.) Ideally, transparent vs. Flash API where possible.\r\n    forceUseGlobalHTML5Audio: false,  // if true, a single Audio() object is used for all sounds - and only one can play at a time.\r\n    ignoreMobileRestrictions: false,  // if true, SM2 will not apply global HTML5 audio rules to mobile UAs. iOS > 7 and WebViews may allow multiple Audio() instances.\r\n    html5Test: /^(probably|maybe)$/i, // HTML5 Audio() format support test. Use /^probably$/i; if you want to be more conservative.\r\n    preferFlash: false,               // overrides useHTML5audio, will use Flash for MP3/MP4/AAC if present. Potential option if HTML5 playback with these formats is quirky.\r\n    noSWFCache: false,                // if true, appends ?ts={date} to break aggressive SWF caching.\r\n    idPrefix: 'sound'                 // if an id is not provided to createSound(), this prefix is used for generated IDs - 'sound0', 'sound1' etc.\r\n\r\n  };\r\n\r\n  this.defaultOptions = {\r\n\r\n    /**\r\n     * the default configuration for sound objects made with createSound() and related methods\r\n     * eg., volume, auto-load behaviour and so forth\r\n     */\r\n\r\n    autoLoad: false,        // enable automatic loading (otherwise .load() will be called on demand with .play(), the latter being nicer on bandwidth - if you want to .load yourself, you also can)\r\n    autoPlay: false,        // enable playing of file as soon as possible (much faster if \"stream\" is true)\r\n    from: null,             // position to start playback within a sound (msec), default = beginning\r\n    loops: 1,               // how many times to repeat the sound (position will wrap around to 0, setPosition() will break out of loop when >0)\r\n    onid3: null,            // callback function for \"ID3 data is added/available\"\r\n    onerror: null,          // callback function for \"load failed\" (or, playback/network/decode error under HTML5.)\r\n    onload: null,           // callback function for \"load finished\"\r\n    whileloading: null,     // callback function for \"download progress update\" (X of Y bytes received)\r\n    onplay: null,           // callback for \"play\" start\r\n    onpause: null,          // callback for \"pause\"\r\n    onresume: null,         // callback for \"resume\" (pause toggle)\r\n    whileplaying: null,     // callback during play (position update)\r\n    onposition: null,       // object containing times and function callbacks for positions of interest\r\n    onstop: null,           // callback for \"user stop\"\r\n    onfinish: null,         // callback function for \"sound finished playing\"\r\n    multiShot: true,        // let sounds \"restart\" or layer on top of each other when played multiple times, rather than one-shot/one at a time\r\n    multiShotEvents: false, // fire multiple sound events (currently onfinish() only) when multiShot is enabled\r\n    position: null,         // offset (milliseconds) to seek to within loaded sound data.\r\n    pan: 0,                 // \"pan\" settings, left-to-right, -100 to 100\r\n    playbackRate: 1,        // rate at which to play the sound (HTML5-only)\r\n    stream: true,           // allows playing before entire file has loaded (recommended)\r\n    to: null,               // position to end playback within a sound (msec), default = end\r\n    type: null,             // MIME-like hint for file pattern / canPlay() tests, eg. audio/mp3\r\n    usePolicyFile: false,   // enable crossdomain.xml request for audio on remote domains (for ID3/waveform access)\r\n    volume: 100             // self-explanatory. 0-100, the latter being the max.\r\n\r\n  };\r\n\r\n  this.flash9Options = {\r\n\r\n    /**\r\n     * flash 9-only options,\r\n     * merged into defaultOptions if flash 9 is being used\r\n     */\r\n\r\n    onfailure: null,        // callback function for when playing fails (Flash 9, MovieStar + RTMP-only)\r\n    isMovieStar: null,      // \"MovieStar\" MPEG4 audio mode. Null (default) = auto detect MP4, AAC etc. based on URL. true = force on, ignore URL\r\n    usePeakData: false,     // enable left/right channel peak (level) data\r\n    useWaveformData: false, // enable sound spectrum (raw waveform data) - NOTE: May increase CPU load.\r\n    useEQData: false,       // enable sound EQ (frequency spectrum data) - NOTE: May increase CPU load.\r\n    onbufferchange: null,   // callback for \"isBuffering\" property change\r\n    ondataerror: null       // callback for waveform/eq data access error (flash playing audio in other tabs/domains)\r\n\r\n  };\r\n\r\n  this.movieStarOptions = {\r\n\r\n    /**\r\n     * flash 9.0r115+ MPEG4 audio options,\r\n     * merged into defaultOptions if flash 9+movieStar mode is enabled\r\n     */\r\n\r\n    bufferTime: 3,          // seconds of data to buffer before playback begins (null = flash default of 0.1 seconds - if AAC playback is gappy, try increasing.)\r\n    serverURL: null,        // rtmp: FMS or FMIS server to connect to, required when requesting media via RTMP or one of its variants\r\n    onconnect: null,        // rtmp: callback for connection to flash media server\r\n    duration: null          // rtmp: song duration (msec)\r\n\r\n  };\r\n\r\n  this.audioFormats = {\r\n\r\n    /**\r\n     * determines HTML5 support + flash requirements.\r\n     * if no support (via flash and/or HTML5) for a \"required\" format, SM2 will fail to start.\r\n     * flash fallback is used for MP3 or MP4 if HTML5 can't play it (or if preferFlash = true)\r\n     */\r\n\r\n    mp3: {\r\n      type: ['audio/mpeg; codecs=\"mp3\"', 'audio/mpeg', 'audio/mp3', 'audio/MPA', 'audio/mpa-robust'],\r\n      required: true\r\n    },\r\n\r\n    mp4: {\r\n      related: ['aac', 'm4a', 'm4b'], // additional formats under the MP4 container\r\n      type: ['audio/mp4; codecs=\"mp4a.40.2\"', 'audio/aac', 'audio/x-m4a', 'audio/MP4A-LATM', 'audio/mpeg4-generic'],\r\n      required: false\r\n    },\r\n\r\n    ogg: {\r\n      type: ['audio/ogg; codecs=vorbis'],\r\n      required: false\r\n    },\r\n\r\n    opus: {\r\n      type: ['audio/ogg; codecs=opus', 'audio/opus'],\r\n      required: false\r\n    },\r\n\r\n    wav: {\r\n      type: ['audio/wav; codecs=\"1\"', 'audio/wav', 'audio/wave', 'audio/x-wav'],\r\n      required: false\r\n    },\r\n\r\n    flac: {\r\n      type: ['audio/flac'],\r\n      required: false\r\n    }\r\n\r\n  };\r\n\r\n  // HTML attributes (id + class names) for the SWF container\r\n\r\n  this.movieID = 'sm2-container';\r\n  this.id = (smID || 'sm2movie');\r\n\r\n  this.debugID = 'soundmanager-debug';\r\n  this.debugURLParam = /([#?&])debug=1/i;\r\n\r\n  // dynamic attributes\r\n\r\n  this.versionNumber = 'V2.97a.20170601';\r\n  this.version = null;\r\n  this.movieURL = null;\r\n  this.altURL = null;\r\n  this.swfLoaded = false;\r\n  this.enabled = false;\r\n  this.oMC = null;\r\n  this.sounds = {};\r\n  this.soundIDs = [];\r\n  this.muted = false;\r\n  this.didFlashBlock = false;\r\n  this.filePattern = null;\r\n\r\n  this.filePatterns = {\r\n    flash8: /\\.mp3(\\?.*)?$/i,\r\n    flash9: /\\.mp3(\\?.*)?$/i\r\n  };\r\n\r\n  // support indicators, set at init\r\n\r\n  this.features = {\r\n    buffering: false,\r\n    peakData: false,\r\n    waveformData: false,\r\n    eqData: false,\r\n    movieStar: false\r\n  };\r\n\r\n  // flash sandbox info, used primarily in troubleshooting\r\n\r\n  this.sandbox = {\r\n    // <d>\r\n    type: null,\r\n    types: {\r\n      remote: 'remote (domain-based) rules',\r\n      localWithFile: 'local with file access (no internet access)',\r\n      localWithNetwork: 'local with network (internet access only, no local access)',\r\n      localTrusted: 'local, trusted (local+internet access)'\r\n    },\r\n    description: null,\r\n    noRemote: null,\r\n    noLocal: null\r\n    // </d>\r\n  };\r\n\r\n  /**\r\n   * format support (html5/flash)\r\n   * stores canPlayType() results based on audioFormats.\r\n   * eg. { mp3: boolean, mp4: boolean }\r\n   * treat as read-only.\r\n   */\r\n\r\n  this.html5 = {\r\n    usingFlash: null // set if/when flash fallback is needed\r\n  };\r\n\r\n  // file type support hash\r\n  this.flash = {};\r\n\r\n  // determined at init time\r\n  this.html5Only = false;\r\n\r\n  // used for special cases (eg. iPad/iPhone/palm OS?)\r\n  this.ignoreFlash = false;\r\n\r\n  /**\r\n   * a few private internals (OK, a lot. :D)\r\n   */\r\n\r\n  var SMSound,\r\n  sm2 = this, globalHTML5Audio = null, flash = null, sm = 'soundManager', smc = sm + ': ', h5 = 'HTML5::', id, ua = navigator.userAgent, wl = window.location.href.toString(), doc = document, doNothing, setProperties, init, fV, on_queue = [], debugOpen = true, debugTS, didAppend = false, appendSuccess = false, didInit = false, disabled = false, windowLoaded = false, _wDS, wdCount = 0, initComplete, mixin, assign, extraOptions, addOnEvent, processOnEvents, initUserOnload, delayWaitForEI, waitForEI, rebootIntoHTML5, setVersionInfo, handleFocus, strings, initMovie, domContentLoaded, winOnLoad, didDCLoaded, getDocument, createMovie, catchError, setPolling, initDebug, debugLevels = ['log', 'info', 'warn', 'error'], defaultFlashVersion = 8, disableObject, failSafely, normalizeMovieURL, oRemoved = null, oRemovedHTML = null, str, flashBlockHandler, getSWFCSS, swfCSS, toggleDebug, loopFix, policyFix, complain, idCheck, waitingForEI = false, initPending = false, startTimer, stopTimer, timerExecute, h5TimerCount = 0, h5IntervalTimer = null, parseURL, messages = [],\r\n  canIgnoreFlash, needsFlash = null, featureCheck, html5OK, html5CanPlay, html5ErrorCodes, html5Ext, html5Unload, domContentLoadedIE, testHTML5, event, slice = Array.prototype.slice, useGlobalHTML5Audio = false, lastGlobalHTML5URL, hasFlash, detectFlash, badSafariFix, html5_events, showSupport, flushMessages, wrapCallback, idCounter = 0, didSetup, msecScale = 1000,\r\n  is_iDevice = ua.match(/(ipad|iphone|ipod)/i), isAndroid = ua.match(/android/i), isIE = ua.match(/msie|trident/i),\r\n  isWebkit = ua.match(/webkit/i),\r\n  isSafari = (ua.match(/safari/i) && !ua.match(/chrome/i)),\r\n  isOpera = (ua.match(/opera/i)),\r\n  mobileHTML5 = (ua.match(/(mobile|pre\\/|xoom)/i) || is_iDevice || isAndroid),\r\n  isBadSafari = (!wl.match(/usehtml5audio/i) && !wl.match(/sm2-ignorebadua/i) && isSafari && !ua.match(/silk/i) && ua.match(/OS\\sX\\s10_6_([3-7])/i)), // Safari 4 and 5 (excluding Kindle Fire, \"Silk\") occasionally fail to load/play HTML5 audio on Snow Leopard 10.6.3 through 10.6.7 due to bug(s) in QuickTime X and/or other underlying frameworks. :/ Confirmed bug. https://bugs.webkit.org/show_bug.cgi?id=32159\r\n  hasConsole = (window.console !== _undefined && console.log !== _undefined),\r\n  isFocused = (doc.hasFocus !== _undefined ? doc.hasFocus() : null),\r\n  tryInitOnFocus = (isSafari && (doc.hasFocus === _undefined || !doc.hasFocus())),\r\n  okToDisable = !tryInitOnFocus,\r\n  flashMIME = /(mp3|mp4|mpa|m4a|m4b)/i,\r\n  emptyURL = 'about:blank', // safe URL to unload, or load nothing from (flash 8 + most HTML5 UAs)\r\n  emptyWAV = 'data:audio/wave;base64,/UklGRiYAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQIAAAD//w==', // tiny WAV for HTML5 unloading\r\n  overHTTP = (doc.location ? doc.location.protocol.match(/http/i) : null),\r\n  http = (!overHTTP ? '//' : ''),\r\n  // mp3, mp4, aac etc.\r\n  netStreamMimeTypes = /^\\s*audio\\/(?:x-)?(?:mpeg4|aac|flv|mov|mp4|m4v|m4a|m4b|mp4v|3gp|3g2)\\s*(?:$|;)/i,\r\n  // Flash v9.0r115+ \"moviestar\" formats\r\n  netStreamTypes = ['mpeg4', 'aac', 'flv', 'mov', 'mp4', 'm4v', 'f4v', 'm4a', 'm4b', 'mp4v', '3gp', '3g2'],\r\n  netStreamPattern = new RegExp('\\\\.(' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n  this.mimePattern = /^\\s*audio\\/(?:x-)?(?:mp(?:eg|3))\\s*(?:$|;)/i; // default mp3 set\r\n\r\n  // use altURL if not \"online\"\r\n  this.useAltURL = !overHTTP;\r\n\r\n  swfCSS = {\r\n    swfBox: 'sm2-object-box',\r\n    swfDefault: 'movieContainer',\r\n    swfError: 'swf_error', // SWF loaded, but SM2 couldn't start (other error)\r\n    swfTimedout: 'swf_timedout',\r\n    swfLoaded: 'swf_loaded',\r\n    swfUnblocked: 'swf_unblocked', // or loaded OK\r\n    sm2Debug: 'sm2_debug',\r\n    highPerf: 'high_performance',\r\n    flashDebug: 'flash_debug'\r\n  };\r\n\r\n  /**\r\n   * HTML5 error codes, per W3C\r\n   * Error code 1, MEDIA_ERR_ABORTED: Client aborted download at user's request.\r\n   * Error code 2, MEDIA_ERR_NETWORK: A network error of some description caused the user agent to stop fetching the media resource, after the resource was established to be usable.\r\n   * Error code 3, MEDIA_ERR_DECODE: An error of some description occurred while decoding the media resource, after the resource was established to be usable.\r\n   * Error code 4, MEDIA_ERR_SRC_NOT_SUPPORTED: Media (audio file) not supported (\"not usable.\")\r\n   * Reference: https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n   */\r\n  html5ErrorCodes = [\r\n    null,\r\n    'MEDIA_ERR_ABORTED',\r\n    'MEDIA_ERR_NETWORK',\r\n    'MEDIA_ERR_DECODE',\r\n    'MEDIA_ERR_SRC_NOT_SUPPORTED'\r\n  ];\r\n\r\n  /**\r\n   * basic HTML5 Audio() support test\r\n   * try...catch because of IE 9 \"not implemented\" nonsense\r\n   * https://github.com/Modernizr/Modernizr/issues/224\r\n   */\r\n\r\n  this.hasHTML5 = (function() {\r\n    try {\r\n      // new Audio(null) for stupid Opera 9.64 case, which throws not_enough_arguments exception otherwise.\r\n      return (Audio !== _undefined && (isOpera && opera !== _undefined && opera.version() < 10 ? new Audio(null) : new Audio()).canPlayType !== _undefined);\r\n    } catch(e) {\r\n      return false;\r\n    }\r\n  }());\r\n\r\n  /**\r\n   * Public SoundManager API\r\n   * -----------------------\r\n   */\r\n\r\n  /**\r\n   * Configures top-level soundManager properties.\r\n   *\r\n   * @param {object} options Option parameters, eg. { flashVersion: 9, url: '/path/to/swfs/' }\r\n   * onready and ontimeout are also accepted parameters. call soundManager.setup() to see the full list.\r\n   */\r\n\r\n  this.setup = function(options) {\r\n\r\n    var noURL = (!sm2.url);\r\n\r\n    // warn if flash options have already been applied\r\n\r\n    if (options !== _undefined && didInit && needsFlash && sm2.ok() && (options.flashVersion !== _undefined || options.url !== _undefined || options.html5Test !== _undefined)) {\r\n      complain(str('setupLate'));\r\n    }\r\n\r\n    // TODO: defer: true?\r\n\r\n    assign(options);\r\n\r\n    if (!useGlobalHTML5Audio) {\r\n\r\n      if (mobileHTML5) {\r\n\r\n        // force the singleton HTML5 pattern on mobile, by default.\r\n        if (!sm2.setupOptions.ignoreMobileRestrictions || sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n          messages.push(strings.globalHTML5);\r\n          useGlobalHTML5Audio = true;\r\n        }\r\n\r\n      } else if (sm2.setupOptions.forceUseGlobalHTML5Audio) {\r\n\r\n        // only apply singleton HTML5 on desktop if forced.\r\n        messages.push(strings.globalHTML5);\r\n        useGlobalHTML5Audio = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (!didSetup && mobileHTML5) {\r\n\r\n      if (sm2.setupOptions.ignoreMobileRestrictions) {\r\n\r\n        messages.push(strings.ignoreMobile);\r\n\r\n      } else {\r\n\r\n        // prefer HTML5 for mobile + tablet-like devices, probably more reliable vs. flash at this point.\r\n\r\n        // <d>\r\n        if (!sm2.setupOptions.useHTML5Audio || sm2.setupOptions.preferFlash) {\r\n          // notify that defaults are being changed.\r\n          sm2._wD(strings.mobileUA);\r\n        }\r\n        // </d>\r\n\r\n        sm2.setupOptions.useHTML5Audio = true;\r\n        sm2.setupOptions.preferFlash = false;\r\n\r\n        if (is_iDevice) {\r\n\r\n          // no flash here.\r\n          sm2.ignoreFlash = true;\r\n\r\n        } else if ((isAndroid && !ua.match(/android\\s2\\.3/i)) || !isAndroid) {\r\n\r\n          /**\r\n           * Android devices tend to work better with a single audio instance, specifically for chained playback of sounds in sequence.\r\n           * Common use case: exiting sound onfinish() -> createSound() -> play()\r\n           * Presuming similar restrictions for other mobile, non-Android, non-iOS devices.\r\n           */\r\n\r\n          // <d>\r\n          sm2._wD(strings.globalHTML5);\r\n          // </d>\r\n\r\n          useGlobalHTML5Audio = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // special case 1: \"Late setup\". SM2 loaded normally, but user didn't assign flash URL eg., setup({url:...}) before SM2 init. Treat as delayed init.\r\n\r\n    if (options) {\r\n\r\n      if (noURL && didDCLoaded && options.url !== _undefined) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n      // special case 2: If lazy-loading SM2 (DOMContentLoaded has already happened) and user calls setup() with url: parameter, try to init ASAP.\r\n\r\n      if (!didDCLoaded && options.url !== _undefined && doc.readyState === 'complete') {\r\n        setTimeout(domContentLoaded, 1);\r\n      }\r\n\r\n    }\r\n\r\n    didSetup = true;\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.ok = function() {\r\n\r\n    return (needsFlash ? (didInit && !disabled) : (sm2.useHTML5Audio && sm2.hasHTML5));\r\n\r\n  };\r\n\r\n  this.supported = this.ok; // legacy\r\n\r\n  this.getMovie = function(movie_id) {\r\n\r\n    // safety net: some old browsers differ on SWF references, possibly related to ExternalInterface / flash version\r\n    return id(movie_id) || doc[movie_id] || window[movie_id];\r\n\r\n  };\r\n\r\n  /**\r\n   * Creates a SMSound sound object instance. Can also be overloaded, e.g., createSound('mySound', '/some.mp3');\r\n   *\r\n   * @param {object} oOptions Sound options (at minimum, url parameter is required.)\r\n   * @return {object} SMSound The new SMSound object.\r\n   */\r\n\r\n  this.createSound = function(oOptions, _url) {\r\n\r\n    var cs, cs_string, options, oSound = null;\r\n\r\n    // <d>\r\n    cs = sm + '.createSound(): ';\r\n    cs_string = cs + str(!didInit ? 'notReady' : 'notOK');\r\n    // </d>\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(cs_string);\r\n      return false;\r\n    }\r\n\r\n    if (_url !== _undefined) {\r\n      // function overloading in JS! :) ... assume simple createSound(id, url) use case.\r\n      oOptions = {\r\n        id: oOptions,\r\n        url: _url\r\n      };\r\n    }\r\n\r\n    // inherit from defaultOptions\r\n    options = mixin(oOptions);\r\n\r\n    options.url = parseURL(options.url);\r\n\r\n    // generate an id, if needed.\r\n    if (options.id === _undefined) {\r\n      options.id = sm2.setupOptions.idPrefix + (idCounter++);\r\n    }\r\n\r\n    // <d>\r\n    if (options.id.toString().charAt(0).match(/^[0-9]$/)) {\r\n      sm2._wD(cs + str('badID', options.id), 2);\r\n    }\r\n\r\n    sm2._wD(cs + options.id + (options.url ? ' (' + options.url + ')' : ''), 1);\r\n    // </d>\r\n\r\n    if (idCheck(options.id, true)) {\r\n      sm2._wD(cs + options.id + ' exists', 1);\r\n      return sm2.sounds[options.id];\r\n    }\r\n\r\n    function make() {\r\n\r\n      options = loopFix(options);\r\n      sm2.sounds[options.id] = new SMSound(options);\r\n      sm2.soundIDs.push(options.id);\r\n      return sm2.sounds[options.id];\r\n\r\n    }\r\n\r\n    if (html5OK(options)) {\r\n\r\n      oSound = make();\r\n      // <d>\r\n      if (!sm2.html5Only) {\r\n        sm2._wD(options.id + ': Using HTML5');\r\n      }\r\n      // </d>\r\n      oSound._setup_html5(options);\r\n\r\n    } else {\r\n\r\n      if (sm2.html5Only) {\r\n        sm2._wD(options.id + ': No HTML5 support for this sound, and no Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      // TODO: Move HTML5/flash checks into generic URL parsing/handling function.\r\n\r\n      if (sm2.html5.usingFlash && options.url && options.url.match(/data:/i)) {\r\n        // data: URIs not supported by Flash, either.\r\n        sm2._wD(options.id + ': data: URIs not supported via Flash. Exiting.');\r\n        return make();\r\n      }\r\n\r\n      if (fV > 8) {\r\n        if (options.isMovieStar === null) {\r\n          // attempt to detect MPEG-4 formats\r\n          options.isMovieStar = !!(options.serverURL || (options.type ? options.type.match(netStreamMimeTypes) : false) || (options.url && options.url.match(netStreamPattern)));\r\n        }\r\n        // <d>\r\n        if (options.isMovieStar) {\r\n          sm2._wD(cs + 'using MovieStar handling');\r\n          if (options.loops > 1) {\r\n            _wDS('noNSLoop');\r\n          }\r\n        }\r\n        // </d>\r\n      }\r\n\r\n      options = policyFix(options, cs);\r\n      oSound = make();\r\n\r\n      if (fV === 8) {\r\n        flash._createSound(options.id, options.loops || 1, options.usePolicyFile);\r\n      } else {\r\n        flash._createSound(options.id, options.url, options.usePeakData, options.useWaveformData, options.useEQData, options.isMovieStar, (options.isMovieStar ? options.bufferTime : false), options.loops || 1, options.serverURL, options.duration || null, options.autoPlay, true, options.autoLoad, options.usePolicyFile);\r\n        if (!options.serverURL) {\r\n          // We are connected immediately\r\n          oSound.connected = true;\r\n          if (options.onconnect) {\r\n            options.onconnect.apply(oSound);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!options.serverURL && (options.autoLoad || options.autoPlay)) {\r\n        // call load for non-rtmp streams\r\n        oSound.load(options);\r\n      }\r\n\r\n    }\r\n\r\n    // rtmp will play in onconnect\r\n    if (!options.serverURL && options.autoPlay) {\r\n      oSound.play();\r\n    }\r\n\r\n    return oSound;\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys a SMSound sound object instance.\r\n   *\r\n   * @param {string} sID The ID of the sound to destroy\r\n   */\r\n\r\n  this.destroySound = function(sID, _bFromSound) {\r\n\r\n    // explicitly destroy a sound before normal page unload, etc.\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    var oS = sm2.sounds[sID], i;\r\n\r\n    oS.stop();\r\n\r\n    // Disable all callbacks after stop(), when the sound is being destroyed\r\n    oS._iO = {};\r\n\r\n    oS.unload();\r\n\r\n    for (i = 0; i < sm2.soundIDs.length; i++) {\r\n      if (sm2.soundIDs[i] === sID) {\r\n        sm2.soundIDs.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!_bFromSound) {\r\n      // ignore if being called from SMSound instance\r\n      oS.destruct(true);\r\n    }\r\n\r\n    oS = null;\r\n    delete sm2.sounds[sID];\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the load() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   */\r\n\r\n  this.load = function(sID, oOptions) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].load(oOptions);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unload() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   */\r\n\r\n  this.unload = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].unload();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the onPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod The relevant callback to fire\r\n   * @param {object} oScope Optional: The scope to apply the callback to\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.onPosition = function(sID, nPosition, oMethod, oScope) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].onposition(nPosition, oMethod, oScope);\r\n\r\n  };\r\n\r\n  // legacy/backwards-compability: lower-case method name\r\n  this.onposition = this.onPosition;\r\n\r\n  /**\r\n   * Calls the clearOnPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPosition The position to watch for\r\n   * @param {function} oMethod Optional: The relevant callback to fire\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.clearOnPosition = function(sID, nPosition, oMethod) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].clearOnPosition(nPosition, oMethod);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the play() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {object} oOptions Optional: Sound options\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.play = function(sID, oOptions) {\r\n\r\n    var result = null,\r\n        // legacy function-overloading use case: play('mySound', '/path/to/some.mp3');\r\n        overloaded = (oOptions && !(oOptions instanceof Object));\r\n\r\n    if (!didInit || !sm2.ok()) {\r\n      complain(sm + '.play(): ' + str(!didInit ? 'notReady' : 'notOK'));\r\n      return false;\r\n    }\r\n\r\n    if (!idCheck(sID, overloaded)) {\r\n\r\n      // no sound found for the given ID. Bail.\r\n      if (!overloaded) return false;\r\n\r\n      if (overloaded) {\r\n        oOptions = {\r\n          url: oOptions\r\n        };\r\n      }\r\n\r\n      if (oOptions && oOptions.url) {\r\n        // overloading use case, create+play: .play('someID', {url:'/path/to.mp3'});\r\n        sm2._wD(sm + '.play(): Attempting to create \"' + sID + '\"', 1);\r\n        oOptions.id = sID;\r\n        result = sm2.createSound(oOptions).play();\r\n      }\r\n\r\n    } else if (overloaded) {\r\n\r\n      // existing sound object case\r\n      oOptions = {\r\n        url: oOptions\r\n      };\r\n\r\n    }\r\n\r\n    if (result === null) {\r\n      // default case\r\n      result = sm2.sounds[sID].play(oOptions);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  // just for convenience\r\n  this.start = this.play;\r\n\r\n  /**\r\n   * Calls the setPlaybackRate() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPlaybackRate = function(sID, rate, allowOverride) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPlaybackRate(rate, allowOverride);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPosition() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nMsecOffset Position (milliseconds)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPosition = function(sID, nMsecOffset) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPosition(nMsecOffset);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the stop() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.stop = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    sm2._wD(sm + '.stop(' + sID + ')', 1);\r\n\r\n    return sm2.sounds[sID].stop();\r\n\r\n  };\r\n\r\n  /**\r\n   * Stops all currently-playing sounds.\r\n   */\r\n\r\n  this.stopAll = function() {\r\n\r\n    var oSound;\r\n    sm2._wD(sm + '.stopAll()', 1);\r\n\r\n    for (oSound in sm2.sounds) {\r\n      if (sm2.sounds.hasOwnProperty(oSound)) {\r\n        // apply only to sound objects\r\n        sm2.sounds[oSound].stop();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the pause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.pause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].pause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Pauses all currently-playing sounds.\r\n   */\r\n\r\n  this.pauseAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].pause();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the resume() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.resume = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].resume();\r\n\r\n  };\r\n\r\n  /**\r\n   * Resumes all currently-paused sounds.\r\n   */\r\n\r\n  this.resumeAll = function() {\r\n\r\n    var i;\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].resume();\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the togglePause() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.togglePause = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].togglePause();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setPan() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nPan The pan value (-100 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setPan = function(sID, nPan) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setPan(nPan);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the setVolume() method of a SMSound object by ID\r\n   * Overloaded case: pass only volume argument eg., setVolume(50) to apply to all sounds.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @param {number} nVol The volume value (0 to 100)\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.setVolume = function(sID, nVol) {\r\n\r\n    // setVolume(50) function overloading case - apply to all sounds\r\n\r\n    var i, j;\r\n\r\n    if (sID !== _undefined && !isNaN(sID) && nVol === _undefined) {\r\n      for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n        sm2.sounds[sm2.soundIDs[i]].setVolume(sID);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // setVolume('mySound', 50) case\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].setVolume(nVol);\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the mute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.mute = function(sID) {\r\n\r\n    var i = 0;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.mute(): Muting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].mute();\r\n      }\r\n      sm2.muted = true;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.mute(): Muting \"' + sID + '\"');\r\n      return sm2.sounds[sID].mute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Mutes all sounds.\r\n   */\r\n\r\n  this.muteAll = function() {\r\n\r\n    sm2.mute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the unmute() method of either a single SMSound object by ID, or all sound objects.\r\n   *\r\n   * @param {string} sID Optional: The ID of the sound (if omitted, all sounds will be used.)\r\n   */\r\n\r\n  this.unmute = function(sID) {\r\n\r\n    var i;\r\n\r\n    if (sID instanceof String) {\r\n      sID = null;\r\n    }\r\n\r\n    if (!sID) {\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting all sounds');\r\n      for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n        sm2.sounds[sm2.soundIDs[i]].unmute();\r\n      }\r\n      sm2.muted = false;\r\n\r\n    } else {\r\n\r\n      if (!idCheck(sID)) return false;\r\n\r\n      sm2._wD(sm + '.unmute(): Unmuting \"' + sID + '\"');\r\n\r\n      return sm2.sounds[sID].unmute();\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Unmutes all sounds.\r\n   */\r\n\r\n  this.unmuteAll = function() {\r\n\r\n    sm2.unmute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Calls the toggleMute() method of a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.toggleMute = function(sID) {\r\n\r\n    if (!idCheck(sID)) return false;\r\n\r\n    return sm2.sounds[sID].toggleMute();\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves the memory used by the flash plugin.\r\n   *\r\n   * @return {number} The amount of memory in use\r\n   */\r\n\r\n  this.getMemoryUse = function() {\r\n\r\n    // flash-only\r\n    var ram = 0;\r\n\r\n    if (flash && fV !== 8) {\r\n      ram = parseInt(flash._getMemoryUse(), 10);\r\n    }\r\n\r\n    return ram;\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: NOPs soundManager and all SMSound objects.\r\n   */\r\n\r\n  this.disable = function(bNoDisable) {\r\n\r\n    // destroy all functions\r\n    var i;\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    // already disabled?\r\n    if (disabled) return false;\r\n\r\n    disabled = true;\r\n\r\n    _wDS('shutdown', 1);\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      disableObject(sm2.sounds[sm2.soundIDs[i]]);\r\n    }\r\n\r\n    disableObject(sm2);\r\n\r\n    // fire \"complete\", despite fail\r\n    initComplete(bNoDisable);\r\n\r\n    event.remove(window, 'load', initUserOnload);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a MIME type, eg. 'audio/mp3'.\r\n   */\r\n\r\n  this.canPlayMIME = function(sMIME) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        type: sMIME\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      // if flash 9, test netStream (movieStar) types as well.\r\n      result = (sMIME && sm2.ok() ? !!((fV > 8 ? sMIME.match(netStreamMimeTypes) : null) || sMIME.match(sm2.mimePattern)) : null); // TODO: make less \"weird\" (per JSLint)\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of a URL based on audio support.\r\n   *\r\n   * @param {string} sURL The URL to test\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayURL = function(sURL) {\r\n\r\n    var result;\r\n\r\n    if (sm2.hasHTML5) {\r\n      result = html5CanPlay({\r\n        url: sURL\r\n      });\r\n    }\r\n\r\n    if (!result && needsFlash) {\r\n      result = (sURL && sm2.ok() ? !!(sURL.match(sm2.filePattern)) : null);\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Determines playability of an HTML DOM &lt;a&gt; object (or similar object literal) based on audio support.\r\n   *\r\n   * @param {object} oLink an HTML DOM &lt;a&gt; object or object literal including href and/or type attributes\r\n   * @return {boolean} URL playability\r\n   */\r\n\r\n  this.canPlayLink = function(oLink) {\r\n\r\n    if (oLink.type !== _undefined && oLink.type && sm2.canPlayMIME(oLink.type)) return true;\r\n\r\n    return sm2.canPlayURL(oLink.href);\r\n\r\n  };\r\n\r\n  /**\r\n   * Retrieves a SMSound object by ID.\r\n   *\r\n   * @param {string} sID The ID of the sound\r\n   * @return {SMSound} The SMSound object\r\n   */\r\n\r\n  this.getSoundById = function(sID, _suppressDebug) {\r\n\r\n    if (!sID) return null;\r\n\r\n    var result = sm2.sounds[sID];\r\n\r\n    // <d>\r\n    if (!result && !_suppressDebug) {\r\n      sm2._wD(sm + '.getSoundById(): Sound \"' + sID + '\" not found.', 2);\r\n    }\r\n    // </d>\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has successfully initialized.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.onready = function(oMethod, oScope) {\r\n\r\n    var sType = 'onready',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents();\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Queues a callback for execution when SoundManager has failed to initialize.\r\n   *\r\n   * @param {function} oMethod The callback method to fire\r\n   * @param {object} oScope Optional: The scope to apply to the callback\r\n   */\r\n\r\n  this.ontimeout = function(oMethod, oScope) {\r\n\r\n    var sType = 'ontimeout',\r\n        result = false;\r\n\r\n    if (typeof oMethod === 'function') {\r\n\r\n      // <d>\r\n      if (didInit) {\r\n        sm2._wD(str('queue', sType));\r\n      }\r\n      // </d>\r\n\r\n      if (!oScope) {\r\n        oScope = window;\r\n      }\r\n\r\n      addOnEvent(sType, oMethod, oScope);\r\n      processOnEvents({ type: sType });\r\n\r\n      result = true;\r\n\r\n    } else {\r\n\r\n      throw str('needFunction', sType);\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * Writes console.log()-style debug output to a console or in-browser element.\r\n   * Applies when debugMode = true\r\n   *\r\n   * @param {string} sText The console message\r\n   * @param {object} nType Optional log level (number), or object. Number case: Log type/style where 0 = 'info', 1 = 'warn', 2 = 'error'. Object case: Object to be dumped.\r\n   */\r\n\r\n  this._writeDebug = function(sText, sTypeOrObject) {\r\n\r\n    // pseudo-private console.log()-style output\r\n    // <d>\r\n\r\n    var sDID = 'soundmanager-debug', o, oItem;\r\n\r\n    if (!sm2.setupOptions.debugMode) return false;\r\n\r\n    if (hasConsole && sm2.useConsole) {\r\n      if (sTypeOrObject && typeof sTypeOrObject === 'object') {\r\n        // object passed; dump to console.\r\n        console.log(sText, sTypeOrObject);\r\n      } else if (debugLevels[sTypeOrObject] !== _undefined) {\r\n        console[debugLevels[sTypeOrObject]](sText);\r\n      } else {\r\n        console.log(sText);\r\n      }\r\n      if (sm2.consoleOnly) return true;\r\n    }\r\n\r\n    o = id(sDID);\r\n\r\n    if (!o) return false;\r\n\r\n    oItem = doc.createElement('div');\r\n\r\n    if (++wdCount % 2 === 0) {\r\n      oItem.className = 'sm2-alt';\r\n    }\r\n\r\n    if (sTypeOrObject === _undefined) {\r\n      sTypeOrObject = 0;\r\n    } else {\r\n      sTypeOrObject = parseInt(sTypeOrObject, 10);\r\n    }\r\n\r\n    oItem.appendChild(doc.createTextNode(sText));\r\n\r\n    if (sTypeOrObject) {\r\n      if (sTypeOrObject >= 2) {\r\n        oItem.style.fontWeight = 'bold';\r\n      }\r\n      if (sTypeOrObject === 3) {\r\n        oItem.style.color = '#ff3333';\r\n      }\r\n    }\r\n\r\n    // top-to-bottom\r\n    // o.appendChild(oItem);\r\n\r\n    // bottom-to-top\r\n    o.insertBefore(oItem, o.firstChild);\r\n\r\n    o = null;\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  // <d>\r\n  // last-resort debugging option\r\n  if (wl.indexOf('sm2-debug=alert') !== -1) {\r\n    this._writeDebug = function(sText) {\r\n      window.alert(sText);\r\n    };\r\n  }\r\n  // </d>\r\n\r\n  // alias\r\n  this._wD = this._writeDebug;\r\n\r\n  /**\r\n   * Provides debug / state information on all SMSound objects.\r\n   */\r\n\r\n  this._debug = function() {\r\n\r\n    // <d>\r\n    var i, j;\r\n    _wDS('currentObj', 1);\r\n\r\n    for (i = 0, j = sm2.soundIDs.length; i < j; i++) {\r\n      sm2.sounds[sm2.soundIDs[i]]._debug();\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  /**\r\n   * Restarts and re-initializes the SoundManager instance.\r\n   *\r\n   * @param {boolean} resetEvents Optional: When true, removes all registered onready and ontimeout event callbacks.\r\n   * @param {boolean} excludeInit Options: When true, does not call beginDelayedInit() (which would restart SM2).\r\n   * @return {object} soundManager The soundManager instance.\r\n   */\r\n\r\n  this.reboot = function(resetEvents, excludeInit) {\r\n\r\n    // reset some (or all) state, and re-init unless otherwise specified.\r\n\r\n    // <d>\r\n    if (sm2.soundIDs.length) {\r\n      sm2._wD('Destroying ' + sm2.soundIDs.length + ' SMSound object' + (sm2.soundIDs.length !== 1 ? 's' : '') + '...');\r\n    }\r\n    // </d>\r\n\r\n    var i, j, k;\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n      sm2.sounds[sm2.soundIDs[i]].destruct();\r\n    }\r\n\r\n    // trash ze flash (remove from the DOM)\r\n\r\n    if (flash) {\r\n\r\n      try {\r\n\r\n        if (isIE) {\r\n          oRemovedHTML = flash.innerHTML;\r\n        }\r\n\r\n        oRemoved = flash.parentNode.removeChild(flash);\r\n\r\n      } catch(e) {\r\n\r\n        // Remove failed? May be due to flash blockers silently removing the SWF object/embed node from the DOM. Warn and continue.\r\n\r\n        _wDS('badRemove', 2);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // actually, force recreate of movie.\r\n\r\n    oRemovedHTML = oRemoved = needsFlash = flash = null;\r\n\r\n    sm2.enabled = didDCLoaded = didInit = waitingForEI = initPending = didAppend = appendSuccess = disabled = useGlobalHTML5Audio = sm2.swfLoaded = false;\r\n\r\n    sm2.soundIDs = [];\r\n    sm2.sounds = {};\r\n\r\n    idCounter = 0;\r\n    didSetup = false;\r\n\r\n    if (!resetEvents) {\r\n      // reset callbacks for onready, ontimeout etc. so that they will fire again on re-init\r\n      for (i in on_queue) {\r\n        if (on_queue.hasOwnProperty(i)) {\r\n          for (j = 0, k = on_queue[i].length; j < k; j++) {\r\n            on_queue[i][j].fired = false;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // remove all callbacks entirely\r\n      on_queue = [];\r\n    }\r\n\r\n    // <d>\r\n    if (!excludeInit) {\r\n      sm2._wD(sm + ': Rebooting...');\r\n    }\r\n    // </d>\r\n\r\n    // reset HTML5 and flash canPlay test results\r\n\r\n    sm2.html5 = {\r\n      usingFlash: null\r\n    };\r\n\r\n    sm2.flash = {};\r\n\r\n    // reset device-specific HTML/flash mode switches\r\n\r\n    sm2.html5Only = false;\r\n    sm2.ignoreFlash = false;\r\n\r\n    window.setTimeout(function() {\r\n\r\n      // by default, re-init\r\n\r\n      if (!excludeInit) {\r\n        sm2.beginDelayedInit();\r\n      }\r\n\r\n    }, 20);\r\n\r\n    return sm2;\r\n\r\n  };\r\n\r\n  this.reset = function() {\r\n\r\n    /**\r\n     * Shuts down and restores the SoundManager instance to its original loaded state, without an explicit reboot. All onready/ontimeout handlers are removed.\r\n     * After this call, SM2 may be re-initialized via soundManager.beginDelayedInit().\r\n     * @return {object} soundManager The soundManager instance.\r\n     */\r\n\r\n    _wDS('reset');\r\n\r\n    return sm2.reboot(true, true);\r\n\r\n  };\r\n\r\n  /**\r\n   * Undocumented: Determines the SM2 flash movie's load progress.\r\n   *\r\n   * @return {number or null} Percent loaded, or if invalid/unsupported, null.\r\n   */\r\n\r\n  this.getMoviePercent = function() {\r\n\r\n    /**\r\n     * Interesting syntax notes...\r\n     * Flash/ExternalInterface (ActiveX/NPAPI) bridge methods are not typeof \"function\" nor instanceof Function, but are still valid.\r\n     * Furthermore, using (flash && flash.PercentLoaded) causes IE to throw \"object doesn't support this property or method\".\r\n     * Thus, 'in' syntax must be used.\r\n     */\r\n\r\n    return (flash && 'PercentLoaded' in flash ? flash.PercentLoaded() : null);\r\n\r\n  };\r\n\r\n  /**\r\n   * Additional helper for manually invoking SM2's init process after DOM Ready / window.onload().\r\n   */\r\n\r\n  this.beginDelayedInit = function() {\r\n\r\n    windowLoaded = true;\r\n    domContentLoaded();\r\n\r\n    setTimeout(function() {\r\n\r\n      if (initPending) return false;\r\n\r\n      createMovie();\r\n      initMovie();\r\n      initPending = true;\r\n\r\n      return true;\r\n\r\n    }, 20);\r\n\r\n    delayWaitForEI();\r\n\r\n  };\r\n\r\n  /**\r\n   * Destroys the SoundManager instance and all SMSound instances.\r\n   */\r\n\r\n  this.destruct = function() {\r\n\r\n    sm2._wD(sm + '.destruct()');\r\n    sm2.disable(true);\r\n\r\n  };\r\n\r\n  /**\r\n   * SMSound() (sound object) constructor\r\n   * ------------------------------------\r\n   *\r\n   * @param {object} oOptions Sound options (id and url are required attributes)\r\n   * @return {SMSound} The new SMSound object\r\n   */\r\n\r\n  SMSound = function(oOptions) {\r\n\r\n    var s = this, resetProperties, add_html5_events, remove_html5_events, stop_html5_timer, start_html5_timer, attachOnPosition, onplay_called = false, onPositionItems = [], onPositionFired = 0, detachOnPosition, applyFromTo, lastURL = null, lastHTML5State, urlOmitted;\r\n\r\n    lastHTML5State = {\r\n      // tracks duration + position (time)\r\n      duration: null,\r\n      time: null\r\n    };\r\n\r\n    this.id = oOptions.id;\r\n\r\n    // legacy\r\n    this.sID = this.id;\r\n\r\n    this.url = oOptions.url;\r\n    this.options = mixin(oOptions);\r\n\r\n    // per-play-instance-specific options\r\n    this.instanceOptions = this.options;\r\n\r\n    // short alias\r\n    this._iO = this.instanceOptions;\r\n\r\n    // assign property defaults\r\n    this.pan = this.options.pan;\r\n    this.volume = this.options.volume;\r\n\r\n    // whether or not this object is using HTML5\r\n    this.isHTML5 = false;\r\n\r\n    // internal HTML5 Audio() object reference\r\n    this._a = null;\r\n\r\n    // for flash 8 special-case createSound() without url, followed by load/play with url case\r\n    urlOmitted = (!this.url);\r\n\r\n    /**\r\n     * SMSound() public methods\r\n     * ------------------------\r\n     */\r\n\r\n    this.id3 = {};\r\n\r\n    /**\r\n     * Writes SMSound object parameters to debug console\r\n     */\r\n\r\n    this._debug = function() {\r\n\r\n      // <d>\r\n      sm2._wD(s.id + ': Merged options:', s.options);\r\n      // </d>\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins loading a sound per its *url*.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.load = function(options) {\r\n\r\n      var oSound = null, instanceOptions;\r\n\r\n      if (options !== _undefined) {\r\n        s._iO = mixin(options, s.options);\r\n      } else {\r\n        options = s.options;\r\n        s._iO = options;\r\n        if (lastURL && lastURL !== s.url) {\r\n          _wDS('manURL');\r\n          s._iO.url = s.url;\r\n          s.url = null;\r\n        }\r\n      }\r\n\r\n      if (!s._iO.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      // ensure we're in sync\r\n      s.instanceOptions = s._iO;\r\n\r\n      // local shortcut\r\n      instanceOptions = s._iO;\r\n\r\n      sm2._wD(s.id + ': load (' + instanceOptions.url + ')');\r\n\r\n      if (!instanceOptions.url && !s.url) {\r\n        sm2._wD(s.id + ': load(): url is unassigned. Exiting.', 2);\r\n        return s;\r\n      }\r\n\r\n      // <d>\r\n      if (!s.isHTML5 && fV === 8 && !s.url && !instanceOptions.autoPlay) {\r\n        // flash 8 load() -> play() won't work before onload has fired.\r\n        sm2._wD(s.id + ': Flash 8 load() limitation: Wait for onload() before calling play().', 1);\r\n      }\r\n      // </d>\r\n\r\n      if (instanceOptions.url === s.url && s.readyState !== 0 && s.readyState !== 2) {\r\n        _wDS('onURL', 1);\r\n        // if loaded and an onload() exists, fire immediately.\r\n        if (s.readyState === 3 && instanceOptions.onload) {\r\n          // assume success based on truthy duration.\r\n          wrapCallback(s, function() {\r\n            instanceOptions.onload.apply(s, [(!!s.duration)]);\r\n          });\r\n        }\r\n        return s;\r\n      }\r\n\r\n      // reset a few state properties\r\n\r\n      s.loaded = false;\r\n      s.readyState = 1;\r\n      s.playState = 0;\r\n      s.id3 = {};\r\n\r\n      // TODO: If switching from HTML5 -> flash (or vice versa), stop currently-playing audio.\r\n\r\n      if (html5OK(instanceOptions)) {\r\n\r\n        oSound = s._setup_html5(instanceOptions);\r\n\r\n        if (!oSound._called_load) {\r\n\r\n          s._html5_canplay = false;\r\n\r\n          // TODO: review called_load / html5_canplay logic\r\n\r\n          // if url provided directly to load(), assign it here.\r\n\r\n          if (s.url !== instanceOptions.url) {\r\n\r\n            sm2._wD(_wDS('manURL') + ': ' + instanceOptions.url);\r\n\r\n            s._a.src = instanceOptions.url;\r\n\r\n            // TODO: review / re-apply all relevant options (volume, loop, onposition etc.)\r\n\r\n            // reset position for new URL\r\n            s.setPosition(0);\r\n\r\n          }\r\n\r\n          // given explicit load call, try to preload.\r\n\r\n          // early HTML5 implementation (non-standard)\r\n          s._a.autobuffer = 'auto';\r\n\r\n          // standard property, values: none / metadata / auto\r\n          // reference: http://msdn.microsoft.com/en-us/library/ie/ff974759%28v=vs.85%29.aspx\r\n          s._a.preload = 'auto';\r\n\r\n          s._a._called_load = true;\r\n\r\n        } else {\r\n\r\n          sm2._wD(s.id + ': Ignoring request to load again');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (sm2.html5Only) {\r\n          sm2._wD(s.id + ': No flash support. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        if (s._iO.url && s._iO.url.match(/data:/i)) {\r\n          // data: URIs not supported by Flash, either.\r\n          sm2._wD(s.id + ': data: URIs not supported via Flash. Exiting.');\r\n          return s;\r\n        }\r\n\r\n        try {\r\n          s.isHTML5 = false;\r\n          s._iO = policyFix(loopFix(instanceOptions));\r\n          // if we have \"position\", disable auto-play as we'll be seeking to that position at onload().\r\n          if (s._iO.autoPlay && (s._iO.position || s._iO.from)) {\r\n            sm2._wD(s.id + ': Disabling autoPlay because of non-zero offset case');\r\n            s._iO.autoPlay = false;\r\n          }\r\n          // re-assign local shortcut\r\n          instanceOptions = s._iO;\r\n          if (fV === 8) {\r\n            flash._load(s.id, instanceOptions.url, instanceOptions.stream, instanceOptions.autoPlay, instanceOptions.usePolicyFile);\r\n          } else {\r\n            flash._load(s.id, instanceOptions.url, !!(instanceOptions.stream), !!(instanceOptions.autoPlay), instanceOptions.loops || 1, !!(instanceOptions.autoLoad), instanceOptions.usePolicyFile);\r\n          }\r\n        } catch(e) {\r\n          _wDS('smError', 2);\r\n          debugTS('onload', false);\r\n          catchError({\r\n            type: 'SMSOUND_LOAD_JS_EXCEPTION',\r\n            fatal: true\r\n          });\r\n        }\r\n\r\n      }\r\n\r\n      // after all of this, ensure sound url is up to date.\r\n      s.url = instanceOptions.url;\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads a sound, canceling any open HTTP requests.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unload = function() {\r\n\r\n      // Flash 8/AS2 can't \"close\" a stream - fake it by loading an empty URL\r\n      // Flash 9/AS3: Close stream, preventing further load\r\n      // HTML5: Most UAs will use empty URL\r\n\r\n      if (s.readyState !== 0) {\r\n\r\n        sm2._wD(s.id + ': unload()');\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          if (fV === 8) {\r\n            flash._unload(s.id, emptyURL);\r\n          } else {\r\n            flash._unload(s.id);\r\n          }\r\n\r\n        } else {\r\n\r\n          stop_html5_timer();\r\n\r\n          if (s._a) {\r\n\r\n            s._a.pause();\r\n\r\n            // update empty URL, too\r\n            lastURL = html5Unload(s._a);\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // reset load/status flags\r\n        resetProperties();\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unloads and destroys a sound.\r\n     */\r\n\r\n    this.destruct = function(_bFromSM) {\r\n\r\n      sm2._wD(s.id + ': Destruct');\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        // kill sound within Flash\r\n        // Disable the onfailure handler\r\n        s._iO.onfailure = null;\r\n        flash._destroySound(s.id);\r\n\r\n      } else {\r\n\r\n        stop_html5_timer();\r\n\r\n        if (s._a) {\r\n          s._a.pause();\r\n          html5Unload(s._a);\r\n          if (!useGlobalHTML5Audio) {\r\n            remove_html5_events();\r\n          }\r\n          // break obvious circular reference\r\n          s._a._s = null;\r\n          s._a = null;\r\n        }\r\n\r\n      }\r\n\r\n      if (!_bFromSM) {\r\n        // ensure deletion from controller\r\n        sm2.destroySound(s.id, true);\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Begins playing a sound.\r\n     *\r\n     * @param {object} options Optional: Sound options\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.play = function(options, _updatePlayState) {\r\n\r\n      var fN, allowMulti, a, onready,\r\n          audioClone, onended, oncanplay,\r\n          startOK = true;\r\n\r\n      // <d>\r\n      fN = s.id + ': play(): ';\r\n      // </d>\r\n\r\n      // default to true\r\n      _updatePlayState = (_updatePlayState === _undefined ? true : _updatePlayState);\r\n\r\n      if (!options) {\r\n        options = {};\r\n      }\r\n\r\n      // first, use local URL (if specified)\r\n      if (s.url) {\r\n        s._iO.url = s.url;\r\n      }\r\n\r\n      // mix in any options defined at createSound()\r\n      s._iO = mixin(s._iO, s.options);\r\n\r\n      // mix in any options specific to this method\r\n      s._iO = mixin(options, s._iO);\r\n\r\n      s._iO.url = parseURL(s._iO.url);\r\n\r\n      s.instanceOptions = s._iO;\r\n\r\n      // RTMP-only\r\n      if (!s.isHTML5 && s._iO.serverURL && !s.connected) {\r\n        if (!s.getAutoPlay()) {\r\n          sm2._wD(fN + ' Netstream not connected yet - setting autoPlay');\r\n          s.setAutoPlay(true);\r\n        }\r\n        // play will be called in onconnect()\r\n        return s;\r\n      }\r\n\r\n      if (html5OK(s._iO)) {\r\n        s._setup_html5(s._iO);\r\n        start_html5_timer();\r\n      }\r\n\r\n      if (s.playState === 1 && !s.paused) {\r\n\r\n        allowMulti = s._iO.multiShot;\r\n\r\n        if (!allowMulti) {\r\n\r\n          sm2._wD(fN + 'Already playing (one-shot)', 1);\r\n\r\n          if (s.isHTML5) {\r\n            // go back to original position.\r\n            s.setPosition(s._iO.position);\r\n          }\r\n\r\n          return s;\r\n\r\n        }\r\n\r\n        sm2._wD(fN + 'Already playing (multi-shot)', 1);\r\n\r\n      }\r\n\r\n      // edge case: play() with explicit URL parameter\r\n      if (options.url && options.url !== s.url) {\r\n\r\n        // special case for createSound() followed by load() / play() with url; avoid double-load case.\r\n        if (!s.readyState && !s.isHTML5 && fV === 8 && urlOmitted) {\r\n\r\n          urlOmitted = false;\r\n\r\n        } else {\r\n\r\n          // load using merged options\r\n          s.load(s._iO);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (!s.loaded) {\r\n\r\n        if (s.readyState === 0) {\r\n\r\n          sm2._wD(fN + 'Attempting to load');\r\n\r\n          // try to get this sound playing ASAP\r\n          if (!s.isHTML5 && !sm2.html5Only) {\r\n\r\n            // flash: assign directly because setAutoPlay() increments the instanceCount\r\n            s._iO.autoPlay = true;\r\n            s.load(s._iO);\r\n\r\n          } else if (s.isHTML5) {\r\n\r\n            // iOS needs this when recycling sounds, loading a new URL on an existing object.\r\n            s.load(s._iO);\r\n\r\n          } else {\r\n\r\n            sm2._wD(fN + 'Unsupported type. Exiting.');\r\n\r\n            return s;\r\n\r\n          }\r\n\r\n          // HTML5 hack - re-set instanceOptions?\r\n          s.instanceOptions = s._iO;\r\n\r\n        } else if (s.readyState === 2) {\r\n\r\n          sm2._wD(fN + 'Could not load - exiting', 2);\r\n\r\n          return s;\r\n\r\n        } else {\r\n\r\n          sm2._wD(fN + 'Loading - attempting to play...');\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // \"play()\"\r\n        sm2._wD(fN.substr(0, fN.lastIndexOf(':')));\r\n\r\n      }\r\n\r\n      if (!s.isHTML5 && fV === 9 && s.position > 0 && s.position === s.duration) {\r\n        // flash 9 needs a position reset if play() is called while at the end of a sound.\r\n        sm2._wD(fN + 'Sound at end, resetting to position: 0');\r\n        options.position = 0;\r\n      }\r\n\r\n      /**\r\n       * Streams will pause when their buffer is full if they are being loaded.\r\n       * In this case paused is true, but the song hasn't started playing yet.\r\n       * If we just call resume() the onplay() callback will never be called.\r\n       * So only call resume() if the position is > 0.\r\n       * Another reason is because options like volume won't have been applied yet.\r\n       * For normal sounds, just resume.\r\n       */\r\n\r\n      if (s.paused && s.position >= 0 && (!s._iO.serverURL || s.position > 0)) {\r\n\r\n        // https://gist.github.com/37b17df75cc4d7a90bf6\r\n        sm2._wD(fN + 'Resuming from paused state', 1);\r\n        s.resume();\r\n\r\n      } else {\r\n\r\n        s._iO = mixin(options, s._iO);\r\n\r\n        /**\r\n         * Preload in the event of play() with position under Flash,\r\n         * or from/to parameters and non-RTMP case\r\n         */\r\n        if (((!s.isHTML5 && s._iO.position !== null && s._iO.position > 0) || (s._iO.from !== null && s._iO.from > 0) || s._iO.to !== null) && s.instanceCount === 0 && s.playState === 0 && !s._iO.serverURL) {\r\n\r\n          onready = function() {\r\n            // sound \"canplay\" or onload()\r\n            // re-apply position/from/to to instance options, and start playback\r\n            s._iO = mixin(options, s._iO);\r\n            s.play(s._iO);\r\n          };\r\n\r\n          // HTML5 needs to at least have \"canplay\" fired before seeking.\r\n          if (s.isHTML5 && !s._html5_canplay) {\r\n\r\n            // this hasn't been loaded yet. load it first, and then do this again.\r\n            sm2._wD(fN + 'Beginning load for non-zero offset case');\r\n\r\n            s.load({\r\n              // note: custom HTML5-only event added for from/to implementation.\r\n              _oncanplay: onready\r\n            });\r\n\r\n          } else if (!s.isHTML5 && !s.loaded && (!s.readyState || s.readyState !== 2)) {\r\n\r\n            // to be safe, preload the whole thing in Flash.\r\n\r\n            sm2._wD(fN + 'Preloading for non-zero offset case');\r\n\r\n            s.load({\r\n              onload: onready\r\n            });\r\n\r\n          }\r\n\r\n          // otherwise, we're ready to go. re-apply local options, and continue\r\n\r\n          s._iO = applyFromTo();\r\n\r\n        }\r\n\r\n        // sm2._wD(fN + 'Starting to play');\r\n\r\n        // increment instance counter, where enabled + supported\r\n        if (!s.instanceCount || s._iO.multiShotEvents || (s.isHTML5 && s._iO.multiShot && !useGlobalHTML5Audio) || (!s.isHTML5 && fV > 8 && !s.getAutoPlay())) {\r\n          s.instanceCount++;\r\n        }\r\n\r\n        // if first play and onposition parameters exist, apply them now\r\n        if (s._iO.onposition && s.playState === 0) {\r\n          attachOnPosition(s);\r\n        }\r\n\r\n        s.playState = 1;\r\n        s.paused = false;\r\n\r\n        s.position = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position : 0);\r\n\r\n        if (!s.isHTML5) {\r\n          s._iO = policyFix(loopFix(s._iO));\r\n        }\r\n\r\n        if (s._iO.onplay && _updatePlayState) {\r\n          s._iO.onplay.apply(s);\r\n          onplay_called = true;\r\n        }\r\n\r\n        s.setVolume(s._iO.volume, true);\r\n        s.setPan(s._iO.pan, true);\r\n\r\n        if (s._iO.playbackRate !== 1) {\r\n          s.setPlaybackRate(s._iO.playbackRate);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          startOK = flash._start(s.id, s._iO.loops || 1, (fV === 9 ? s.position : s.position / msecScale), s._iO.multiShot || false);\r\n\r\n          if (fV === 9 && !startOK) {\r\n            // edge case: no sound hardware, or 32-channel flash ceiling hit.\r\n            // applies only to Flash 9, non-NetStream/MovieStar sounds.\r\n            // http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/media/Sound.html#play%28%29\r\n            sm2._wD(fN + 'No sound hardware, or 32-sound ceiling hit', 2);\r\n            if (s._iO.onplayerror) {\r\n              s._iO.onplayerror.apply(s);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (s.instanceCount < 2) {\r\n\r\n            // HTML5 single-instance case\r\n\r\n            start_html5_timer();\r\n\r\n            a = s._setup_html5();\r\n\r\n            s.setPosition(s._iO.position);\r\n\r\n            a.play();\r\n\r\n          } else {\r\n\r\n            // HTML5 multi-shot case\r\n\r\n            sm2._wD(s.id + ': Cloning Audio() for instance #' + s.instanceCount + '...');\r\n\r\n            audioClone = new Audio(s._iO.url);\r\n\r\n            onended = function() {\r\n              event.remove(audioClone, 'ended', onended);\r\n              s._onfinish(s);\r\n              // cleanup\r\n              html5Unload(audioClone);\r\n              audioClone = null;\r\n            };\r\n\r\n            oncanplay = function() {\r\n              event.remove(audioClone, 'canplay', oncanplay);\r\n              try {\r\n                audioClone.currentTime = s._iO.position / msecScale;\r\n              } catch(err) {\r\n                complain(s.id + ': multiShot play() failed to apply position of ' + (s._iO.position / msecScale));\r\n              }\r\n              audioClone.play();\r\n            };\r\n\r\n            event.add(audioClone, 'ended', onended);\r\n\r\n            // apply volume to clones, too\r\n            if (s._iO.volume !== _undefined) {\r\n              audioClone.volume = Math.max(0, Math.min(1, s._iO.volume / 100));\r\n            }\r\n\r\n            // playing multiple muted sounds? if you do this, you're weird ;) - but let's cover it.\r\n            if (s.muted) {\r\n              audioClone.muted = true;\r\n            }\r\n\r\n            if (s._iO.position) {\r\n              // HTML5 audio can't seek before onplay() event has fired.\r\n              // wait for canplay, then seek to position and start playback.\r\n              event.add(audioClone, 'canplay', oncanplay);\r\n            } else {\r\n              // begin playback at currentTime: 0\r\n              audioClone.play();\r\n            }\r\n\r\n          }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // just for convenience\r\n    this.start = this.play;\r\n\r\n    /**\r\n     * Stops playing a sound (and optionally, all sounds)\r\n     *\r\n     * @param {boolean} bAll Optional: Whether to stop all sounds\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.stop = function(bAll) {\r\n\r\n      var instanceOptions = s._iO,\r\n          originalPosition;\r\n\r\n      if (s.playState === 1) {\r\n\r\n        sm2._wD(s.id + ': stop()');\r\n\r\n        s._onbufferchange(0);\r\n        s._resetOnPosition(0);\r\n        s.paused = false;\r\n\r\n        if (!s.isHTML5) {\r\n          s.playState = 0;\r\n        }\r\n\r\n        // remove onPosition listeners, if any\r\n        detachOnPosition();\r\n\r\n        // and \"to\" position, if set\r\n        if (instanceOptions.to) {\r\n          s.clearOnPosition(instanceOptions.to);\r\n        }\r\n\r\n        if (!s.isHTML5) {\r\n\r\n          flash._stop(s.id, bAll);\r\n\r\n          // hack for netStream: just unload\r\n          if (instanceOptions.serverURL) {\r\n            s.unload();\r\n          }\r\n\r\n        } else if (s._a) {\r\n\r\n            originalPosition = s.position;\r\n\r\n            // act like Flash, though\r\n            s.setPosition(0);\r\n\r\n            // hack: reflect old position for onstop() (also like Flash)\r\n            s.position = originalPosition;\r\n\r\n            // html5 has no stop()\r\n            // NOTE: pausing means iOS requires interaction to resume.\r\n            s._a.pause();\r\n\r\n            s.playState = 0;\r\n\r\n            // and update UI\r\n            s._onTimer();\r\n\r\n            stop_html5_timer();\r\n\r\n          }\r\n\r\n        s.instanceCount = 0;\r\n        s._iO = {};\r\n\r\n        if (instanceOptions.onstop) {\r\n          instanceOptions.onstop.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Sets autoPlay for RTMP.\r\n     *\r\n     * @param {boolean} autoPlay state\r\n     */\r\n\r\n    this.setAutoPlay = function(autoPlay) {\r\n\r\n      sm2._wD(s.id + ': Autoplay turned ' + (autoPlay ? 'on' : 'off'));\r\n      s._iO.autoPlay = autoPlay;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setAutoPlay(s.id, autoPlay);\r\n        if (autoPlay) {\r\n          // only increment the instanceCount if the sound isn't loaded (TODO: verify RTMP)\r\n          if (!s.instanceCount && s.readyState === 1) {\r\n            s.instanceCount++;\r\n            sm2._wD(s.id + ': Incremented instance count to ' + s.instanceCount);\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Undocumented/internal: Returns the autoPlay boolean.\r\n     *\r\n     * @return {boolean} The current autoPlay value\r\n     */\r\n\r\n    this.getAutoPlay = function() {\r\n\r\n      return s._iO.autoPlay;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the playback rate of a sound (HTML5-only.)\r\n     *\r\n     * @param {number} playbackRate (+/-)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPlaybackRate = function(playbackRate) {\r\n\r\n      // Per Mozilla, limit acceptable values to prevent playback from stopping (unless allowOverride is truthy.)\r\n      // https://developer.mozilla.org/en-US/Apps/Build/Audio_and_video_delivery/WebAudio_playbackRate_explained\r\n      var normalizedRate = Math.max(0.5, Math.min(4, playbackRate));\r\n\r\n      // <d>\r\n      if (normalizedRate !== playbackRate) {\r\n        sm2._wD(s.id + ': setPlaybackRate(' + playbackRate + '): limiting rate to ' + normalizedRate, 2);\r\n      }\r\n      // </d>\r\n\r\n      if (s.isHTML5) {\r\n        try {\r\n          s._iO.playbackRate = normalizedRate;\r\n          s._a.playbackRate = normalizedRate;\r\n        } catch(e) {\r\n          sm2._wD(s.id + ': setPlaybackRate(' + normalizedRate + ') failed: ' + e.message, 2);\r\n        }\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the position of a sound.\r\n     *\r\n     * @param {number} nMsecOffset Position (milliseconds)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPosition = function(nMsecOffset) {\r\n\r\n      if (nMsecOffset === _undefined) {\r\n        nMsecOffset = 0;\r\n      }\r\n\r\n      var position, position1K,\r\n          // Use the duration from the instance options, if we don't have a track duration yet.\r\n          // position >= 0 and <= current available (loaded) duration\r\n          offset = (s.isHTML5 ? Math.max(nMsecOffset, 0) : Math.min(s.duration || s._iO.duration, Math.max(nMsecOffset, 0)));\r\n\r\n      s.position = offset;\r\n      position1K = s.position / msecScale;\r\n      s._resetOnPosition(s.position);\r\n      s._iO.position = offset;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        position = (fV === 9 ? s.position : position1K);\r\n\r\n        if (s.readyState && s.readyState !== 2) {\r\n          // if paused or not playing, will not resume (by playing)\r\n          flash._setPosition(s.id, position, (s.paused || !s.playState), s._iO.multiShot);\r\n        }\r\n\r\n      } else if (s._a) {\r\n\r\n        // Set the position in the canplay handler if the sound is not ready yet\r\n        if (s._html5_canplay) {\r\n\r\n          if (s._a.currentTime.toFixed(3) !== position1K.toFixed(3)) {\r\n\r\n            /**\r\n             * DOM/JS errors/exceptions to watch out for:\r\n             * if seek is beyond (loaded?) position, \"DOM exception 11\"\r\n             * \"INDEX_SIZE_ERR\": DOM exception 1\r\n             */\r\n            sm2._wD(s.id + ': setPosition(' + position1K + ')');\r\n\r\n            try {\r\n              s._a.currentTime = position1K;\r\n              if (s.playState === 0 || s.paused) {\r\n                // allow seek without auto-play/resume\r\n                s._a.pause();\r\n              }\r\n            } catch(e) {\r\n              sm2._wD(s.id + ': setPosition(' + position1K + ') failed: ' + e.message, 2);\r\n            }\r\n\r\n          }\r\n\r\n        } else if (position1K) {\r\n\r\n          // warn on non-zero seek attempts\r\n          sm2._wD(s.id + ': setPosition(' + position1K + '): Cannot seek yet, sound not ready', 2);\r\n          return s;\r\n\r\n        }\r\n\r\n        if (s.paused) {\r\n\r\n          // if paused, refresh UI right away by forcing update\r\n          s._onTimer(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Pauses sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.pause = function(_bCallFlash) {\r\n\r\n      if (s.paused || (s.playState === 0 && s.readyState !== 1)) return s;\r\n\r\n      sm2._wD(s.id + ': pause()');\r\n      s.paused = true;\r\n\r\n      if (!s.isHTML5) {\r\n        if (_bCallFlash || _bCallFlash === _undefined) {\r\n          flash._pause(s.id, s._iO.multiShot);\r\n        }\r\n      } else {\r\n        s._setup_html5().pause();\r\n        stop_html5_timer();\r\n      }\r\n\r\n      if (s._iO.onpause) {\r\n        s._iO.onpause.apply(s);\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Resumes sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    /**\r\n     * When auto-loaded streams pause on buffer full they have a playState of 0.\r\n     * We need to make sure that the playState is set to 1 when these streams \"resume\".\r\n     * When a paused stream is resumed, we need to trigger the onplay() callback if it\r\n     * hasn't been called already. In this case since the sound is being played for the\r\n     * first time, I think it's more appropriate to call onplay() rather than onresume().\r\n     */\r\n\r\n    this.resume = function() {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      if (!s.paused) return s;\r\n\r\n      sm2._wD(s.id + ': resume()');\r\n      s.paused = false;\r\n      s.playState = 1;\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        if (instanceOptions.isMovieStar && !instanceOptions.serverURL) {\r\n          // Bizarre Webkit bug (Chrome reported via 8tracks.com dudes): AAC content paused for 30+ seconds(?) will not resume without a reposition.\r\n          s.setPosition(s.position);\r\n        }\r\n\r\n        // flash method is toggle-based (pause/resume)\r\n        flash._pause(s.id, instanceOptions.multiShot);\r\n\r\n      } else {\r\n\r\n        s._setup_html5().play();\r\n        start_html5_timer();\r\n\r\n      }\r\n\r\n      if (!onplay_called && instanceOptions.onplay) {\r\n\r\n        instanceOptions.onplay.apply(s);\r\n        onplay_called = true;\r\n\r\n      } else if (instanceOptions.onresume) {\r\n\r\n        instanceOptions.onresume.apply(s);\r\n\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles sound playback.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.togglePause = function() {\r\n\r\n      sm2._wD(s.id + ': togglePause()');\r\n\r\n      if (s.playState === 0) {\r\n        s.play({\r\n          position: (fV === 9 && !s.isHTML5 ? s.position : s.position / msecScale)\r\n        });\r\n        return s;\r\n      }\r\n\r\n      if (s.paused) {\r\n        s.resume();\r\n      } else {\r\n        s.pause();\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the panning (L-R) effect.\r\n     *\r\n     * @param {number} nPan The pan value (-100 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setPan = function(nPan, bInstanceOnly) {\r\n\r\n      if (nPan === _undefined) {\r\n        nPan = 0;\r\n      }\r\n\r\n      if (bInstanceOnly === _undefined) {\r\n        bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setPan(s.id, nPan);\r\n      } // else { no HTML5 pan? }\r\n\r\n      s._iO.pan = nPan;\r\n\r\n      if (!bInstanceOnly) {\r\n        s.pan = nPan;\r\n        s.options.pan = nPan;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Sets the volume.\r\n     *\r\n     * @param {number} nVol The volume value (0 to 100)\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.setVolume = function(nVol, _bInstanceOnly) {\r\n\r\n      /**\r\n       * Note: Setting volume has no effect on iOS \"special snowflake\" devices.\r\n       * Hardware volume control overrides software, and volume\r\n       * will always return 1 per Apple docs. (iOS 4 + 5.)\r\n       * http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/AddingSoundtoCanvasAnimations/AddingSoundtoCanvasAnimations.html\r\n       */\r\n\r\n      if (nVol === _undefined) {\r\n        nVol = 100;\r\n      }\r\n\r\n      if (_bInstanceOnly === _undefined) {\r\n        _bInstanceOnly = false;\r\n      }\r\n\r\n      if (!s.isHTML5) {\r\n\r\n        flash._setVolume(s.id, (sm2.muted && !s.muted) || s.muted ? 0 : nVol);\r\n\r\n      } else if (s._a) {\r\n\r\n        if (sm2.muted && !s.muted) {\r\n          s.muted = true;\r\n          s._a.muted = true;\r\n        }\r\n\r\n        // valid range for native HTML5 Audio(): 0-1\r\n        s._a.volume = Math.max(0, Math.min(1, nVol / 100));\r\n\r\n      }\r\n\r\n      s._iO.volume = nVol;\r\n\r\n      if (!_bInstanceOnly) {\r\n        s.volume = nVol;\r\n        s.options.volume = nVol;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Mutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.mute = function() {\r\n\r\n      s.muted = true;\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, 0);\r\n      } else if (s._a) {\r\n        s._a.muted = true;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Unmutes the sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.unmute = function() {\r\n\r\n      s.muted = false;\r\n      var hasIO = (s._iO.volume !== _undefined);\r\n\r\n      if (!s.isHTML5) {\r\n        flash._setVolume(s.id, hasIO ? s._iO.volume : s.options.volume);\r\n      } else if (s._a) {\r\n        s._a.muted = false;\r\n      }\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    /**\r\n     * Toggles the muted state of a sound.\r\n     *\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.toggleMute = function() {\r\n\r\n      return (s.muted ? s.unmute() : s.mute());\r\n\r\n    };\r\n\r\n    /**\r\n     * Registers a callback to be fired when a sound reaches a given position during playback.\r\n     *\r\n     * @param {number} nPosition The position to watch for\r\n     * @param {function} oMethod The relevant callback to fire\r\n     * @param {object} oScope Optional: The scope to apply the callback to\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.onPosition = function(nPosition, oMethod, oScope) {\r\n\r\n      // TODO: basic dupe checking?\r\n\r\n      onPositionItems.push({\r\n        position: parseInt(nPosition, 10),\r\n        method: oMethod,\r\n        scope: (oScope !== _undefined ? oScope : s),\r\n        fired: false\r\n      });\r\n\r\n      return s;\r\n\r\n    };\r\n\r\n    // legacy/backwards-compability: lower-case method name\r\n    this.onposition = this.onPosition;\r\n\r\n    /**\r\n     * Removes registered callback(s) from a sound, by position and/or callback.\r\n     *\r\n     * @param {number} nPosition The position to clear callback(s) for\r\n     * @param {function} oMethod Optional: Identify one callback to be removed when multiple listeners exist for one position\r\n     * @return {SMSound} The SMSound object\r\n     */\r\n\r\n    this.clearOnPosition = function(nPosition, oMethod) {\r\n\r\n      var i;\r\n\r\n      nPosition = parseInt(nPosition, 10);\r\n\r\n      if (isNaN(nPosition)) {\r\n        // safety check\r\n        return;\r\n      }\r\n\r\n      for (i = 0; i < onPositionItems.length; i++) {\r\n\r\n        if (nPosition === onPositionItems[i].position) {\r\n          // remove this item if no method was specified, or, if the method matches\r\n\r\n          if (!oMethod || (oMethod === onPositionItems[i].method)) {\r\n\r\n            if (onPositionItems[i].fired) {\r\n              // decrement \"fired\" counter, too\r\n              onPositionFired--;\r\n            }\r\n\r\n            onPositionItems.splice(i, 1);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._processOnPosition = function() {\r\n\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j || !s.playState || onPositionFired >= j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (!item.fired && s.position >= item.position) {\r\n\r\n          item.fired = true;\r\n          onPositionFired++;\r\n          item.method.apply(item.scope, [item.position]);\r\n\r\n          //  reset j -- onPositionItems.length can be changed in the item callback above... occasionally breaking the loop.\r\n          j = onPositionItems.length;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._resetOnPosition = function(nPosition) {\r\n\r\n      // reset \"fired\" for items interested in this position\r\n      var i, item, j = onPositionItems.length;\r\n\r\n      if (!j) return false;\r\n\r\n      for (i = j - 1; i >= 0; i--) {\r\n\r\n        item = onPositionItems[i];\r\n\r\n        if (item.fired && nPosition <= item.position) {\r\n          item.fired = false;\r\n          onPositionFired--;\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * SMSound() private internals\r\n     * --------------------------------\r\n     */\r\n\r\n    applyFromTo = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          f = instanceOptions.from,\r\n          t = instanceOptions.to,\r\n          start, end;\r\n\r\n      end = function() {\r\n\r\n        // end has been reached.\r\n        sm2._wD(s.id + ': \"To\" time of ' + t + ' reached.');\r\n\r\n        // detach listener\r\n        s.clearOnPosition(t, end);\r\n\r\n        // stop should clear this, too\r\n        s.stop();\r\n\r\n      };\r\n\r\n      start = function() {\r\n\r\n        sm2._wD(s.id + ': Playing \"from\" ' + f);\r\n\r\n        // add listener for end\r\n        if (t !== null && !isNaN(t)) {\r\n          s.onPosition(t, end);\r\n        }\r\n\r\n      };\r\n\r\n      if (f !== null && !isNaN(f)) {\r\n\r\n        // apply to instance options, guaranteeing correct start position.\r\n        instanceOptions.position = f;\r\n\r\n        // multiShot timing can't be tracked, so prevent that.\r\n        instanceOptions.multiShot = false;\r\n\r\n        start();\r\n\r\n      }\r\n\r\n      // return updated instanceOptions including starting position\r\n      return instanceOptions;\r\n\r\n    };\r\n\r\n    attachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // attach onposition things, if any, now.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.onPosition(parseInt(item, 10), op[item]);\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    detachOnPosition = function() {\r\n\r\n      var item,\r\n          op = s._iO.onposition;\r\n\r\n      // detach any onposition()-style listeners.\r\n\r\n      if (op) {\r\n\r\n        for (item in op) {\r\n          if (op.hasOwnProperty(item)) {\r\n            s.clearOnPosition(parseInt(item, 10));\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    start_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        startTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    stop_html5_timer = function() {\r\n\r\n      if (s.isHTML5) {\r\n        stopTimer(s);\r\n      }\r\n\r\n    };\r\n\r\n    resetProperties = function(retainPosition) {\r\n\r\n      if (!retainPosition) {\r\n        onPositionItems = [];\r\n        onPositionFired = 0;\r\n      }\r\n\r\n      onplay_called = false;\r\n\r\n      s._hasTimer = null;\r\n      s._a = null;\r\n      s._html5_canplay = false;\r\n      s.bytesLoaded = null;\r\n      s.bytesTotal = null;\r\n      s.duration = (s._iO && s._iO.duration ? s._iO.duration : null);\r\n      s.durationEstimate = null;\r\n      s.buffered = [];\r\n\r\n      // legacy: 1D array\r\n      s.eqData = [];\r\n\r\n      s.eqData.left = [];\r\n      s.eqData.right = [];\r\n\r\n      s.failures = 0;\r\n      s.isBuffering = false;\r\n      s.instanceOptions = {};\r\n      s.instanceCount = 0;\r\n      s.loaded = false;\r\n      s.metadata = {};\r\n\r\n      // 0 = uninitialised, 1 = loading, 2 = failed/error, 3 = loaded/success\r\n      s.readyState = 0;\r\n\r\n      s.muted = false;\r\n      s.paused = false;\r\n\r\n      s.peakData = {\r\n        left: 0,\r\n        right: 0\r\n      };\r\n\r\n      s.waveformData = {\r\n        left: [],\r\n        right: []\r\n      };\r\n\r\n      s.playState = 0;\r\n      s.position = null;\r\n\r\n      s.id3 = {};\r\n\r\n    };\r\n\r\n    resetProperties();\r\n\r\n    /**\r\n     * Pseudo-private SMSound internals\r\n     * --------------------------------\r\n     */\r\n\r\n    this._onTimer = function(bForce) {\r\n\r\n      /**\r\n       * HTML5-only _whileplaying() etc.\r\n       * called from both HTML5 native events, and polling/interval-based timers\r\n       * mimics flash and fires only when time/duration change, so as to be polling-friendly\r\n       */\r\n\r\n      var duration, isNew = false, time, x = {};\r\n\r\n      if (s._hasTimer || bForce) {\r\n\r\n        // TODO: May not need to track readyState (1 = loading)\r\n\r\n        if (s._a && (bForce || ((s.playState > 0 || s.readyState === 1) && !s.paused))) {\r\n\r\n          duration = s._get_html5_duration();\r\n\r\n          if (duration !== lastHTML5State.duration) {\r\n\r\n            lastHTML5State.duration = duration;\r\n            s.duration = duration;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          // TODO: investigate why this goes wack if not set/re-set each time.\r\n          s.durationEstimate = s.duration;\r\n\r\n          time = (s._a.currentTime * msecScale || 0);\r\n\r\n          if (time !== lastHTML5State.time) {\r\n\r\n            lastHTML5State.time = time;\r\n            isNew = true;\r\n\r\n          }\r\n\r\n          if (isNew || bForce) {\r\n\r\n            s._whileplaying(time, x, x, x, x);\r\n\r\n          }\r\n\r\n        }/* else {\r\n\r\n          // sm2._wD('_onTimer: Warn for \"'+s.id+'\": '+(!s._a?'Could not find element. ':'')+(s.playState === 0?'playState bad, 0?':'playState = '+s.playState+', OK'));\r\n\r\n          return false;\r\n\r\n        }*/\r\n\r\n      }\r\n\r\n      return isNew;\r\n\r\n    };\r\n\r\n    this._get_html5_duration = function() {\r\n\r\n      var instanceOptions = s._iO,\r\n          // if audio object exists, use its duration - else, instance option duration (if provided - it's a hack, really, and should be retired) OR null\r\n          d = (s._a && s._a.duration ? s._a.duration * msecScale : (instanceOptions && instanceOptions.duration ? instanceOptions.duration : null)),\r\n          result = (d && !isNaN(d) && d !== Infinity ? d : null);\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n    this._apply_loop = function(a, nLoops) {\r\n\r\n      /**\r\n       * boolean instead of \"loop\", for webkit? - spec says string. http://www.w3.org/TR/html-markup/audio.html#audio.attrs.loop\r\n       * note that loop is either off or infinite under HTML5, unlike Flash which allows arbitrary loop counts to be specified.\r\n       */\r\n\r\n      // <d>\r\n      if (!a.loop && nLoops > 1) {\r\n        sm2._wD('Note: Native HTML5 looping is infinite.', 1);\r\n      }\r\n      // </d>\r\n\r\n      a.loop = (nLoops > 1 ? 'loop' : '');\r\n\r\n    };\r\n\r\n    this._setup_html5 = function(options) {\r\n\r\n      var instanceOptions = mixin(s._iO, options),\r\n          a = useGlobalHTML5Audio ? globalHTML5Audio : s._a,\r\n          dURL = decodeURI(instanceOptions.url),\r\n          sameURL;\r\n\r\n      /**\r\n       * \"First things first, I, Poppa...\" (reset the previous state of the old sound, if playing)\r\n       * Fixes case with devices that can only play one sound at a time\r\n       * Otherwise, other sounds in mid-play will be terminated without warning and in a stuck state\r\n       */\r\n\r\n      if (useGlobalHTML5Audio) {\r\n\r\n        if (dURL === decodeURI(lastGlobalHTML5URL)) {\r\n          // global HTML5 audio: re-use of URL\r\n          sameURL = true;\r\n        }\r\n\r\n      } else if (dURL === decodeURI(lastURL)) {\r\n\r\n        // options URL is the same as the \"last\" URL, and we used (loaded) it\r\n        sameURL = true;\r\n\r\n      }\r\n\r\n      if (a) {\r\n\r\n        if (a._s) {\r\n\r\n          if (useGlobalHTML5Audio) {\r\n\r\n            if (a._s && a._s.playState && !sameURL) {\r\n\r\n              // global HTML5 audio case, and loading a new URL. stop the currently-playing one.\r\n              a._s.stop();\r\n\r\n            }\r\n\r\n          } else if (!useGlobalHTML5Audio && dURL === decodeURI(lastURL)) {\r\n\r\n            // non-global HTML5 reuse case: same url, ignore request\r\n            s._apply_loop(a, instanceOptions.loops);\r\n\r\n            return a;\r\n\r\n          }\r\n\r\n        }\r\n\r\n        if (!sameURL) {\r\n\r\n          // don't retain onPosition() stuff with new URLs.\r\n\r\n          if (lastURL) {\r\n            resetProperties(false);\r\n          }\r\n\r\n          // assign new HTML5 URL\r\n\r\n          a.src = instanceOptions.url;\r\n\r\n          s.url = instanceOptions.url;\r\n\r\n          lastURL = instanceOptions.url;\r\n\r\n          lastGlobalHTML5URL = instanceOptions.url;\r\n\r\n          a._called_load = false;\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n          s._a = new Audio(instanceOptions.url);\r\n          s._a.load();\r\n\r\n        } else {\r\n\r\n          // null for stupid Opera 9.64 case\r\n          s._a = (isOpera && opera.version() < 10 ? new Audio(null) : new Audio());\r\n\r\n        }\r\n\r\n        // assign local reference\r\n        a = s._a;\r\n\r\n        a._called_load = false;\r\n\r\n        if (useGlobalHTML5Audio) {\r\n\r\n          globalHTML5Audio = a;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      s.isHTML5 = true;\r\n\r\n      // store a ref on the track\r\n      s._a = a;\r\n\r\n      // store a ref on the audio\r\n      a._s = s;\r\n\r\n      add_html5_events();\r\n\r\n      s._apply_loop(a, instanceOptions.loops);\r\n\r\n      if (instanceOptions.autoLoad || instanceOptions.autoPlay) {\r\n\r\n        s.load();\r\n\r\n      } else {\r\n\r\n        // early HTML5 implementation (non-standard)\r\n        a.autobuffer = false;\r\n\r\n        // standard ('none' is also an option.)\r\n        a.preload = 'auto';\r\n\r\n      }\r\n\r\n      return a;\r\n\r\n    };\r\n\r\n    add_html5_events = function() {\r\n\r\n      if (s._a._added_events) return false;\r\n\r\n      var f;\r\n\r\n      function add(oEvt, oFn, bCapture) {\r\n        return s._a ? s._a.addEventListener(oEvt, oFn, bCapture || false) : null;\r\n      }\r\n\r\n      s._a._added_events = true;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          add(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    remove_html5_events = function() {\r\n\r\n      // Remove event listeners\r\n\r\n      var f;\r\n\r\n      function remove(oEvt, oFn, bCapture) {\r\n        return (s._a ? s._a.removeEventListener(oEvt, oFn, bCapture || false) : null);\r\n      }\r\n\r\n      sm2._wD(s.id + ': Removing event listeners');\r\n      s._a._added_events = false;\r\n\r\n      for (f in html5_events) {\r\n        if (html5_events.hasOwnProperty(f)) {\r\n          remove(f, html5_events[f]);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * Pseudo-private event internals\r\n     * ------------------------------\r\n     */\r\n\r\n    this._onload = function(nSuccess) {\r\n\r\n      var fN,\r\n          // check for duration to prevent false positives from flash 8 when loading from cache.\r\n          loadOK = !!nSuccess || (!s.isHTML5 && fV === 8 && s.duration);\r\n\r\n      // <d>\r\n      fN = s.id + ': ';\r\n      sm2._wD(fN + (loadOK ? 'onload()' : 'Failed to load / invalid sound?' + (!s.duration ? ' Zero-length duration reported.' : ' -') + ' (' + s.url + ')'), (loadOK ? 1 : 2));\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        if (sm2.sandbox.noRemote === true) {\r\n          sm2._wD(fN + str('noNet'), 1);\r\n        }\r\n        if (sm2.sandbox.noLocal === true) {\r\n          sm2._wD(fN + str('noLocal'), 1);\r\n        }\r\n      }\r\n      // </d>\r\n\r\n      s.loaded = loadOK;\r\n      s.readyState = (loadOK ? 3 : 2);\r\n      s._onbufferchange(0);\r\n\r\n      if (!loadOK && !s.isHTML5) {\r\n        // note: no error code from Flash.\r\n        s._onerror();\r\n      }\r\n\r\n      if (s._iO.onload) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onload.apply(s, [loadOK]);\r\n        });\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._onerror = function(errorCode, description) {\r\n\r\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#error-codes\r\n      if (s._iO.onerror) {\r\n        wrapCallback(s, function() {\r\n          s._iO.onerror.apply(s, [errorCode, description]);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n    this._onbufferchange = function(nIsBuffering) {\r\n\r\n      // ignore if not playing\r\n      if (s.playState === 0) return false;\r\n\r\n      if ((nIsBuffering && s.isBuffering) || (!nIsBuffering && !s.isBuffering)) return false;\r\n\r\n      s.isBuffering = (nIsBuffering === 1);\r\n\r\n      if (s._iO.onbufferchange) {\r\n        sm2._wD(s.id + ': Buffer state change: ' + nIsBuffering);\r\n        s._iO.onbufferchange.apply(s, [nIsBuffering]);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * Playback may have stopped due to buffering, or related reason.\r\n     * This state can be encountered on iOS < 6 when auto-play is blocked.\r\n     */\r\n\r\n    this._onsuspend = function() {\r\n\r\n      if (s._iO.onsuspend) {\r\n        sm2._wD(s.id + ': Playback suspended');\r\n        s._iO.onsuspend.apply(s);\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method, should fire only once at most\r\n     * at this point we just recreate failed sounds rather than trying to reconnect\r\n     */\r\n\r\n    this._onfailure = function(msg, level, code) {\r\n\r\n      s.failures++;\r\n      sm2._wD(s.id + ': Failure (' + s.failures + '): ' + msg);\r\n\r\n      if (s._iO.onfailure && s.failures === 1) {\r\n        s._iO.onfailure(msg, level, code);\r\n      } else {\r\n        sm2._wD(s.id + ': Ignoring failure');\r\n      }\r\n\r\n    };\r\n\r\n    /**\r\n     * flash 9/movieStar + RTMP-only method for unhandled warnings/exceptions from Flash\r\n     * e.g., RTMP \"method missing\" warning (non-fatal) for getStreamLength on server\r\n     */\r\n\r\n    this._onwarning = function(msg, level, code) {\r\n\r\n      if (s._iO.onwarning) {\r\n        s._iO.onwarning(msg, level, code);\r\n      }\r\n\r\n    };\r\n\r\n    this._onfinish = function() {\r\n\r\n      // store local copy before it gets trashed...\r\n      var io_onfinish = s._iO.onfinish;\r\n\r\n      s._onbufferchange(0);\r\n      s._resetOnPosition(0);\r\n\r\n      // reset some state items\r\n      if (s.instanceCount) {\r\n\r\n        s.instanceCount--;\r\n\r\n        if (!s.instanceCount) {\r\n\r\n          // remove onPosition listeners, if any\r\n          detachOnPosition();\r\n\r\n          // reset instance options\r\n          s.playState = 0;\r\n          s.paused = false;\r\n          s.instanceCount = 0;\r\n          s.instanceOptions = {};\r\n          s._iO = {};\r\n          stop_html5_timer();\r\n\r\n          // reset position, too\r\n          if (s.isHTML5) {\r\n            s.position = 0;\r\n          }\r\n\r\n        }\r\n\r\n        if (!s.instanceCount || s._iO.multiShotEvents) {\r\n          // fire onfinish for last, or every instance\r\n          if (io_onfinish) {\r\n            sm2._wD(s.id + ': onfinish()');\r\n            wrapCallback(s, function() {\r\n              io_onfinish.apply(s);\r\n            });\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._whileloading = function(nBytesLoaded, nBytesTotal, nDuration, nBufferLength) {\r\n\r\n      var instanceOptions = s._iO;\r\n\r\n      s.bytesLoaded = nBytesLoaded;\r\n      s.bytesTotal = nBytesTotal;\r\n      s.duration = Math.floor(nDuration);\r\n      s.bufferLength = nBufferLength;\r\n\r\n      if (!s.isHTML5 && !instanceOptions.isMovieStar) {\r\n\r\n        if (instanceOptions.duration) {\r\n          // use duration from options, if specified and larger. nobody should be specifying duration in options, actually, and it should be retired.\r\n          s.durationEstimate = (s.duration > instanceOptions.duration) ? s.duration : instanceOptions.duration;\r\n        } else {\r\n          s.durationEstimate = parseInt((s.bytesTotal / s.bytesLoaded) * s.duration, 10);\r\n        }\r\n\r\n      } else {\r\n\r\n        s.durationEstimate = s.duration;\r\n\r\n      }\r\n\r\n      // for flash, reflect sequential-load-style buffering\r\n      if (!s.isHTML5) {\r\n        s.buffered = [{\r\n          start: 0,\r\n          end: s.duration\r\n        }];\r\n      }\r\n\r\n      // allow whileloading to fire even if \"load\" fired under HTML5, due to HTTP range/partials\r\n      if ((s.readyState !== 3 || s.isHTML5) && instanceOptions.whileloading) {\r\n        instanceOptions.whileloading.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    this._whileplaying = function(nPosition, oPeakData, oWaveformDataLeft, oWaveformDataRight, oEQData) {\r\n\r\n      var instanceOptions = s._iO,\r\n          eqLeft;\r\n\r\n      // flash safety net\r\n      if (isNaN(nPosition) || nPosition === null) return false;\r\n\r\n      // Safari HTML5 play() may return small -ve values when starting from position: 0, eg. -50.120396875. Unexpected/invalid per W3, I think. Normalize to 0.\r\n      s.position = Math.max(0, nPosition);\r\n\r\n      s._processOnPosition();\r\n\r\n      if (!s.isHTML5 && fV > 8) {\r\n\r\n        if (instanceOptions.usePeakData && oPeakData !== _undefined && oPeakData) {\r\n          s.peakData = {\r\n            left: oPeakData.leftPeak,\r\n            right: oPeakData.rightPeak\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useWaveformData && oWaveformDataLeft !== _undefined && oWaveformDataLeft) {\r\n          s.waveformData = {\r\n            left: oWaveformDataLeft.split(','),\r\n            right: oWaveformDataRight.split(',')\r\n          };\r\n        }\r\n\r\n        if (instanceOptions.useEQData) {\r\n          if (oEQData !== _undefined && oEQData && oEQData.leftEQ) {\r\n            eqLeft = oEQData.leftEQ.split(',');\r\n            s.eqData = eqLeft;\r\n            s.eqData.left = eqLeft;\r\n            if (oEQData.rightEQ !== _undefined && oEQData.rightEQ) {\r\n              s.eqData.right = oEQData.rightEQ.split(',');\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      if (s.playState === 1) {\r\n\r\n        // special case/hack: ensure buffering is false if loading from cache (and not yet started)\r\n        if (!s.isHTML5 && fV === 8 && !s.position && s.isBuffering) {\r\n          s._onbufferchange(0);\r\n        }\r\n\r\n        if (instanceOptions.whileplaying) {\r\n          // flash may call after actual finish\r\n          instanceOptions.whileplaying.apply(s);\r\n        }\r\n\r\n      }\r\n\r\n      return true;\r\n\r\n    };\r\n\r\n    this._oncaptiondata = function(oData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       *\r\n       * @param {object} oData\r\n       */\r\n\r\n      sm2._wD(s.id + ': Caption data received.');\r\n\r\n      s.captiondata = oData;\r\n\r\n      if (s._iO.oncaptiondata) {\r\n        s._iO.oncaptiondata.apply(s, [oData]);\r\n      }\r\n\r\n    };\r\n\r\n    this._onmetadata = function(oMDProps, oMDData) {\r\n\r\n      /**\r\n       * internal: flash 9 + NetStream (MovieStar/RTMP-only) feature\r\n       * RTMP may include song title, MovieStar content may include encoding info\r\n       *\r\n       * @param {array} oMDProps (names)\r\n       * @param {array} oMDData (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': Metadata received.');\r\n\r\n      var oData = {}, i, j;\r\n\r\n      for (i = 0, j = oMDProps.length; i < j; i++) {\r\n        oData[oMDProps[i]] = oMDData[i];\r\n      }\r\n\r\n      s.metadata = oData;\r\n\r\n      if (s._iO.onmetadata) {\r\n        s._iO.onmetadata.call(s, s.metadata);\r\n      }\r\n\r\n    };\r\n\r\n    this._onid3 = function(oID3Props, oID3Data) {\r\n\r\n      /**\r\n       * internal: flash 8 + flash 9 ID3 feature\r\n       * may include artist, song title etc.\r\n       *\r\n       * @param {array} oID3Props (names)\r\n       * @param {array} oID3Data (values)\r\n       */\r\n\r\n      sm2._wD(s.id + ': ID3 data received.');\r\n\r\n      var oData = [], i, j;\r\n\r\n      for (i = 0, j = oID3Props.length; i < j; i++) {\r\n        oData[oID3Props[i]] = oID3Data[i];\r\n      }\r\n\r\n      s.id3 = mixin(s.id3, oData);\r\n\r\n      if (s._iO.onid3) {\r\n        s._iO.onid3.apply(s);\r\n      }\r\n\r\n    };\r\n\r\n    // flash/RTMP-only\r\n\r\n    this._onconnect = function(bSuccess) {\r\n\r\n      bSuccess = (bSuccess === 1);\r\n      sm2._wD(s.id + ': ' + (bSuccess ? 'Connected.' : 'Failed to connect? - ' + s.url), (bSuccess ? 1 : 2));\r\n      s.connected = bSuccess;\r\n\r\n      if (bSuccess) {\r\n\r\n        s.failures = 0;\r\n\r\n        if (idCheck(s.id)) {\r\n          if (s.getAutoPlay()) {\r\n            // only update the play state if auto playing\r\n            s.play(_undefined, s.getAutoPlay());\r\n          } else if (s._iO.autoLoad) {\r\n            s.load();\r\n          }\r\n        }\r\n\r\n        if (s._iO.onconnect) {\r\n          s._iO.onconnect.apply(s, [bSuccess]);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n    this._ondataerror = function(sError) {\r\n\r\n      // flash 9 wave/eq data handler\r\n      // hack: called at start, and end from flash at/after onfinish()\r\n      if (s.playState > 0) {\r\n        sm2._wD(s.id + ': Data error: ' + sError);\r\n        if (s._iO.ondataerror) {\r\n          s._iO.ondataerror.apply(s);\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    // <d>\r\n    this._debug();\r\n    // </d>\r\n\r\n  }; // SMSound()\r\n\r\n  /**\r\n   * Private SoundManager internals\r\n   * ------------------------------\r\n   */\r\n\r\n  getDocument = function() {\r\n\r\n    return (doc.body || doc.getElementsByTagName('div')[0]);\r\n\r\n  };\r\n\r\n  id = function(sID) {\r\n\r\n    return doc.getElementById(sID);\r\n\r\n  };\r\n\r\n  mixin = function(oMain, oAdd) {\r\n\r\n    // non-destructive merge\r\n    var o1 = (oMain || {}), o2, o;\r\n\r\n    // if unspecified, o2 is the default options object\r\n    o2 = (oAdd === _undefined ? sm2.defaultOptions : oAdd);\r\n\r\n    for (o in o2) {\r\n\r\n      if (o2.hasOwnProperty(o) && o1[o] === _undefined) {\r\n\r\n        if (typeof o2[o] !== 'object' || o2[o] === null) {\r\n\r\n          // assign directly\r\n          o1[o] = o2[o];\r\n\r\n        } else {\r\n\r\n          // recurse through o2\r\n          o1[o] = mixin(o1[o], o2[o]);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return o1;\r\n\r\n  };\r\n\r\n  wrapCallback = function(oSound, callback) {\r\n\r\n    /**\r\n     * 03/03/2013: Fix for Flash Player 11.6.602.171 + Flash 8 (flashVersion = 8) SWF issue\r\n     * setTimeout() fix for certain SMSound callbacks like onload() and onfinish(), where subsequent calls like play() and load() fail when Flash Player 11.6.602.171 is installed, and using soundManager with flashVersion = 8 (which is the default).\r\n     * Not sure of exact cause. Suspect race condition and/or invalid (NaN-style) position argument trickling down to the next JS -> Flash _start() call, in the play() case.\r\n     * Fix: setTimeout() to yield, plus safer null / NaN checking on position argument provided to Flash.\r\n     * https://getsatisfaction.com/schillmania/topics/recent_chrome_update_seems_to_have_broken_my_sm2_audio_player\r\n     */\r\n    if (!oSound.isHTML5 && fV === 8) {\r\n      window.setTimeout(callback, 0);\r\n    } else {\r\n      callback();\r\n    }\r\n\r\n  };\r\n\r\n  // additional soundManager properties that soundManager.setup() will accept\r\n\r\n  extraOptions = {\r\n    onready: 1,\r\n    ontimeout: 1,\r\n    defaultOptions: 1,\r\n    flash9Options: 1,\r\n    movieStarOptions: 1\r\n  };\r\n\r\n  assign = function(o, oParent) {\r\n\r\n    /**\r\n     * recursive assignment of properties, soundManager.setup() helper\r\n     * allows property assignment based on whitelist\r\n     */\r\n\r\n    var i,\r\n        result = true,\r\n        hasParent = (oParent !== _undefined),\r\n        setupOptions = sm2.setupOptions,\r\n        bonusOptions = extraOptions;\r\n\r\n    // <d>\r\n\r\n    // if soundManager.setup() called, show accepted parameters.\r\n\r\n    if (o === _undefined) {\r\n\r\n      result = [];\r\n\r\n      for (i in setupOptions) {\r\n\r\n        if (setupOptions.hasOwnProperty(i)) {\r\n          result.push(i);\r\n        }\r\n\r\n      }\r\n\r\n      for (i in bonusOptions) {\r\n\r\n        if (bonusOptions.hasOwnProperty(i)) {\r\n\r\n          if (typeof sm2[i] === 'object') {\r\n            result.push(i + ': {...}');\r\n          } else if (sm2[i] instanceof Function) {\r\n            result.push(i + ': function() {...}');\r\n          } else {\r\n            result.push(i);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      sm2._wD(str('setup', result.join(', ')));\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // </d>\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // if not an {object} we want to recurse through...\r\n\r\n        if (typeof o[i] !== 'object' || o[i] === null || o[i] instanceof Array || o[i] instanceof RegExp) {\r\n\r\n          // check \"allowed\" options\r\n\r\n          if (hasParent && bonusOptions[oParent] !== _undefined) {\r\n\r\n            // valid recursive / nested object option, eg., { defaultOptions: { volume: 50 } }\r\n            sm2[oParent][i] = o[i];\r\n\r\n          } else if (setupOptions[i] !== _undefined) {\r\n\r\n            // special case: assign to setupOptions object, which soundManager property references\r\n            sm2.setupOptions[i] = o[i];\r\n\r\n            // assign directly to soundManager, too\r\n            sm2[i] = o[i];\r\n\r\n          } else if (bonusOptions[i] === _undefined) {\r\n\r\n            // invalid or disallowed parameter. complain.\r\n            complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n            result = false;\r\n\r\n          } else if (sm2[i] instanceof Function) {\r\n\r\n            /**\r\n             * valid extraOptions (bonusOptions) parameter.\r\n             * is it a method, like onready/ontimeout? call it.\r\n             * multiple parameters should be in an array, eg. soundManager.setup({onready: [myHandler, myScope]});\r\n             */\r\n            sm2[i].apply(sm2, (o[i] instanceof Array ? o[i] : [o[i]]));\r\n\r\n          } else {\r\n\r\n            // good old-fashioned direct assignment\r\n            sm2[i] = o[i];\r\n\r\n          }\r\n\r\n        } else if (bonusOptions[i] === _undefined) {\r\n\r\n          // recursion case, eg., { defaultOptions: { ... } }\r\n\r\n          // invalid or disallowed parameter. complain.\r\n          complain(str((sm2[i] === _undefined ? 'setupUndef' : 'setupError'), i), 2);\r\n\r\n          result = false;\r\n\r\n        } else {\r\n\r\n          // recurse through object\r\n          return assign(o[i], i);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  function preferFlashCheck(kind) {\r\n\r\n    // whether flash should play a given type\r\n    return (sm2.preferFlash && hasFlash && !sm2.ignoreFlash && (sm2.flash[kind] !== _undefined && sm2.flash[kind]));\r\n\r\n  }\r\n\r\n  /**\r\n   * Internal DOM2-level event helpers\r\n   * ---------------------------------\r\n   */\r\n\r\n  event = (function() {\r\n\r\n    // normalize event methods\r\n    var old = (window.attachEvent),\r\n    evt = {\r\n      add: (old ? 'attachEvent' : 'addEventListener'),\r\n      remove: (old ? 'detachEvent' : 'removeEventListener')\r\n    };\r\n\r\n    // normalize \"on\" event prefix, optional capture argument\r\n    function getArgs(oArgs) {\r\n\r\n      var args = slice.call(oArgs),\r\n          len = args.length;\r\n\r\n      if (old) {\r\n        // prefix\r\n        args[1] = 'on' + args[1];\r\n        if (len > 3) {\r\n          // no capture\r\n          args.pop();\r\n        }\r\n      } else if (len === 3) {\r\n        args.push(false);\r\n      }\r\n\r\n      return args;\r\n\r\n    }\r\n\r\n    function apply(args, sType) {\r\n\r\n      // normalize and call the event method, with the proper arguments\r\n      var element = args.shift(),\r\n          method = [evt[sType]];\r\n\r\n      if (old) {\r\n        // old IE can't do apply().\r\n        element[method](args[0], args[1]);\r\n      } else {\r\n        element[method].apply(element, args);\r\n      }\r\n\r\n    }\r\n\r\n    function add() {\r\n      apply(getArgs(arguments), 'add');\r\n    }\r\n\r\n    function remove() {\r\n      apply(getArgs(arguments), 'remove');\r\n    }\r\n\r\n    return {\r\n      add: add,\r\n      remove: remove\r\n    };\r\n\r\n  }());\r\n\r\n  /**\r\n   * Internal HTML5 event handling\r\n   * -----------------------------\r\n   */\r\n\r\n  function html5_event(oFn) {\r\n\r\n    // wrap html5 event handlers so we don't call them on destroyed and/or unloaded sounds\r\n\r\n    return function(e) {\r\n\r\n      var s = this._s,\r\n          result;\r\n\r\n      if (!s || !s._a) {\r\n        // <d>\r\n        if (s && s.id) {\r\n          sm2._wD(s.id + ': Ignoring ' + e.type);\r\n        } else {\r\n          sm2._wD(h5 + 'Ignoring ' + e.type);\r\n        }\r\n        // </d>\r\n        result = null;\r\n      } else {\r\n        result = oFn.call(this, e);\r\n      }\r\n\r\n      return result;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  html5_events = {\r\n\r\n    // HTML5 event-name-to-handler map\r\n\r\n    abort: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': abort');\r\n\r\n    }),\r\n\r\n    // enough has loaded to play\r\n\r\n    canplay: html5_event(function() {\r\n\r\n      var s = this._s,\r\n          position1K;\r\n\r\n      if (s._html5_canplay) {\r\n        // this event has already fired. ignore.\r\n        return;\r\n      }\r\n\r\n      s._html5_canplay = true;\r\n      sm2._wD(s.id + ': canplay');\r\n      s._onbufferchange(0);\r\n\r\n      // position according to instance options\r\n      position1K = (s._iO.position !== _undefined && !isNaN(s._iO.position) ? s._iO.position / msecScale : null);\r\n\r\n      // set the position if position was provided before the sound loaded\r\n      if (this.currentTime !== position1K) {\r\n        sm2._wD(s.id + ': canplay: Setting position to ' + position1K);\r\n        try {\r\n          this.currentTime = position1K;\r\n        } catch(ee) {\r\n          sm2._wD(s.id + ': canplay: Setting position of ' + position1K + ' failed: ' + ee.message, 2);\r\n        }\r\n      }\r\n\r\n      // hack for HTML5 from/to case\r\n      if (s._iO._oncanplay) {\r\n        s._iO._oncanplay();\r\n      }\r\n\r\n    }),\r\n\r\n    canplaythrough: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      if (!s.loaded) {\r\n        s._onbufferchange(0);\r\n        s._whileloading(s.bytesLoaded, s.bytesTotal, s._get_html5_duration());\r\n        s._onload(true);\r\n      }\r\n\r\n    }),\r\n\r\n    durationchange: html5_event(function() {\r\n\r\n      // durationchange may fire at various times, probably the safest way to capture accurate/final duration.\r\n\r\n      var s = this._s,\r\n          duration;\r\n\r\n      duration = s._get_html5_duration();\r\n\r\n      if (!isNaN(duration) && duration !== s.duration) {\r\n\r\n        sm2._wD(this._s.id + ': durationchange (' + duration + ')' + (s.duration ? ', previously ' + s.duration : ''));\r\n\r\n        s.durationEstimate = s.duration = duration;\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    // TODO: Reserved for potential use\r\n    /*\r\n    emptied: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': emptied');\r\n\r\n    }),\r\n    */\r\n\r\n    ended: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': ended');\r\n\r\n      s._onfinish();\r\n\r\n    }),\r\n\r\n    error: html5_event(function() {\r\n\r\n      var description = (html5ErrorCodes[this.error.code] || null);\r\n      sm2._wD(this._s.id + ': HTML5 error, code ' + this.error.code + (description ? ' (' + description + ')' : ''));\r\n      this._s._onload(false);\r\n      this._s._onerror(this.error.code, description);\r\n\r\n    }),\r\n\r\n    loadeddata: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      sm2._wD(s.id + ': loadeddata');\r\n\r\n      // safari seems to nicely report progress events, eventually totalling 100%\r\n      if (!s._loaded && !isSafari) {\r\n        s.duration = s._get_html5_duration();\r\n      }\r\n\r\n    }),\r\n\r\n    loadedmetadata: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadedmetadata');\r\n\r\n    }),\r\n\r\n    loadstart: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': loadstart');\r\n      // assume buffering at first\r\n      this._s._onbufferchange(1);\r\n\r\n    }),\r\n\r\n    play: html5_event(function() {\r\n\r\n      // sm2._wD(this._s.id + ': play()');\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    playing: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': playing ' + String.fromCharCode(9835));\r\n      // once play starts, no buffering\r\n      this._s._onbufferchange(0);\r\n\r\n    }),\r\n\r\n    progress: html5_event(function(e) {\r\n\r\n      // note: can fire repeatedly after \"loaded\" event, due to use of HTTP range/partials\r\n\r\n      var s = this._s,\r\n          i, j, progStr, buffered = 0,\r\n          isProgress = (e.type === 'progress'),\r\n          ranges = e.target.buffered,\r\n          // firefox 3.6 implements e.loaded/total (bytes)\r\n          loaded = (e.loaded || 0),\r\n          total = (e.total || 1);\r\n\r\n      // reset the \"buffered\" (loaded byte ranges) array\r\n      s.buffered = [];\r\n\r\n      if (ranges && ranges.length) {\r\n\r\n        // if loaded is 0, try TimeRanges implementation as % of load\r\n        // https://developer.mozilla.org/en/DOM/TimeRanges\r\n\r\n        // re-build \"buffered\" array\r\n        // HTML5 returns seconds. SM2 API uses msec for setPosition() etc., whether Flash or HTML5.\r\n        for (i = 0, j = ranges.length; i < j; i++) {\r\n          s.buffered.push({\r\n            start: ranges.start(i) * msecScale,\r\n            end: ranges.end(i) * msecScale\r\n          });\r\n        }\r\n\r\n        // use the last value locally\r\n        buffered = (ranges.end(0) - ranges.start(0)) * msecScale;\r\n\r\n        // linear case, buffer sum; does not account for seeking and HTTP partials / byte ranges\r\n        loaded = Math.min(1, buffered / (e.target.duration * msecScale));\r\n\r\n        // <d>\r\n        if (isProgress && ranges.length > 1) {\r\n          progStr = [];\r\n          j = ranges.length;\r\n          for (i = 0; i < j; i++) {\r\n            progStr.push((e.target.buffered.start(i) * msecScale) + '-' + (e.target.buffered.end(i) * msecScale));\r\n          }\r\n          sm2._wD(this._s.id + ': progress, timeRanges: ' + progStr.join(', '));\r\n        }\r\n\r\n        if (isProgress && !isNaN(loaded)) {\r\n          sm2._wD(this._s.id + ': progress, ' + Math.floor(loaded * 100) + '% loaded');\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n      if (!isNaN(loaded)) {\r\n\r\n        // TODO: prevent calls with duplicate values.\r\n        s._whileloading(loaded, total, s._get_html5_duration());\r\n        if (loaded && total && loaded === total) {\r\n          // in case \"onload\" doesn't fire (eg. gecko 1.9.2)\r\n          html5_events.canplaythrough.call(this, e);\r\n        }\r\n\r\n      }\r\n\r\n    }),\r\n\r\n    ratechange: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': ratechange');\r\n\r\n    }),\r\n\r\n    suspend: html5_event(function(e) {\r\n\r\n      // download paused/stopped, may have finished (eg. onload)\r\n      var s = this._s;\r\n\r\n      sm2._wD(this._s.id + ': suspend');\r\n      html5_events.progress.call(this, e);\r\n      s._onsuspend();\r\n\r\n    }),\r\n\r\n    stalled: html5_event(function() {\r\n\r\n      sm2._wD(this._s.id + ': stalled');\r\n\r\n    }),\r\n\r\n    timeupdate: html5_event(function() {\r\n\r\n      this._s._onTimer();\r\n\r\n    }),\r\n\r\n    waiting: html5_event(function() {\r\n\r\n      var s = this._s;\r\n\r\n      // see also: seeking\r\n      sm2._wD(this._s.id + ': waiting');\r\n\r\n      // playback faster than download rate, etc.\r\n      s._onbufferchange(1);\r\n\r\n    })\r\n\r\n  };\r\n\r\n  html5OK = function(iO) {\r\n\r\n    // playability test based on URL or MIME type\r\n\r\n    var result;\r\n\r\n    if (!iO || (!iO.type && !iO.url && !iO.serverURL)) {\r\n\r\n      // nothing to check\r\n      result = false;\r\n\r\n    } else if (iO.serverURL || (iO.type && preferFlashCheck(iO.type))) {\r\n\r\n      // RTMP, or preferring flash\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      // Use type, if specified. Pass data: URIs to HTML5. If HTML5-only mode, no other options, so just give 'er\r\n      result = ((iO.type ? html5CanPlay({ type: iO.type }) : html5CanPlay({ url: iO.url }) || sm2.html5Only || iO.url.match(/data:/i)));\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  html5Unload = function(oAudio) {\r\n\r\n    /**\r\n     * Internal method: Unload media, and cancel any current/pending network requests.\r\n     * Firefox can load an empty URL, which allegedly destroys the decoder and stops the download.\r\n     * https://developer.mozilla.org/En/Using_audio_and_video_in_Firefox#Stopping_the_download_of_media\r\n     * However, Firefox has been seen loading a relative URL from '' and thus requesting the hosting page on unload.\r\n     * Other UA behaviour is unclear, so everyone else gets an about:blank-style URL.\r\n     */\r\n\r\n    var url;\r\n\r\n    if (oAudio) {\r\n\r\n      // Firefox and Chrome accept short WAVe data: URIs. Chome dislikes audio/wav, but accepts audio/wav for data: MIME.\r\n      // Desktop Safari complains / fails on data: URI, so it gets about:blank.\r\n      url = (isSafari ? emptyURL : (sm2.html5.canPlayType('audio/wav') ? emptyWAV : emptyURL));\r\n\r\n      oAudio.src = url;\r\n\r\n      // reset some state, too\r\n      if (oAudio._called_unload !== _undefined) {\r\n        oAudio._called_load = false;\r\n      }\r\n\r\n    }\r\n\r\n    if (useGlobalHTML5Audio) {\r\n\r\n      // ensure URL state is trashed, also\r\n      lastGlobalHTML5URL = null;\r\n\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  html5CanPlay = function(o) {\r\n\r\n    /**\r\n     * Try to find MIME, test and return truthiness\r\n     * o = {\r\n     *  url: '/path/to/an.mp3',\r\n     *  type: 'audio/mp3'\r\n     * }\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) return false;\r\n\r\n    var url = (o.url || null),\r\n        mime = (o.type || null),\r\n        aF = sm2.audioFormats,\r\n        result,\r\n        offset,\r\n        fileExt,\r\n        item;\r\n\r\n    // account for known cases like audio/mp3\r\n\r\n    if (mime && sm2.html5[mime] !== _undefined) return (sm2.html5[mime] && !preferFlashCheck(mime));\r\n\r\n    if (!html5Ext) {\r\n\r\n      html5Ext = [];\r\n\r\n      for (item in aF) {\r\n\r\n        if (aF.hasOwnProperty(item)) {\r\n\r\n          html5Ext.push(item);\r\n\r\n          if (aF[item].related) {\r\n            html5Ext = html5Ext.concat(aF[item].related);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      html5Ext = new RegExp('\\\\.(' + html5Ext.join('|') + ')(\\\\?.*)?$', 'i');\r\n\r\n    }\r\n\r\n    // TODO: Strip URL queries, etc.\r\n    fileExt = (url ? url.toLowerCase().match(html5Ext) : null);\r\n\r\n    if (!fileExt || !fileExt.length) {\r\n\r\n      if (!mime) {\r\n\r\n        result = false;\r\n\r\n      } else {\r\n\r\n        // audio/mp3 -> mp3, result should be known\r\n        offset = mime.indexOf(';');\r\n\r\n        // strip \"audio/X; codecs...\"\r\n        fileExt = (offset !== -1 ? mime.substr(0, offset) : mime).substr(6);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      // match the raw extension name - \"mp3\", for example\r\n      fileExt = fileExt[1];\r\n\r\n    }\r\n\r\n    if (fileExt && sm2.html5[fileExt] !== _undefined) {\r\n\r\n      // result known\r\n      result = (sm2.html5[fileExt] && !preferFlashCheck(fileExt));\r\n\r\n    } else {\r\n\r\n      mime = 'audio/' + fileExt;\r\n      result = sm2.html5.canPlayType({ type: mime });\r\n\r\n      sm2.html5[fileExt] = result;\r\n\r\n      // sm2._wD('canPlayType, found result: ' + result);\r\n      result = (result && sm2.html5[mime] && !preferFlashCheck(mime));\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  testHTML5 = function() {\r\n\r\n    /**\r\n     * Internal: Iterates over audioFormats, determining support eg. audio/mp3, audio/mpeg and so on\r\n     * assigns results to html5[] and flash[].\r\n     */\r\n\r\n    if (!sm2.useHTML5Audio || !sm2.hasHTML5) {\r\n\r\n      // without HTML5, we need Flash.\r\n      sm2.html5.usingFlash = true;\r\n      needsFlash = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // double-whammy: Opera 9.64 throws WRONG_ARGUMENTS_ERR if no parameter passed to Audio(), and Webkit + iOS happily tries to load \"null\" as a URL. :/\r\n    var a = (Audio !== _undefined ? (isOpera && opera.version() < 10 ? new Audio(null) : new Audio()) : null),\r\n        item, lookup, support = {}, aF, i;\r\n\r\n    function cp(m) {\r\n\r\n      var canPlay, j,\r\n          result = false,\r\n          isOK = false;\r\n\r\n      if (!a || typeof a.canPlayType !== 'function') return result;\r\n\r\n      if (m instanceof Array) {\r\n\r\n        // iterate through all mime types, return any successes\r\n\r\n        for (i = 0, j = m.length; i < j; i++) {\r\n\r\n          if (sm2.html5[m[i]] || a.canPlayType(m[i]).match(sm2.html5Test)) {\r\n\r\n            isOK = true;\r\n            sm2.html5[m[i]] = true;\r\n\r\n            // note flash support, too\r\n            sm2.flash[m[i]] = !!(m[i].match(flashMIME));\r\n\r\n          }\r\n\r\n        }\r\n\r\n        result = isOK;\r\n\r\n      } else {\r\n\r\n        canPlay = (a && typeof a.canPlayType === 'function' ? a.canPlayType(m) : false);\r\n        result = !!(canPlay && (canPlay.match(sm2.html5Test)));\r\n\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n\r\n    // test all registered formats + codecs\r\n\r\n    aF = sm2.audioFormats;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        lookup = 'audio/' + item;\r\n\r\n        support[item] = cp(aF[item].type);\r\n\r\n        // write back generic type too, eg. audio/mp3\r\n        support[lookup] = support[item];\r\n\r\n        // assign flash\r\n        if (item.match(flashMIME)) {\r\n\r\n          sm2.flash[item] = true;\r\n          sm2.flash[lookup] = true;\r\n\r\n        } else {\r\n\r\n          sm2.flash[item] = false;\r\n          sm2.flash[lookup] = false;\r\n\r\n        }\r\n\r\n        // assign result to related formats, too\r\n\r\n        if (aF[item] && aF[item].related) {\r\n\r\n          for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n\r\n            // eg. audio/m4a\r\n            support['audio/' + aF[item].related[i]] = support[item];\r\n            sm2.html5[aF[item].related[i]] = support[item];\r\n            sm2.flash[aF[item].related[i]] = support[item];\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    support.canPlayType = (a ? cp : null);\r\n    sm2.html5 = mixin(sm2.html5, support);\r\n\r\n    sm2.html5.usingFlash = featureCheck();\r\n    needsFlash = sm2.html5.usingFlash;\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  strings = {\r\n\r\n    // <d>\r\n    notReady: 'Unavailable - wait until onready() has fired.',\r\n    notOK: 'Audio support is not available.',\r\n    domError: sm + 'exception caught while appending SWF to DOM.',\r\n    spcWmode: 'Removing wmode, preventing known SWF loading issue(s)',\r\n    swf404: smc + 'Verify that %s is a valid path.',\r\n    tryDebug: 'Try ' + sm + '.debugFlash = true for more security details (output goes to SWF.)',\r\n    checkSWF: 'See SWF output for more debug info.',\r\n    localFail: smc + 'Non-HTTP page (' + doc.location.protocol + ' URL?) Review Flash player security settings for this special case:\\nhttp://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html\\nMay need to add/allow path, eg. c:/sm2/ or /users/me/sm2/',\r\n    waitFocus: smc + 'Special case: Waiting for SWF to load with window focus...',\r\n    waitForever: smc + 'Waiting indefinitely for Flash (will recover if unblocked)...',\r\n    waitSWF: smc + 'Waiting for 100% SWF load...',\r\n    needFunction: smc + 'Function object expected for %s',\r\n    badID: 'Sound ID \"%s\" should be a string, starting with a non-numeric character',\r\n    currentObj: smc + '_debug(): Current sound objects',\r\n    waitOnload: smc + 'Waiting for window.onload()',\r\n    docLoaded: smc + 'Document already loaded',\r\n    onload: smc + 'initComplete(): calling soundManager.onload()',\r\n    onloadOK: sm + '.onload() complete',\r\n    didInit: smc + 'init(): Already called?',\r\n    secNote: 'Flash security note: Network/internet URLs will not load due to security restrictions. Access can be configured via Flash Player Global Security Settings Page: http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html',\r\n    badRemove: smc + 'Failed to remove Flash node.',\r\n    shutdown: sm + '.disable(): Shutting down',\r\n    queue: smc + 'Queueing %s handler',\r\n    smError: 'SMSound.load(): Exception: JS-Flash communication failed, or JS error.',\r\n    fbTimeout: 'No flash response, applying .' + swfCSS.swfTimedout + ' CSS...',\r\n    fbLoaded: 'Flash loaded',\r\n    fbHandler: smc + 'flashBlockHandler()',\r\n    manURL: 'SMSound.load(): Using manually-assigned URL',\r\n    onURL: sm + '.load(): current URL already assigned.',\r\n    badFV: sm + '.flashVersion must be 8 or 9. \"%s\" is invalid. Reverting to %s.',\r\n    as2loop: 'Note: Setting stream:false so looping can work (flash 8 limitation)',\r\n    noNSLoop: 'Note: Looping not implemented for MovieStar formats',\r\n    needfl9: 'Note: Switching to flash 9, required for MP4 formats.',\r\n    mfTimeout: 'Setting flashLoadTimeout = 0 (infinite) for off-screen, mobile flash case',\r\n    needFlash: smc + 'Fatal error: Flash is needed to play some required formats, but is not available.',\r\n    gotFocus: smc + 'Got window focus.',\r\n    policy: 'Enabling usePolicyFile for data access',\r\n    setup: sm + '.setup(): allowed parameters: %s',\r\n    setupError: sm + '.setup(): \"%s\" cannot be assigned with this method.',\r\n    setupUndef: sm + '.setup(): Could not find option \"%s\"',\r\n    setupLate: sm + '.setup(): url, flashVersion and html5Test property changes will not take effect until reboot().',\r\n    noURL: smc + 'Flash URL required. Call soundManager.setup({url:...}) to get started.',\r\n    sm2Loaded: 'SoundManager 2: Ready. ' + String.fromCharCode(10003),\r\n    reset: sm + '.reset(): Removing event callbacks',\r\n    mobileUA: 'Mobile UA detected, preferring HTML5 by default.',\r\n    globalHTML5: 'Using singleton HTML5 Audio() pattern for this device.',\r\n    ignoreMobile: 'Ignoring mobile restrictions for this device.'\r\n    // </d>\r\n\r\n  };\r\n\r\n  str = function() {\r\n\r\n    // internal string replace helper.\r\n    // arguments: o [,items to replace]\r\n    // <d>\r\n\r\n    var args,\r\n        i, j, o,\r\n        sstr;\r\n\r\n    // real array, please\r\n    args = slice.call(arguments);\r\n\r\n    // first argument\r\n    o = args.shift();\r\n\r\n    sstr = (strings && strings[o] ? strings[o] : '');\r\n\r\n    if (sstr && args && args.length) {\r\n      for (i = 0, j = args.length; i < j; i++) {\r\n        sstr = sstr.replace('%s', args[i]);\r\n      }\r\n    }\r\n\r\n    return sstr;\r\n    // </d>\r\n\r\n  };\r\n\r\n  loopFix = function(sOpt) {\r\n\r\n    // flash 8 requires stream = false for looping to work\r\n    if (fV === 8 && sOpt.loops > 1 && sOpt.stream) {\r\n      _wDS('as2loop');\r\n      sOpt.stream = false;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  policyFix = function(sOpt, sPre) {\r\n\r\n    if (sOpt && !sOpt.usePolicyFile && (sOpt.onid3 || sOpt.usePeakData || sOpt.useWaveformData || sOpt.useEQData)) {\r\n      sm2._wD((sPre || '') + str('policy'));\r\n      sOpt.usePolicyFile = true;\r\n    }\r\n\r\n    return sOpt;\r\n\r\n  };\r\n\r\n  complain = function(sMsg) {\r\n\r\n    // <d>\r\n    if (hasConsole && console.warn !== _undefined) {\r\n      console.warn(sMsg);\r\n    } else {\r\n      sm2._wD(sMsg);\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  doNothing = function() {\r\n\r\n    return false;\r\n\r\n  };\r\n\r\n  disableObject = function(o) {\r\n\r\n    var oProp;\r\n\r\n    for (oProp in o) {\r\n      if (o.hasOwnProperty(oProp) && typeof o[oProp] === 'function') {\r\n        o[oProp] = doNothing;\r\n      }\r\n    }\r\n\r\n    oProp = null;\r\n\r\n  };\r\n\r\n  failSafely = function(bNoDisable) {\r\n\r\n    // general failure exception handler\r\n\r\n    if (bNoDisable === _undefined) {\r\n      bNoDisable = false;\r\n    }\r\n\r\n    if (disabled || bNoDisable) {\r\n      sm2.disable(bNoDisable);\r\n    }\r\n\r\n  };\r\n\r\n  normalizeMovieURL = function(movieURL) {\r\n\r\n    var urlParams = null, url;\r\n\r\n    if (movieURL) {\r\n\r\n      if (movieURL.match(/\\.swf(\\?.*)?$/i)) {\r\n\r\n        urlParams = movieURL.substr(movieURL.toLowerCase().lastIndexOf('.swf?') + 4);\r\n\r\n        // assume user knows what they're doing\r\n        if (urlParams) return movieURL;\r\n\r\n      } else if (movieURL.lastIndexOf('/') !== movieURL.length - 1) {\r\n\r\n        // append trailing slash, if needed\r\n        movieURL += '/';\r\n\r\n      }\r\n\r\n    }\r\n\r\n    url = (movieURL && movieURL.lastIndexOf('/') !== -1 ? movieURL.substr(0, movieURL.lastIndexOf('/') + 1) : './') + sm2.movieURL;\r\n\r\n    if (sm2.noSWFCache) {\r\n      url += ('?ts=' + new Date().getTime());\r\n    }\r\n\r\n    return url;\r\n\r\n  };\r\n\r\n  setVersionInfo = function() {\r\n\r\n    // short-hand for internal use\r\n\r\n    fV = parseInt(sm2.flashVersion, 10);\r\n\r\n    if (fV !== 8 && fV !== 9) {\r\n      sm2._wD(str('badFV', fV, defaultFlashVersion));\r\n      sm2.flashVersion = fV = defaultFlashVersion;\r\n    }\r\n\r\n    // debug flash movie, if applicable\r\n\r\n    var isDebug = (sm2.debugMode || sm2.debugFlash ? '_debug.swf' : '.swf');\r\n\r\n    if (sm2.useHTML5Audio && !sm2.html5Only && sm2.audioFormats.mp4.required && fV < 9) {\r\n      sm2._wD(str('needfl9'));\r\n      sm2.flashVersion = fV = 9;\r\n    }\r\n\r\n    sm2.version = sm2.versionNumber + (sm2.html5Only ? ' (HTML5-only mode)' : (fV === 9 ? ' (AS3/Flash 9)' : ' (AS2/Flash 8)'));\r\n\r\n    // set up default options\r\n    if (fV > 8) {\r\n\r\n      // +flash 9 base options\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.flash9Options);\r\n      sm2.features.buffering = true;\r\n\r\n      // +moviestar support\r\n      sm2.defaultOptions = mixin(sm2.defaultOptions, sm2.movieStarOptions);\r\n      sm2.filePatterns.flash9 = new RegExp('\\\\.(mp3|' + netStreamTypes.join('|') + ')(\\\\?.*)?$', 'i');\r\n      sm2.features.movieStar = true;\r\n\r\n    } else {\r\n\r\n      sm2.features.movieStar = false;\r\n\r\n    }\r\n\r\n    // regExp for flash canPlay(), etc.\r\n    sm2.filePattern = sm2.filePatterns[(fV !== 8 ? 'flash9' : 'flash8')];\r\n\r\n    // if applicable, use _debug versions of SWFs\r\n    sm2.movieURL = (fV === 8 ? 'soundmanager2.swf' : 'soundmanager2_flash9.swf').replace('.swf', isDebug);\r\n\r\n    sm2.features.peakData = sm2.features.waveformData = sm2.features.eqData = (fV > 8);\r\n\r\n  };\r\n\r\n  setPolling = function(bPolling, bHighPerformance) {\r\n\r\n    if (!flash) {\r\n      return;\r\n    }\r\n\r\n    flash._setPolling(bPolling, bHighPerformance);\r\n\r\n  };\r\n\r\n  initDebug = function() {\r\n\r\n    // starts debug mode, creating output <div> for UAs without console object\r\n\r\n    // allow force of debug mode via URL\r\n    // <d>\r\n    if (sm2.debugURLParam.test(wl)) {\r\n      sm2.setupOptions.debugMode = sm2.debugMode = true;\r\n    }\r\n\r\n    if (id(sm2.debugID)) {\r\n      return;\r\n    }\r\n\r\n    var oD, oDebug, oTarget, oToggle, tmp;\r\n\r\n    if (sm2.debugMode && !id(sm2.debugID) && (!hasConsole || !sm2.useConsole || !sm2.consoleOnly)) {\r\n\r\n      oD = doc.createElement('div');\r\n      oD.id = sm2.debugID + '-toggle';\r\n\r\n      oToggle = {\r\n        position: 'fixed',\r\n        bottom: '0px',\r\n        right: '0px',\r\n        width: '1.2em',\r\n        height: '1.2em',\r\n        lineHeight: '1.2em',\r\n        margin: '2px',\r\n        textAlign: 'center',\r\n        border: '1px solid #999',\r\n        cursor: 'pointer',\r\n        background: '#fff',\r\n        color: '#333',\r\n        zIndex: 10001\r\n      };\r\n\r\n      oD.appendChild(doc.createTextNode('-'));\r\n      oD.onclick = toggleDebug;\r\n      oD.title = 'Toggle SM2 debug console';\r\n\r\n      if (ua.match(/msie 6/i)) {\r\n        oD.style.position = 'absolute';\r\n        oD.style.cursor = 'hand';\r\n      }\r\n\r\n      for (tmp in oToggle) {\r\n        if (oToggle.hasOwnProperty(tmp)) {\r\n          oD.style[tmp] = oToggle[tmp];\r\n        }\r\n      }\r\n\r\n      oDebug = doc.createElement('div');\r\n      oDebug.id = sm2.debugID;\r\n      oDebug.style.display = (sm2.debugMode ? 'block' : 'none');\r\n\r\n      if (sm2.debugMode && !id(oD.id)) {\r\n        try {\r\n          oTarget = getDocument();\r\n          oTarget.appendChild(oD);\r\n        } catch(e2) {\r\n          throw new Error(str('domError') + ' \\n' + e2.toString());\r\n        }\r\n        oTarget.appendChild(oDebug);\r\n      }\r\n\r\n    }\r\n\r\n    oTarget = null;\r\n    // </d>\r\n\r\n  };\r\n\r\n  idCheck = this.getSoundById;\r\n\r\n  // <d>\r\n  _wDS = function(o, errorLevel) {\r\n\r\n    return (!o ? '' : sm2._wD(str(o), errorLevel));\r\n\r\n  };\r\n\r\n  toggleDebug = function() {\r\n\r\n    var o = id(sm2.debugID),\r\n    oT = id(sm2.debugID + '-toggle');\r\n\r\n    if (!o) {\r\n      return;\r\n    }\r\n\r\n    if (debugOpen) {\r\n      // minimize\r\n      oT.innerHTML = '+';\r\n      o.style.display = 'none';\r\n    } else {\r\n      oT.innerHTML = '-';\r\n      o.style.display = 'block';\r\n    }\r\n\r\n    debugOpen = !debugOpen;\r\n\r\n  };\r\n\r\n  debugTS = function(sEventType, bSuccess, sMessage) {\r\n\r\n    // troubleshooter debug hooks\r\n\r\n    if (window.sm2Debugger !== _undefined) {\r\n      try {\r\n        sm2Debugger.handleEvent(sEventType, bSuccess, sMessage);\r\n      } catch(e) {\r\n        // oh well\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n  // </d>\r\n\r\n  getSWFCSS = function() {\r\n\r\n    var css = [];\r\n\r\n    if (sm2.debugMode) {\r\n      css.push(swfCSS.sm2Debug);\r\n    }\r\n\r\n    if (sm2.debugFlash) {\r\n      css.push(swfCSS.flashDebug);\r\n    }\r\n\r\n    if (sm2.useHighPerformance) {\r\n      css.push(swfCSS.highPerf);\r\n    }\r\n\r\n    return css.join(' ');\r\n\r\n  };\r\n\r\n  flashBlockHandler = function() {\r\n\r\n    // *possible* flash block situation.\r\n\r\n    var name = str('fbHandler'),\r\n        p = sm2.getMoviePercent(),\r\n        css = swfCSS,\r\n        error = {\r\n          type: 'FLASHBLOCK'\r\n        };\r\n\r\n    if (sm2.html5Only) {\r\n      // no flash, or unused\r\n      return;\r\n    }\r\n\r\n    if (!sm2.ok()) {\r\n\r\n      if (needsFlash) {\r\n        // make the movie more visible, so user can fix\r\n        sm2.oMC.className = getSWFCSS() + ' ' + css.swfDefault + ' ' + (p === null ? css.swfTimedout : css.swfError);\r\n        sm2._wD(name + ': ' + str('fbTimeout') + (p ? ' (' + str('fbLoaded') + ')' : ''));\r\n      }\r\n\r\n      sm2.didFlashBlock = true;\r\n\r\n      // fire onready(), complain lightly\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        ignoreInit: true,\r\n        error: error\r\n      });\r\n\r\n      catchError(error);\r\n\r\n    } else {\r\n\r\n      // SM2 loaded OK (or recovered)\r\n\r\n      // <d>\r\n      if (sm2.didFlashBlock) {\r\n        sm2._wD(name + ': Unblocked');\r\n      }\r\n      // </d>\r\n\r\n      if (sm2.oMC) {\r\n        sm2.oMC.className = [getSWFCSS(), css.swfDefault, css.swfLoaded + (sm2.didFlashBlock ? ' ' + css.swfUnblocked : '')].join(' ');\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  addOnEvent = function(sType, oMethod, oScope) {\r\n\r\n    if (on_queue[sType] === _undefined) {\r\n      on_queue[sType] = [];\r\n    }\r\n\r\n    on_queue[sType].push({\r\n      method: oMethod,\r\n      scope: (oScope || null),\r\n      fired: false\r\n    });\r\n\r\n  };\r\n\r\n  processOnEvents = function(oOptions) {\r\n\r\n    // if unspecified, assume OK/error\r\n\r\n    if (!oOptions) {\r\n      oOptions = {\r\n        type: (sm2.ok() ? 'onready' : 'ontimeout')\r\n      };\r\n    }\r\n\r\n    // not ready yet.\r\n    if (!didInit && oOptions && !oOptions.ignoreInit) return false;\r\n\r\n    // invalid case\r\n    if (oOptions.type === 'ontimeout' && (sm2.ok() || (disabled && !oOptions.ignoreInit))) return false;\r\n\r\n    var status = {\r\n          success: (oOptions && oOptions.ignoreInit ? sm2.ok() : !disabled)\r\n        },\r\n\r\n        // queue specified by type, or none\r\n        srcQueue = (oOptions && oOptions.type ? on_queue[oOptions.type] || [] : []),\r\n\r\n        queue = [], i, j,\r\n        args = [status],\r\n        canRetry = (needsFlash && !sm2.ok());\r\n\r\n    if (oOptions.error) {\r\n      args[0].error = oOptions.error;\r\n    }\r\n\r\n    for (i = 0, j = srcQueue.length; i < j; i++) {\r\n      if (srcQueue[i].fired !== true) {\r\n        queue.push(srcQueue[i]);\r\n      }\r\n    }\r\n\r\n    if (queue.length) {\r\n\r\n      // sm2._wD(sm + ': Firing ' + queue.length + ' ' + oOptions.type + '() item' + (queue.length === 1 ? '' : 's'));\r\n      for (i = 0, j = queue.length; i < j; i++) {\r\n\r\n        if (queue[i].scope) {\r\n          queue[i].method.apply(queue[i].scope, args);\r\n        } else {\r\n          queue[i].method.apply(this, args);\r\n        }\r\n\r\n        if (!canRetry) {\r\n          // useFlashBlock and SWF timeout case doesn't count here.\r\n          queue[i].fired = true;\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initUserOnload = function() {\r\n\r\n    window.setTimeout(function() {\r\n\r\n      if (sm2.useFlashBlock) {\r\n        flashBlockHandler();\r\n      }\r\n\r\n      processOnEvents();\r\n\r\n      // call user-defined \"onload\", scoped to window\r\n\r\n      if (typeof sm2.onload === 'function') {\r\n        _wDS('onload', 1);\r\n        sm2.onload.apply(window);\r\n        _wDS('onloadOK', 1);\r\n      }\r\n\r\n      if (sm2.waitForWindowLoad) {\r\n        event.add(window, 'load', initUserOnload);\r\n      }\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  detectFlash = function() {\r\n\r\n    /**\r\n     * Hat tip: Flash Detect library (BSD, (C) 2007) by Carl \"DocYes\" S. Yestrau\r\n     * http://featureblend.com/javascript-flash-detection-library.html / http://featureblend.com/license.txt\r\n     */\r\n\r\n    // this work has already been done.\r\n    if (hasFlash !== _undefined) return hasFlash;\r\n\r\n    var hasPlugin = false, n = navigator, obj, type, types, AX = window.ActiveXObject;\r\n\r\n    // MS Edge 14 throws an \"Unspecified Error\" because n.plugins is inaccessible due to permissions\r\n    var nP;\r\n\r\n    try {\r\n      nP = n.plugins;\r\n    } catch(e) {\r\n      nP = undefined;\r\n    }\r\n\r\n    if (nP && nP.length) {\r\n\r\n      type = 'application/x-shockwave-flash';\r\n      types = n.mimeTypes;\r\n\r\n      if (types && types[type] && types[type].enabledPlugin && types[type].enabledPlugin.description) {\r\n        hasPlugin = true;\r\n      }\r\n\r\n    } else if (AX !== _undefined && !ua.match(/MSAppHost/i)) {\r\n\r\n      // Windows 8 Store Apps (MSAppHost) are weird (compatibility?) and won't complain here, but will barf if Flash/ActiveX object is appended to the DOM.\r\n      try {\r\n        obj = new AX('ShockwaveFlash.ShockwaveFlash');\r\n      } catch(e) {\r\n        // oh well\r\n        obj = null;\r\n      }\r\n\r\n      hasPlugin = (!!obj);\r\n\r\n      // cleanup, because it is ActiveX after all\r\n      obj = null;\r\n\r\n    }\r\n\r\n    hasFlash = hasPlugin;\r\n\r\n    return hasPlugin;\r\n\r\n  };\r\n\r\n  featureCheck = function() {\r\n\r\n    var flashNeeded,\r\n        item,\r\n        formats = sm2.audioFormats,\r\n        // iPhone <= 3.1 has broken HTML5 audio(), but firmware 3.2 (original iPad) + iOS4 works.\r\n        isSpecial = (is_iDevice && !!(ua.match(/os (1|2|3_0|3_1)\\s/i)));\r\n\r\n    if (isSpecial) {\r\n\r\n      // has Audio(), but is broken; let it load links directly.\r\n      sm2.hasHTML5 = false;\r\n\r\n      // ignore flash case, however\r\n      sm2.html5Only = true;\r\n\r\n      // hide the SWF, if present\r\n      if (sm2.oMC) {\r\n        sm2.oMC.style.display = 'none';\r\n      }\r\n\r\n    } else if (sm2.useHTML5Audio) {\r\n\r\n        if (!sm2.html5 || !sm2.html5.canPlayType) {\r\n          sm2._wD('SoundManager: No HTML5 Audio() support detected.');\r\n          sm2.hasHTML5 = false;\r\n        }\r\n\r\n        // <d>\r\n        if (isBadSafari) {\r\n          sm2._wD(smc + 'Note: Buggy HTML5 Audio in Safari on this OS X release, see https://bugs.webkit.org/show_bug.cgi?id=32159 - ' + (!hasFlash ? ' would use flash fallback for MP3/MP4, but none detected.' : 'will use flash fallback for MP3/MP4, if available'), 1);\r\n        }\r\n        // </d>\r\n\r\n      }\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n\r\n      // sort out whether flash is optional, required or can be ignored.\r\n\r\n      // innocent until proven guilty.\r\n      canIgnoreFlash = true;\r\n\r\n      for (item in formats) {\r\n\r\n        if (formats.hasOwnProperty(item)) {\r\n\r\n          if (formats[item].required) {\r\n\r\n            if (!sm2.html5.canPlayType(formats[item].type)) {\r\n\r\n              // 100% HTML5 mode is not possible.\r\n              canIgnoreFlash = false;\r\n              flashNeeded = true;\r\n\r\n            } else if (sm2.preferFlash && (sm2.flash[item] || sm2.flash[formats[item].type])) {\r\n\r\n              // flash may be required, or preferred for this format.\r\n              flashNeeded = true;\r\n\r\n            }\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    // sanity check...\r\n    if (sm2.ignoreFlash) {\r\n      flashNeeded = false;\r\n      canIgnoreFlash = true;\r\n    }\r\n\r\n    sm2.html5Only = (sm2.hasHTML5 && sm2.useHTML5Audio && !flashNeeded);\r\n\r\n    return (!sm2.html5Only);\r\n\r\n  };\r\n\r\n  parseURL = function(url) {\r\n\r\n    /**\r\n     * Internal: Finds and returns the first playable URL (or failing that, the first URL.)\r\n     * @param {string or array} url A single URL string, OR, an array of URL strings or {url:'/path/to/resource', type:'audio/mp3'} objects.\r\n     */\r\n\r\n    var i, j, urlResult = 0, result;\r\n\r\n    if (url instanceof Array) {\r\n\r\n      // find the first good one\r\n      for (i = 0, j = url.length; i < j; i++) {\r\n\r\n        if (url[i] instanceof Object) {\r\n\r\n          // MIME check\r\n          if (sm2.canPlayMIME(url[i].type)) {\r\n            urlResult = i;\r\n            break;\r\n          }\r\n\r\n        } else if (sm2.canPlayURL(url[i])) {\r\n\r\n          // URL string check\r\n          urlResult = i;\r\n          break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      // normalize to string\r\n      if (url[urlResult].url) {\r\n        url[urlResult] = url[urlResult].url;\r\n      }\r\n\r\n      result = url[urlResult];\r\n\r\n    } else {\r\n\r\n      // single URL case\r\n      result = url;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n\r\n  startTimer = function(oSound) {\r\n\r\n    /**\r\n     * attach a timer to this sound, and start an interval if needed\r\n     */\r\n\r\n    if (!oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = true;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        if (h5IntervalTimer === null && h5TimerCount === 0) {\r\n\r\n          h5IntervalTimer = setInterval(timerExecute, sm2.html5PollingInterval);\r\n\r\n        }\r\n\r\n        h5TimerCount++;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  stopTimer = function(oSound) {\r\n\r\n    /**\r\n     * detach a timer\r\n     */\r\n\r\n    if (oSound._hasTimer) {\r\n\r\n      oSound._hasTimer = false;\r\n\r\n      if (!mobileHTML5 && sm2.html5PollingInterval) {\r\n\r\n        // interval will stop itself at next execution.\r\n\r\n        h5TimerCount--;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  timerExecute = function() {\r\n\r\n    /**\r\n     * manual polling for HTML5 progress events, ie., whileplaying()\r\n     * (can achieve greater precision than conservative default HTML5 interval)\r\n     */\r\n\r\n    var i;\r\n\r\n    if (h5IntervalTimer !== null && !h5TimerCount) {\r\n\r\n      // no active timers, stop polling interval.\r\n\r\n      clearInterval(h5IntervalTimer);\r\n\r\n      h5IntervalTimer = null;\r\n\r\n      return;\r\n\r\n    }\r\n\r\n    // check all HTML5 sounds with timers\r\n\r\n    for (i = sm2.soundIDs.length - 1; i >= 0; i--) {\r\n\r\n      if (sm2.sounds[sm2.soundIDs[i]].isHTML5 && sm2.sounds[sm2.soundIDs[i]]._hasTimer) {\r\n        sm2.sounds[sm2.soundIDs[i]]._onTimer();\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  catchError = function(options) {\r\n\r\n    options = (options !== _undefined ? options : {});\r\n\r\n    if (typeof sm2.onerror === 'function') {\r\n      sm2.onerror.apply(window, [{\r\n        type: (options.type !== _undefined ? options.type : null)\r\n      }]);\r\n    }\r\n\r\n    if (options.fatal !== _undefined && options.fatal) {\r\n      sm2.disable();\r\n    }\r\n\r\n  };\r\n\r\n  badSafariFix = function() {\r\n\r\n    // special case: \"bad\" Safari (OS X 10.3 - 10.7) must fall back to flash for MP3/MP4\r\n    if (!isBadSafari || !detectFlash()) {\r\n      // doesn't apply\r\n      return;\r\n    }\r\n\r\n    var aF = sm2.audioFormats, i, item;\r\n\r\n    for (item in aF) {\r\n\r\n      if (aF.hasOwnProperty(item)) {\r\n\r\n        if (item === 'mp3' || item === 'mp4') {\r\n\r\n          sm2._wD(sm + ': Using flash fallback for ' + item + ' format');\r\n          sm2.html5[item] = false;\r\n\r\n          // assign result to related formats, too\r\n          if (aF[item] && aF[item].related) {\r\n            for (i = aF[item].related.length - 1; i >= 0; i--) {\r\n              sm2.html5[aF[item].related[i]] = false;\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * Pseudo-private flash/ExternalInterface methods\r\n   * ----------------------------------------------\r\n   */\r\n\r\n  this._setSandboxType = function(sandboxType) {\r\n\r\n    // <d>\r\n    // Security sandbox according to Flash plugin\r\n    var sb = sm2.sandbox;\r\n\r\n    sb.type = sandboxType;\r\n    sb.description = sb.types[(sb.types[sandboxType] !== _undefined ? sandboxType : 'unknown')];\r\n\r\n    if (sb.type === 'localWithFile') {\r\n\r\n      sb.noRemote = true;\r\n      sb.noLocal = false;\r\n      _wDS('secNote', 2);\r\n\r\n    } else if (sb.type === 'localWithNetwork') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = true;\r\n\r\n    } else if (sb.type === 'localTrusted') {\r\n\r\n      sb.noRemote = false;\r\n      sb.noLocal = false;\r\n\r\n    }\r\n    // </d>\r\n\r\n  };\r\n\r\n  this._externalInterfaceOK = function(swfVersion) {\r\n\r\n    // flash callback confirming flash loaded, EI working etc.\r\n    // swfVersion: SWF build string\r\n\r\n    if (sm2.swfLoaded) {\r\n      return;\r\n    }\r\n\r\n    var e;\r\n\r\n    debugTS('swf', true);\r\n    debugTS('flashtojs', true);\r\n    sm2.swfLoaded = true;\r\n    tryInitOnFocus = false;\r\n\r\n    if (isBadSafari) {\r\n      badSafariFix();\r\n    }\r\n\r\n    // complain if JS + SWF build/version strings don't match, excluding +DEV builds\r\n    // <d>\r\n    if (!swfVersion || swfVersion.replace(/\\+dev/i, '') !== sm2.versionNumber.replace(/\\+dev/i, '')) {\r\n\r\n      e = sm + ': Fatal: JavaScript file build \"' + sm2.versionNumber + '\" does not match Flash SWF build \"' + swfVersion + '\" at ' + sm2.url + '. Ensure both are up-to-date.';\r\n\r\n      // escape flash -> JS stack so this error fires in window.\r\n      setTimeout(function() {\r\n        throw new Error(e);\r\n      }, 0);\r\n\r\n      // exit, init will fail with timeout\r\n      return;\r\n\r\n    }\r\n    // </d>\r\n\r\n    // IE needs a larger timeout\r\n    setTimeout(init, isIE ? 100 : 1);\r\n\r\n  };\r\n\r\n  /**\r\n   * Private initialization helpers\r\n   * ------------------------------\r\n   */\r\n\r\n  createMovie = function(movieID, movieURL) {\r\n\r\n    // ignore if already connected\r\n    if (didAppend && appendSuccess) return false;\r\n\r\n    function initMsg() {\r\n\r\n      // <d>\r\n\r\n      var options = [],\r\n          title,\r\n          msg = [],\r\n          delimiter = ' + ';\r\n\r\n      title = 'SoundManager ' + sm2.version + (!sm2.html5Only && sm2.useHTML5Audio ? (sm2.hasHTML5 ? ' + HTML5 audio' : ', no HTML5 audio support') : '');\r\n\r\n      if (!sm2.html5Only) {\r\n\r\n        if (sm2.preferFlash) {\r\n          options.push('preferFlash');\r\n        }\r\n\r\n        if (sm2.useHighPerformance) {\r\n          options.push('useHighPerformance');\r\n        }\r\n\r\n        if (sm2.flashPollingInterval) {\r\n          options.push('flashPollingInterval (' + sm2.flashPollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n        if (sm2.wmode) {\r\n          options.push('wmode (' + sm2.wmode + ')');\r\n        }\r\n\r\n        if (sm2.debugFlash) {\r\n          options.push('debugFlash');\r\n        }\r\n\r\n        if (sm2.useFlashBlock) {\r\n          options.push('flashBlock');\r\n        }\r\n\r\n      } else if (sm2.html5PollingInterval) {\r\n          options.push('html5PollingInterval (' + sm2.html5PollingInterval + 'ms)');\r\n        }\r\n\r\n      if (options.length) {\r\n        msg = msg.concat([options.join(delimiter)]);\r\n      }\r\n\r\n      sm2._wD(title + (msg.length ? delimiter + msg.join(', ') : ''), 1);\r\n\r\n      showSupport();\r\n\r\n      // </d>\r\n\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      // 100% HTML5 mode\r\n      setVersionInfo();\r\n\r\n      initMsg();\r\n      sm2.oMC = id(sm2.movieID);\r\n      init();\r\n\r\n      // prevent multiple init attempts\r\n      didAppend = true;\r\n\r\n      appendSuccess = true;\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    // flash path\r\n    var remoteURL = (movieURL || sm2.url),\r\n    localURL = (sm2.altURL || remoteURL),\r\n    swfTitle = 'JS/Flash audio component (SoundManager 2)',\r\n    oTarget = getDocument(),\r\n    extraClass = getSWFCSS(),\r\n    isRTL = null,\r\n    html = doc.getElementsByTagName('html')[0],\r\n    oEmbed, oMovie, tmp, movieHTML, oEl, s, x, sClass;\r\n\r\n    isRTL = (html && html.dir && html.dir.match(/rtl/i));\r\n    movieID = (movieID === _undefined ? sm2.id : movieID);\r\n\r\n    function param(name, value) {\r\n      return '<param name=\"' + name + '\" value=\"' + value + '\" />';\r\n    }\r\n\r\n    // safety check for legacy (change to Flash 9 URL)\r\n    setVersionInfo();\r\n    sm2.url = normalizeMovieURL(overHTTP ? remoteURL : localURL);\r\n    movieURL = sm2.url;\r\n\r\n    sm2.wmode = (!sm2.wmode && sm2.useHighPerformance ? 'transparent' : sm2.wmode);\r\n\r\n    if (sm2.wmode !== null && (ua.match(/msie 8/i) || (!isIE && !sm2.useHighPerformance)) && navigator.platform.match(/win32|win64/i)) {\r\n      /**\r\n       * extra-special case: movie doesn't load until scrolled into view when using wmode = anything but 'window' here\r\n       * does not apply when using high performance (position:fixed means on-screen), OR infinite flash load timeout\r\n       * wmode breaks IE 8 on Vista + Win7 too in some cases, as of January 2011 (?)\r\n       */\r\n      messages.push(strings.spcWmode);\r\n      sm2.wmode = null;\r\n    }\r\n\r\n    oEmbed = {\r\n      name: movieID,\r\n      id: movieID,\r\n      src: movieURL,\r\n      quality: 'high',\r\n      allowScriptAccess: sm2.allowScriptAccess,\r\n      bgcolor: sm2.bgColor,\r\n      pluginspage: http + 'www.macromedia.com/go/getflashplayer',\r\n      title: swfTitle,\r\n      type: 'application/x-shockwave-flash',\r\n      wmode: sm2.wmode,\r\n      // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n      hasPriority: 'true'\r\n    };\r\n\r\n    if (sm2.debugFlash) {\r\n      oEmbed.FlashVars = 'debug=1';\r\n    }\r\n\r\n    if (!sm2.wmode) {\r\n      // don't write empty attribute\r\n      delete oEmbed.wmode;\r\n    }\r\n\r\n    if (isIE) {\r\n\r\n      // IE is \"special\".\r\n      oMovie = doc.createElement('div');\r\n      movieHTML = [\r\n        '<object id=\"' + movieID + '\" data=\"' + movieURL + '\" type=\"' + oEmbed.type + '\" title=\"' + oEmbed.title + '\" classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\">',\r\n        param('movie', movieURL),\r\n        param('AllowScriptAccess', sm2.allowScriptAccess),\r\n        param('quality', oEmbed.quality),\r\n        (sm2.wmode ? param('wmode', sm2.wmode) : ''),\r\n        param('bgcolor', sm2.bgColor),\r\n        param('hasPriority', 'true'),\r\n        (sm2.debugFlash ? param('FlashVars', oEmbed.FlashVars) : ''),\r\n        '</object>'\r\n      ].join('');\r\n\r\n    } else {\r\n\r\n      oMovie = doc.createElement('embed');\r\n      for (tmp in oEmbed) {\r\n        if (oEmbed.hasOwnProperty(tmp)) {\r\n          oMovie.setAttribute(tmp, oEmbed[tmp]);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    initDebug();\r\n    extraClass = getSWFCSS();\r\n    oTarget = getDocument();\r\n\r\n    if (oTarget) {\r\n\r\n      sm2.oMC = (id(sm2.movieID) || doc.createElement('div'));\r\n\r\n      if (!sm2.oMC.id) {\r\n\r\n        sm2.oMC.id = sm2.movieID;\r\n        sm2.oMC.className = swfCSS.swfDefault + ' ' + extraClass;\r\n        s = null;\r\n        oEl = null;\r\n\r\n        if (!sm2.useFlashBlock) {\r\n          if (sm2.useHighPerformance) {\r\n            // on-screen at all times\r\n            s = {\r\n              position: 'fixed',\r\n              width: '8px',\r\n              height: '8px',\r\n              // >= 6px for flash to run fast, >= 8px to start up under Firefox/win32 in some cases. odd? yes.\r\n              bottom: '0px',\r\n              left: '0px',\r\n              overflow: 'hidden'\r\n            };\r\n          } else {\r\n            // hide off-screen, lower priority\r\n            s = {\r\n              position: 'absolute',\r\n              width: '6px',\r\n              height: '6px',\r\n              top: '-9999px',\r\n              left: '-9999px'\r\n            };\r\n            if (isRTL) {\r\n              s.left = Math.abs(parseInt(s.left, 10)) + 'px';\r\n            }\r\n          }\r\n        }\r\n\r\n        if (isWebkit) {\r\n          // soundcloud-reported render/crash fix, safari 5\r\n          sm2.oMC.style.zIndex = 10000;\r\n        }\r\n\r\n        if (!sm2.debugFlash) {\r\n          for (x in s) {\r\n            if (s.hasOwnProperty(x)) {\r\n              sm2.oMC.style[x] = s[x];\r\n            }\r\n          }\r\n        }\r\n\r\n        try {\r\n\r\n          if (!isIE) {\r\n            sm2.oMC.appendChild(oMovie);\r\n          }\r\n\r\n          oTarget.appendChild(sm2.oMC);\r\n\r\n          if (isIE) {\r\n            oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n            oEl.className = swfCSS.swfBox;\r\n            oEl.innerHTML = movieHTML;\r\n          }\r\n\r\n          appendSuccess = true;\r\n\r\n        } catch(e) {\r\n\r\n          throw new Error(str('domError') + ' \\n' + e.toString());\r\n\r\n        }\r\n\r\n      } else {\r\n\r\n        // SM2 container is already in the document (eg. flashblock use case)\r\n        sClass = sm2.oMC.className;\r\n        sm2.oMC.className = (sClass ? sClass + ' ' : swfCSS.swfDefault) + (extraClass ? ' ' + extraClass : '');\r\n        sm2.oMC.appendChild(oMovie);\r\n\r\n        if (isIE) {\r\n          oEl = sm2.oMC.appendChild(doc.createElement('div'));\r\n          oEl.className = swfCSS.swfBox;\r\n          oEl.innerHTML = movieHTML;\r\n        }\r\n\r\n        appendSuccess = true;\r\n\r\n      }\r\n\r\n    }\r\n\r\n    didAppend = true;\r\n\r\n    initMsg();\r\n\r\n    // sm2._wD(sm + ': Trying to load ' + movieURL + (!overHTTP && sm2.altURL ? ' (alternate URL)' : ''), 1);\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  initMovie = function() {\r\n\r\n    if (sm2.html5Only) {\r\n      createMovie();\r\n      return false;\r\n    }\r\n\r\n    // attempt to get, or create, movie (may already exist)\r\n    if (flash) return false;\r\n\r\n    if (!sm2.url) {\r\n\r\n      /**\r\n       * Something isn't right - we've reached init, but the soundManager url property has not been set.\r\n       * User has not called setup({url: ...}), or has not set soundManager.url (legacy use case) directly before init time.\r\n       * Notify and exit. If user calls setup() with a url: property, init will be restarted as in the deferred loading case.\r\n       */\r\n\r\n       _wDS('noURL');\r\n       return false;\r\n\r\n    }\r\n\r\n    // inline markup case\r\n    flash = sm2.getMovie(sm2.id);\r\n\r\n    if (!flash) {\r\n\r\n      if (!oRemoved) {\r\n\r\n        // try to create\r\n        createMovie(sm2.id, sm2.url);\r\n\r\n      } else {\r\n\r\n        // try to re-append removed movie after reboot()\r\n        if (!isIE) {\r\n          sm2.oMC.appendChild(oRemoved);\r\n        } else {\r\n          sm2.oMC.innerHTML = oRemovedHTML;\r\n        }\r\n\r\n        oRemoved = null;\r\n        didAppend = true;\r\n\r\n      }\r\n\r\n      flash = sm2.getMovie(sm2.id);\r\n\r\n    }\r\n\r\n    if (typeof sm2.oninitmovie === 'function') {\r\n      setTimeout(sm2.oninitmovie, 1);\r\n    }\r\n\r\n    // <d>\r\n    flushMessages();\r\n    // </d>\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  delayWaitForEI = function() {\r\n\r\n    setTimeout(waitForEI, 1000);\r\n\r\n  };\r\n\r\n  rebootIntoHTML5 = function() {\r\n\r\n    // special case: try for a reboot with preferFlash: false, if 100% HTML5 mode is possible and useFlashBlock is not enabled.\r\n\r\n    window.setTimeout(function() {\r\n\r\n      complain(smc + 'useFlashBlock is false, 100% HTML5 mode is possible. Rebooting with preferFlash: false...');\r\n\r\n      sm2.setup({\r\n        preferFlash: false\r\n      }).reboot();\r\n\r\n      // if for some reason you want to detect this case, use an ontimeout() callback and look for html5Only and didFlashBlock == true.\r\n      sm2.didFlashBlock = true;\r\n\r\n      sm2.beginDelayedInit();\r\n\r\n    }, 1);\r\n\r\n  };\r\n\r\n  waitForEI = function() {\r\n\r\n    var p,\r\n        loadIncomplete = false;\r\n\r\n    if (!sm2.url) {\r\n      // No SWF url to load (noURL case) - exit for now. Will be retried when url is set.\r\n      return;\r\n    }\r\n\r\n    if (waitingForEI) {\r\n      return;\r\n    }\r\n\r\n    waitingForEI = true;\r\n    event.remove(window, 'load', delayWaitForEI);\r\n\r\n    if (hasFlash && tryInitOnFocus && !isFocused) {\r\n      // Safari won't load flash in background tabs, only when focused.\r\n      _wDS('waitFocus');\r\n      return;\r\n    }\r\n\r\n    if (!didInit) {\r\n      p = sm2.getMoviePercent();\r\n      if (p > 0 && p < 100) {\r\n        loadIncomplete = true;\r\n      }\r\n    }\r\n\r\n    setTimeout(function() {\r\n\r\n      p = sm2.getMoviePercent();\r\n\r\n      if (loadIncomplete) {\r\n        // special case: if movie *partially* loaded, retry until it's 100% before assuming failure.\r\n        waitingForEI = false;\r\n        sm2._wD(str('waitSWF'));\r\n        window.setTimeout(delayWaitForEI, 1);\r\n        return;\r\n      }\r\n\r\n      // <d>\r\n      if (!didInit) {\r\n\r\n        sm2._wD(sm + ': No Flash response within expected time. Likely causes: ' + (p === 0 ? 'SWF load failed, ' : '') + 'Flash blocked or JS-Flash security error.' + (sm2.debugFlash ? ' ' + str('checkSWF') : ''), 2);\r\n\r\n        if (!overHTTP && p) {\r\n\r\n          _wDS('localFail', 2);\r\n\r\n          if (!sm2.debugFlash) {\r\n            _wDS('tryDebug', 2);\r\n          }\r\n\r\n        }\r\n\r\n        if (p === 0) {\r\n\r\n          // if 0 (not null), probably a 404.\r\n          sm2._wD(str('swf404', sm2.url), 1);\r\n\r\n        }\r\n\r\n        debugTS('flashtojs', false, ': Timed out' + (overHTTP ? ' (Check flash security or flash blockers)' : ' (No plugin/missing SWF?)'));\r\n\r\n      }\r\n      // </d>\r\n\r\n      // give up / time-out, depending\r\n\r\n      if (!didInit && okToDisable) {\r\n\r\n        if (p === null) {\r\n\r\n          // SWF failed to report load progress. Possibly blocked.\r\n\r\n          if (sm2.useFlashBlock || sm2.flashLoadTimeout === 0) {\r\n\r\n            if (sm2.useFlashBlock) {\r\n\r\n              flashBlockHandler();\r\n\r\n            }\r\n\r\n            _wDS('waitForever');\r\n\r\n          } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n            // no custom flash block handling, but SWF has timed out. Will recover if user unblocks / allows SWF load.\r\n            rebootIntoHTML5();\r\n\r\n          } else {\r\n\r\n            _wDS('waitForever');\r\n\r\n            // fire any regular registered ontimeout() listeners.\r\n            processOnEvents({\r\n              type: 'ontimeout',\r\n              ignoreInit: true,\r\n              error: {\r\n                type: 'INIT_FLASHBLOCK'\r\n              }\r\n            });\r\n\r\n          }\r\n\r\n        } else if (sm2.flashLoadTimeout === 0) {\r\n\r\n          // SWF loaded? Shouldn't be a blocking issue, then.\r\n\r\n          _wDS('waitForever');\r\n\r\n        } else if (!sm2.useFlashBlock && canIgnoreFlash) {\r\n\r\n          rebootIntoHTML5();\r\n\r\n        } else {\r\n\r\n          failSafely(true);\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }, sm2.flashLoadTimeout);\r\n\r\n  };\r\n\r\n  handleFocus = function() {\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'focus', handleFocus);\r\n    }\r\n\r\n    if (isFocused || !tryInitOnFocus) {\r\n      // already focused, or not special Safari background tab case\r\n      cleanup();\r\n      return true;\r\n    }\r\n\r\n    okToDisable = true;\r\n    isFocused = true;\r\n    _wDS('gotFocus');\r\n\r\n    // allow init to restart\r\n    waitingForEI = false;\r\n\r\n    // kick off ExternalInterface timeout, now that the SWF has started\r\n    delayWaitForEI();\r\n\r\n    cleanup();\r\n    return true;\r\n\r\n  };\r\n\r\n  flushMessages = function() {\r\n\r\n    // <d>\r\n\r\n    // SM2 pre-init debug messages\r\n    if (messages.length) {\r\n      sm2._wD('SoundManager 2: ' + messages.join(' '), 1);\r\n      messages = [];\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  showSupport = function() {\r\n\r\n    // <d>\r\n\r\n    flushMessages();\r\n\r\n    var item, tests = [];\r\n\r\n    if (sm2.useHTML5Audio && sm2.hasHTML5) {\r\n      for (item in sm2.audioFormats) {\r\n        if (sm2.audioFormats.hasOwnProperty(item)) {\r\n          tests.push(item + ' = ' + sm2.html5[item] + (!sm2.html5[item] && needsFlash && sm2.flash[item] ? ' (using flash)' : (sm2.preferFlash && sm2.flash[item] && needsFlash ? ' (preferring flash)' : (!sm2.html5[item] ? ' (' + (sm2.audioFormats[item].required ? 'required, ' : '') + 'and no flash support)' : ''))));\r\n        }\r\n      }\r\n      sm2._wD('SoundManager 2 HTML5 support: ' + tests.join(', '), 1);\r\n    }\r\n\r\n    // </d>\r\n\r\n  };\r\n\r\n  initComplete = function(bNoDisable) {\r\n\r\n    if (didInit) return false;\r\n\r\n    if (sm2.html5Only) {\r\n      // all good.\r\n      _wDS('sm2Loaded', 1);\r\n      didInit = true;\r\n      initUserOnload();\r\n      debugTS('onload', true);\r\n      return true;\r\n    }\r\n\r\n    var wasTimeout = (sm2.useFlashBlock && sm2.flashLoadTimeout && !sm2.getMoviePercent()),\r\n        result = true,\r\n        error;\r\n\r\n    if (!wasTimeout) {\r\n      didInit = true;\r\n    }\r\n\r\n    error = {\r\n      type: (!hasFlash && needsFlash ? 'NO_FLASH' : 'INIT_TIMEOUT')\r\n    };\r\n\r\n    sm2._wD('SoundManager 2 ' + (disabled ? 'failed to load' : 'loaded') + ' (' + (disabled ? 'Flash security/load error' : 'OK') + ') ' + String.fromCharCode(disabled ? 10006 : 10003), disabled ? 2 : 1);\r\n\r\n    if (disabled || bNoDisable) {\r\n\r\n      if (sm2.useFlashBlock && sm2.oMC) {\r\n        sm2.oMC.className = getSWFCSS() + ' ' + (sm2.getMoviePercent() === null ? swfCSS.swfTimedout : swfCSS.swfError);\r\n      }\r\n\r\n      processOnEvents({\r\n        type: 'ontimeout',\r\n        error: error,\r\n        ignoreInit: true\r\n      });\r\n\r\n      debugTS('onload', false);\r\n      catchError(error);\r\n\r\n      result = false;\r\n\r\n    } else {\r\n\r\n      debugTS('onload', true);\r\n\r\n    }\r\n\r\n    if (!disabled) {\r\n\r\n      if (sm2.waitForWindowLoad && !windowLoaded) {\r\n\r\n        _wDS('waitOnload');\r\n        event.add(window, 'load', initUserOnload);\r\n\r\n      } else {\r\n\r\n        // <d>\r\n        if (sm2.waitForWindowLoad && windowLoaded) {\r\n          _wDS('docLoaded');\r\n        }\r\n        // </d>\r\n\r\n        initUserOnload();\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n  };\r\n\r\n  /**\r\n   * apply top-level setupOptions object as local properties, eg., this.setupOptions.flashVersion -> this.flashVersion (soundManager.flashVersion)\r\n   * this maintains backward compatibility, and allows properties to be defined separately for use by soundManager.setup().\r\n   */\r\n\r\n  setProperties = function() {\r\n\r\n    var i,\r\n        o = sm2.setupOptions;\r\n\r\n    for (i in o) {\r\n\r\n      if (o.hasOwnProperty(i)) {\r\n\r\n        // assign local property if not already defined\r\n\r\n        if (sm2[i] === _undefined) {\r\n\r\n          sm2[i] = o[i];\r\n\r\n        } else if (sm2[i] !== o[i]) {\r\n\r\n          // legacy support: write manually-assigned property (eg., soundManager.url) back to setupOptions to keep things in sync\r\n          sm2.setupOptions[i] = sm2[i];\r\n\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  init = function() {\r\n\r\n    // called after onload()\r\n\r\n    if (didInit) {\r\n      _wDS('didInit');\r\n      return false;\r\n    }\r\n\r\n    function cleanup() {\r\n      event.remove(window, 'load', sm2.beginDelayedInit);\r\n    }\r\n\r\n    if (sm2.html5Only) {\r\n\r\n      if (!didInit) {\r\n        // we don't need no steenking flash!\r\n        cleanup();\r\n        sm2.enabled = true;\r\n        initComplete();\r\n      }\r\n\r\n      return true;\r\n\r\n    }\r\n\r\n    // flash path\r\n    initMovie();\r\n\r\n    try {\r\n\r\n      // attempt to talk to Flash\r\n      flash._externalInterfaceTest(false);\r\n\r\n      /**\r\n       * Apply user-specified polling interval, OR, if \"high performance\" set, faster vs. default polling\r\n       * (determines frequency of whileloading/whileplaying callbacks, effectively driving UI framerates)\r\n       */\r\n      setPolling(true, (sm2.flashPollingInterval || (sm2.useHighPerformance ? 10 : 50)));\r\n\r\n      if (!sm2.debugMode) {\r\n        // stop the SWF from making debug output calls to JS\r\n        flash._disableDebug();\r\n      }\r\n\r\n      sm2.enabled = true;\r\n      debugTS('jstoflash', true);\r\n\r\n      if (!sm2.html5Only) {\r\n        // prevent browser from showing cached page state (or rather, restoring \"suspended\" page state) via back button, because flash may be dead\r\n        // http://www.webkit.org/blog/516/webkit-page-cache-ii-the-unload-event/\r\n        event.add(window, 'unload', doNothing);\r\n      }\r\n\r\n    } catch(e) {\r\n\r\n      sm2._wD('js/flash exception: ' + e.toString());\r\n\r\n      debugTS('jstoflash', false);\r\n\r\n      catchError({\r\n        type: 'JS_TO_FLASH_EXCEPTION',\r\n        fatal: true\r\n      });\r\n\r\n      // don't disable, for reboot()\r\n      failSafely(true);\r\n\r\n      initComplete();\r\n\r\n      return false;\r\n\r\n    }\r\n\r\n    initComplete();\r\n\r\n    // disconnect events\r\n    cleanup();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoaded = function() {\r\n\r\n    if (didDCLoaded) return false;\r\n\r\n    didDCLoaded = true;\r\n\r\n    // assign top-level soundManager properties eg. soundManager.url\r\n    setProperties();\r\n\r\n    initDebug();\r\n\r\n    if (!hasFlash && sm2.hasHTML5) {\r\n\r\n      sm2._wD('SoundManager 2: No Flash detected' + (!sm2.useHTML5Audio ? ', enabling HTML5.' : '. Trying HTML5-only mode.'), 1);\r\n\r\n      sm2.setup({\r\n        useHTML5Audio: true,\r\n        // make sure we aren't preferring flash, either\r\n        // TODO: preferFlash should not matter if flash is not installed. Currently, stuff breaks without the below tweak.\r\n        preferFlash: false\r\n      });\r\n\r\n    }\r\n\r\n    testHTML5();\r\n\r\n    if (!hasFlash && needsFlash) {\r\n\r\n      messages.push(strings.needFlash);\r\n\r\n      // TODO: Fatal here vs. timeout approach, etc.\r\n      // hack: fail sooner.\r\n      sm2.setup({\r\n        flashLoadTimeout: 1\r\n      });\r\n\r\n    }\r\n\r\n    if (doc.removeEventListener) {\r\n      doc.removeEventListener('DOMContentLoaded', domContentLoaded, false);\r\n    }\r\n\r\n    initMovie();\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  domContentLoadedIE = function() {\r\n\r\n    if (doc.readyState === 'complete') {\r\n      domContentLoaded();\r\n      doc.detachEvent('onreadystatechange', domContentLoadedIE);\r\n    }\r\n\r\n    return true;\r\n\r\n  };\r\n\r\n  winOnLoad = function() {\r\n\r\n    // catch edge case of initComplete() firing after window.load()\r\n    windowLoaded = true;\r\n\r\n    // catch case where DOMContentLoaded has been sent, but we're still in doc.readyState = 'interactive'\r\n    domContentLoaded();\r\n\r\n    event.remove(window, 'load', winOnLoad);\r\n\r\n  };\r\n\r\n  // sniff up-front\r\n  detectFlash();\r\n\r\n  // focus and window load, init (primarily flash-driven)\r\n  event.add(window, 'focus', handleFocus);\r\n  event.add(window, 'load', delayWaitForEI);\r\n  event.add(window, 'load', winOnLoad);\r\n\r\n  if (doc.addEventListener) {\r\n\r\n    doc.addEventListener('DOMContentLoaded', domContentLoaded, false);\r\n\r\n  } else if (doc.attachEvent) {\r\n\r\n    doc.attachEvent('onreadystatechange', domContentLoadedIE);\r\n\r\n  } else {\r\n\r\n    // no add/attachevent support - safe to assume no JS -> Flash either\r\n    debugTS('onload', false);\r\n    catchError({\r\n      type: 'NO_DOM2_EVENTS',\r\n      fatal: true\r\n    });\r\n\r\n  }\r\n\r\n} // SoundManager()\r\n\r\n// SM2_DEFER details: http://www.schillmania.com/projects/soundmanager2/doc/getstarted/#lazy-loading\r\n\r\nif (window.SM2_DEFER === _undefined || !SM2_DEFER) {\r\n  soundManager = new SoundManager();\r\n}\r\n\r\n/**\r\n * SoundManager public interfaces\r\n * ------------------------------\r\n */\r\n\r\nif (typeof module === 'object' && module && typeof module.exports === 'object') {\r\n\r\n  /**\r\n   * commonJS module\r\n   */\r\n\r\n  module.exports.SoundManager = SoundManager;\r\n  module.exports.soundManager = soundManager;\r\n\r\n} else if (typeof define === 'function' && define.amd) {\r\n\r\n  /**\r\n   * AMD - requireJS\r\n   * basic usage:\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance().setup({\r\n   *     url: '/swf/',\r\n   *     onready: function() { ... }\r\n   *   })\r\n   * });\r\n   *\r\n   * SM2_DEFER usage:\r\n   * window.SM2_DEFER = true;\r\n   * require([\"/path/to/soundmanager2.js\"], function(SoundManager) {\r\n   *   SoundManager.getInstance(function() {\r\n   *     var soundManager = new SoundManager.constructor();\r\n   *     soundManager.setup({\r\n   *       url: '/swf/',\r\n   *       ...\r\n   *     });\r\n   *     ...\r\n   *     soundManager.beginDelayedInit();\r\n   *     return soundManager;\r\n   *   })\r\n   * });\r\n   */\r\n\r\n  define(function() {\r\n    /**\r\n     * Retrieve the global instance of SoundManager.\r\n     * If a global instance does not exist it can be created using a callback.\r\n     *\r\n     * @param {Function} smBuilder Optional: Callback used to create a new SoundManager instance\r\n     * @return {SoundManager} The global SoundManager instance\r\n     */\r\n    function getInstance(smBuilder) {\r\n      if (!window.soundManager && smBuilder instanceof Function) {\r\n        var instance = smBuilder(SoundManager);\r\n        if (instance instanceof SoundManager) {\r\n          window.soundManager = instance;\r\n        }\r\n      }\r\n      return window.soundManager;\r\n    }\r\n    return {\r\n      constructor: SoundManager,\r\n      getInstance: getInstance\r\n    };\r\n  });\r\n\r\n}\r\n\r\n// standard browser case\r\n\r\n// constructor\r\nwindow.SoundManager = SoundManager;\r\n\r\n/**\r\n * note: SM2 requires a window global due to Flash, which makes calls to window.soundManager.\r\n * Flash may not always be needed, but this is not known until async init and SM2 may even \"reboot\" into Flash mode.\r\n */\r\n\r\n// public API, flash callbacks etc.\r\nwindow.soundManager = soundManager;\r\n\r\n}(window));\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}