{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport BeatControls from '../components/BeatControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  const [leftSliderValue, setLeftSliderValue] = useState(0);\n  const [rightSliderValue, setRightSliderValue] = useState(0);\n  const socket = useRef(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection\n    socket.current = new WebSocket('ws://192.168.0.201:8765');\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    socket.current.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,bitrate,images,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n      console.log(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundSelect = sound => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setSelectedSound(sound);\n    const audio = new Audio(sound.previews['preview-hq-mp3']);\n    audioRef.current = audio;\n    audio.play();\n  };\n  const handleStopPreview = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const buttonPins = [5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18];\n  const handleButtonSoundClick = (sound, index) => {\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    const audio = sound.previews['preview-hq-mp3'];\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const handleButtonSoundDrop = (index, e) => {\n    e.preventDefault();\n    const soundData = e.dataTransfer.getData('sound');\n    const sound = JSON.parse(soundData);\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n  };\n  const handleButtonSoundDragOver = e => {\n    e.preventDefault();\n  };\n  const resetAudio = () => {\n    setSelectedSound(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(BeatControls, {\n      buttonPins: buttonPins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"usPXsemr5A99p6O3fQ5iw4aHbS0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","BeatControls","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","selectedSound","setSelectedSound","assignedSounds","setAssignedSounds","Array","fill","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","socket","audioRef","current","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","fetchSounds","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","json","randomPianoSounds","results","slice","error","handleSoundSelect","sound","pause","currentTime","audio","Audio","previews","play","handleStopPreview","buttonPins","handleButtonSoundClick","index","newAssignedSounds","pin","send","JSON","stringify","type","handleButtonSoundDrop","e","preventDefault","soundData","dataTransfer","getData","parse","handleButtonSoundDragOver","resetAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaRedo } from 'react-icons/fa';\nimport SoundComponent from '../components/Sound';\nimport BeatControls from '../components/BeatControls';\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tbitrate: string;\n\timages: {\n\t\twaveform_m: string;\n\t\tspectral_l: string;\n\t};\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\ttags: string[] | undefined;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [query, setQuery] = useState<string>('Drums');\n\tconst [selectedSound, setSelectedSound] = useState<Sound | null>(null);\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\n\t\tArray(16).fill(null)\n\t);\n\tconst [leftSliderValue, setLeftSliderValue] = useState<number>(0);\n\tconst [rightSliderValue, setRightSliderValue] = useState<number>(0);\n\n\tconst socket = useRef<WebSocket | null>(null);\n\tconst audioRef = useRef<HTMLAudioElement | null>(null);\n\n\tuseEffect(() => {\n\t\t// Initialize the WebSocket connection\n\t\tsocket.current = new WebSocket('ws://192.168.0.201:8765');\n\n\t\tsocket.current.onopen = () => {\n\t\t\tconsole.log('WebSocket connection established.');\n\t\t};\n\n\t\tsocket.current.onmessage = (event: any) => {\n\t\t\tconsole.log('Received message:', event.data);\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\t\tconsole.log('WebSocket connection closed.');\n\t\t};\n\n\t\t// Clean up WebSocket connection when component unmounts\n\t\treturn () => {\n\t\t\tif (socket.current) {\n\t\t\t\tsocket.current.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchSounds(query);\n\t}, [query]);\n\n\tconst fetchSounds = async (searchQuery: string) => {\n\t\ttry {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\tquery: searchQuery,\n\t\t\t\tfields: 'id,name,bitrate,images,previews,tags',\n\t\t\t\ttoken: apiKey\n\t\t\t});\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\n\t\t\tsetSounds(randomPianoSounds);\n\t\t\tconsole.log(randomPianoSounds);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundSelect = (sound: Sound) => {\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t}\n\n\t\tsetSelectedSound(sound);\n\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\n\t\taudioRef.current = audio;\n\t\taudio.play();\n\t};\n\n\tconst handleStopPreview = () => {\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t\tsetSelectedSound(null);\n\t\t}\n\t};\n\n\tconst buttonPins = [\n\t\t5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18\n\t];\n\n\tconst handleButtonSoundClick = (sound: Sound, index: number) => {\n\t\tconst newAssignedSounds = [...assignedSounds];\n\t\tnewAssignedSounds[index] = sound;\n\t\tconst audio = sound.previews['preview-hq-mp3'];\n\t\tsetAssignedSounds(newAssignedSounds);\n\n\t\t// Send the selected sound to the backend\n\t\tif (sound && socket.current) {\n\t\t\tconst pin = buttonPins[index];\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t\t}\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t\tsetSelectedSound(null);\n\t\t}\n\t};\n\n\tconst handleButtonSoundDrop = (\n\t\tindex: number,\n\t\te: React.DragEvent<HTMLButtonElement>\n\t) => {\n\t\te.preventDefault();\n\t\tconst soundData = e.dataTransfer.getData('sound');\n\t\tconst sound = JSON.parse(soundData);\n\t\tconst newAssignedSounds = [...assignedSounds];\n\t\tnewAssignedSounds[index] = sound;\n\t\tsetAssignedSounds(newAssignedSounds);\n\n\t\t// Send the selected sound to the backend\n\t\tif (sound && socket.current) {\n\t\t\tconst pin = buttonPins[index];\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t\t}\n\t};\n\n\tconst handleButtonSoundDragOver = (e: React.DragEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\t};\n\n\tconst resetAudio = () => {\n\t\tsetSelectedSound(null);\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t{/* Existing JSX */}\n\t\t\t<BeatControls buttonPins={buttonPins} />\n\t\t\t{/* Remaining JSX */}\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}