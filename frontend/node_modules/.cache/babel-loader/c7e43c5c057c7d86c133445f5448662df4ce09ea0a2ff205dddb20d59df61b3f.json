{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaStop, FaRedo, FaCircle, FaSquare } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BeatControls = ({\n  socket\n}) => {\n  _s();\n  const [timerValue, setTimerValue] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [recordedButtons, setRecordedButtons] = useState([]);\n  const timerRef = useRef(null);\n  const mockSocket = {\n    onmessage: null,\n    send: data => {\n      if (mockSocket.onmessage) {\n        const pin = Math.floor(Math.random() * 16) + 1; // Random pin number\n        mockSocket.onmessage({\n          data: JSON.stringify({\n            type: 'assign_sound',\n            pin\n          })\n        });\n      }\n    },\n    close: () => {}\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!timerRunning) {\n      setTimerValue(0);\n      setTimerRunning(true);\n      timerRef.current = window.setInterval(() => {\n        setTimerValue(prevValue => {\n          if (prevValue >= 10) {\n            setTimerRunning(false);\n            window.clearInterval(timerRef.current);\n            return 0;\n          }\n          return prevValue + 1;\n        });\n      }, 1000);\n    } else {\n      setTimerRunning(false);\n      window.clearInterval(timerRef.current);\n    }\n  };\n  const stopPlayback = () => {\n    setIsPlaying(false);\n    setTimerRunning(false);\n    setTimerValue(0);\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n  };\n  const resetTimer = () => {\n    setRecordedButtons([]);\n    setTimerValue(0);\n  };\n  const handleClearRecordedButtons = () => {\n    setRecordedButtons([]);\n  };\n  useEffect(() => {\n    if (socket) {\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'assign_sound' && data.pin) {\n          setRecordedButtons(prevButtons => [...prevButtons, data.pin]);\n        }\n      };\n    }\n  }, [socket]);\n  useEffect(() => {\n    if (isPlaying) {\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < recordedButtons.length) {\n          setTimerValue(recordedButtons[index]);\n          index++;\n        } else {\n          clearInterval(interval);\n          setIsPlaying(false);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, recordedButtons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beat-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-axis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: timerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), recordedButtons.map((buttonPin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-indicator\",\n        children: buttonPin % 2 === 0 ? /*#__PURE__*/_jsxDEV(FaSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(FaCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 45\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPlayback,\n        children: /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: /*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearRecordedButtons,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 3\n  }, this);\n};\n_s(BeatControls, \"eo/3czruISWE6L7A13rEA34+/r8=\");\n_c = BeatControls;\nexport default BeatControls;\nvar _c;\n$RefreshReg$(_c, \"BeatControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaPlay","FaPause","FaStop","FaRedo","FaCircle","FaSquare","jsxDEV","_jsxDEV","BeatControls","socket","_s","timerValue","setTimerValue","isPlaying","setIsPlaying","timerRunning","setTimerRunning","recordedButtons","setRecordedButtons","timerRef","mockSocket","onmessage","send","data","pin","Math","floor","random","JSON","stringify","type","close","togglePlayPause","current","window","setInterval","prevValue","clearInterval","stopPlayback","resetTimer","handleClearRecordedButtons","event","parse","prevButtons","index","interval","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonPin","onClick","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n\tFaPlay,\n\tFaPause,\n\tFaStop,\n\tFaRedo,\n\tFaCircle,\n\tFaSquare\n} from 'react-icons/fa';\n\ninterface BeatControlsProps {\n\tsocket: WebSocket | null;\n}\n\nconst BeatControls: React.FC<BeatControlsProps> = ({ socket }) => {\n\tconst [timerValue, setTimerValue] = useState<number>(0);\n\tconst [isPlaying, setIsPlaying] = useState<boolean>(false);\n\tconst [timerRunning, setTimerRunning] = useState<boolean>(false);\n\tconst [recordedButtons, setRecordedButtons] = useState<number[]>([]);\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst mockSocket = {\n\t\tonmessage: null,\n\t\tsend: (data) => {\n\t\t\tif (mockSocket.onmessage) {\n\t\t\t\tconst pin = Math.floor(Math.random() * 16) + 1; // Random pin number\n\t\t\t\tmockSocket.onmessage({\n\t\t\t\t\tdata: JSON.stringify({ type: 'assign_sound', pin })\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tclose: () => {}\n\t};\n\n\tconst togglePlayPause = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tif (!timerRunning) {\n\t\t\tsetTimerValue(0);\n\t\t\tsetTimerRunning(true);\n\t\t\ttimerRef.current = window.setInterval(() => {\n\t\t\t\tsetTimerValue((prevValue) => {\n\t\t\t\t\tif (prevValue >= 10) {\n\t\t\t\t\t\tsetTimerRunning(false);\n\t\t\t\t\t\twindow.clearInterval(timerRef.current!);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevValue + 1;\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetTimerRunning(false);\n\t\t\twindow.clearInterval(timerRef.current!);\n\t\t}\n\t};\n\n\tconst stopPlayback = () => {\n\t\tsetIsPlaying(false);\n\t\tsetTimerRunning(false);\n\t\tsetTimerValue(0);\n\t\tif (timerRef.current) {\n\t\t\tclearInterval(timerRef.current);\n\t\t}\n\t};\n\n\tconst resetTimer = () => {\n\t\tsetRecordedButtons([]);\n\t\tsetTimerValue(0);\n\t};\n\n\tconst handleClearRecordedButtons = () => {\n\t\tsetRecordedButtons([]);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket) {\n\t\t\tsocket.onmessage = (event) => {\n\t\t\t\tconst data = JSON.parse(event.data);\n\t\t\t\tif (data.type === 'assign_sound' && data.pin) {\n\t\t\t\t\tsetRecordedButtons((prevButtons) => [...prevButtons, data.pin]);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, [socket]);\n\n\tuseEffect(() => {\n\t\tif (isPlaying) {\n\t\t\tlet index = 0;\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (index < recordedButtons.length) {\n\t\t\t\t\tsetTimerValue(recordedButtons[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t} else {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t}\n\t}, [isPlaying, recordedButtons]);\n\n\treturn (\n\t\t<div className=\"beat-controls\">\n\t\t\t<div className=\"timer-axis\">\n\t\t\t\t<div className=\"timer-display\">{timerValue}</div>\n\t\t\t\t{recordedButtons.map((buttonPin, index) => (\n\t\t\t\t\t<div key={index} className=\"button-indicator\">\n\t\t\t\t\t\t{buttonPin % 2 === 0 ? <FaSquare /> : <FaCircle />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"playback-controls\">\n\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t{isPlaying ? <FaPause /> : <FaPlay />}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={stopPlayback}>\n\t\t\t\t\t<FaStop />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={resetTimer}>\n\t\t\t\t\t<FaRedo />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={handleClearRecordedButtons}>Clear</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BeatControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}