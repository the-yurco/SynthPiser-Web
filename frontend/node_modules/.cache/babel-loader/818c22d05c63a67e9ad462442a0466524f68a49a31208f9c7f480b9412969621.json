{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronni\\\\OneDrive\\\\Po\\u010D\\xEDta\\u010D\\\\react-js\\\\SynthPiser-Web\\\\frontend\\\\src\\\\pages\\\\MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SoundComponent from '../components/Sound';\nimport BeatControls from '../components/BeatControls';\nimport PresetsDropdown from '../components/PresetsDropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  const [leftSliderValue, setLeftSliderValue] = useState(0);\n  const [rightSliderValue, setRightSliderValue] = useState(0);\n  const socket = useRef(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection\n    socket.current = new WebSocket('ws://192.168.0.196:8765');\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  useEffect(() => {\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n      console.log('Sending reverb value to backend:', leftSliderValue);\n      socket.current.send(JSON.stringify({\n        type: 'reverb',\n        value: leftSliderValue\n      }));\n    }\n  }, [leftSliderValue]);\n  useEffect(() => {\n    if (socket.current && socket.current.readyState === WebSocket.OPEN) {\n      console.log('Sending distortion value to backend:', rightSliderValue);\n      socket.current.send(JSON.stringify({\n        type: 'distortion',\n        value: rightSliderValue\n      }));\n    }\n  }, [rightSliderValue]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,bitrate,images,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n      console.log(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundSelect = sound => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setSelectedSound(sound);\n    const audio = new Audio(sound.previews['preview-hq-mp3']);\n    audioRef.current = audio;\n    audio.play();\n  };\n  const handleStopPreview = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchSounds(query);\n  };\n  const handlePresetSelect = presetSounds => {\n    setAssignedSounds(presetSounds);\n    console.log('Sending preset to backend:', presetSounds);\n    presetSounds.forEach((sound, index) => {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      if (socket.current) {\n        socket.current.send(JSON.stringify({\n          type: 'assign_sound',\n          pin,\n          sound\n        }));\n      }\n    });\n  };\n  const buttonPins = [5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18];\n  const handleButtonSoundClick = (sound, index) => {\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    const audio = sound.previews['preview-hq-mp3'];\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const handleButtonSoundDrop = (index, e) => {\n    e.preventDefault();\n    const soundData = e.dataTransfer.getData('sound');\n    const sound = JSON.parse(soundData);\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n  };\n  const handleButtonSoundDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search\",\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"left-slider\",\n            children: \"Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"left-slider\",\n            min: \"0\",\n            max: \"100\",\n            value: leftSliderValue,\n            onChange: e => setLeftSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: leftSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"stop-button reset-button\",\n            onClick: handleStopPreview,\n            children: \"Stop Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sounds\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"presets\",\n              children: /*#__PURE__*/_jsxDEV(PresetsDropdown, {\n                handlePresetSelect: handlePresetSelect,\n                socket: socket.current,\n                buttonPins: buttonPins,\n                assignedSounds: assignedSounds\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sounds-grid\",\n              children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(SoundComponent, {\n                sound: sound,\n                index: index,\n                onClick: handleSoundSelect,\n                onDragStart: () => setSelectedSound(sound),\n                isSelected: selectedSound === sound\n              }, sound.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"right-slider\",\n            children: \"Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"right-slider\",\n            min: \"0\",\n            max: \"100\",\n            value: rightSliderValue,\n            onChange: e => setRightSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rightSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BeatControls, {\n        socket: socket.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embedded-keyboard\",\n        children: assignedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `embedded-key ${sound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'}`,\n          onDrop: e => handleButtonSoundDrop(index, e),\n          onDragOver: handleButtonSoundDragOver,\n          onClick: () => selectedSound && handleButtonSoundClick(selectedSound, index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"l8g6c5aVxttUOvZCT1qldWDTMA0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SoundComponent","BeatControls","PresetsDropdown","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","selectedSound","setSelectedSound","assignedSounds","setAssignedSounds","Array","fill","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","socket","audioRef","current","WebSocket","onopen","console","log","onclose","close","fetchSounds","readyState","OPEN","send","JSON","stringify","type","value","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","data","json","randomPianoSounds","results","slice","error","handleSoundSelect","sound","pause","currentTime","audio","Audio","previews","play","handleStopPreview","handleSearch","e","preventDefault","handlePresetSelect","presetSounds","forEach","index","pin","buttonPins","handleButtonSoundClick","newAssignedSounds","handleButtonSoundDrop","soundData","dataTransfer","getData","parse","handleButtonSoundDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","placeholder","htmlFor","id","min","max","parseInt","onClick","map","onDragStart","isSelected","onDrop","onDragOver","_c","$RefreshReg$"],"sources":["C:/Users/ronni/OneDrive/Počítač/react-js/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport SoundComponent from '../components/Sound';\r\nimport BeatControls from '../components/BeatControls';\r\nimport PresetsDropdown from '../components/PresetsDropdown';\r\n\r\nexport interface Sound {\r\n\tid: number;\r\n\tname: string;\r\n\tbitrate: string;\r\n\timages: {\r\n\t\twaveform_m: string;\r\n\t\tspectral_l: string;\r\n\t};\r\n\tpreviews: {\r\n\t\t'preview-hq-mp3': string;\r\n\t};\r\n\ttags: string[] | undefined;\r\n}\r\n\r\nconst MainPage = () => {\r\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\r\n\tconst [query, setQuery] = useState<string>('Drums');\r\n\tconst [selectedSound, setSelectedSound] = useState<Sound | null>(null);\r\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\r\n\t\tArray(16).fill(null)\r\n\t);\r\n\tconst [leftSliderValue, setLeftSliderValue] = useState<number>(0);\r\n\tconst [rightSliderValue, setRightSliderValue] = useState<number>(0);\r\n\r\n\tconst socket = useRef<WebSocket | null>(null);\r\n\tconst audioRef = useRef<HTMLAudioElement | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Initialize the WebSocket connection\r\n\t\tsocket.current = new WebSocket('ws://192.168.0.196:8765');\r\n\t\r\n\t\tsocket.current.onopen = () => {\r\n\t\t\tconsole.log('WebSocket connection established.');\r\n\t\t};\r\n\t\r\n\t\r\n\t\tsocket.current.onclose = () => {\r\n\t\t\tconsole.log('WebSocket connection closed.');\r\n\t\t};\r\n\t\r\n\t\t// Clean up WebSocket connection when component unmounts\r\n\t\treturn () => {\r\n\t\t\tif (socket.current) {\r\n\t\t\t\tsocket.current.close();\r\n\t\t\t}\r\n\t\t};\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchSounds(query);\r\n\t}, [query]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n\t\t\tconsole.log('Sending reverb value to backend:', leftSliderValue);\r\n\t\t\tsocket.current.send(JSON.stringify({ type: 'reverb', value: leftSliderValue }));\r\n\t\t}\r\n\t}, [leftSliderValue]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (socket.current && socket.current.readyState === WebSocket.OPEN) {\r\n\t\t\tconsole.log('Sending distortion value to backend:', rightSliderValue);\r\n\t\t\tsocket.current.send(JSON.stringify({ type: 'distortion', value: rightSliderValue }));\r\n\t\t}\r\n\t}, [rightSliderValue]);\r\n\r\n\tconst fetchSounds = async (searchQuery: string) => {\r\n\t\ttry {\r\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\r\n\t\t\tconst queryParams = new URLSearchParams({\r\n\t\t\t\tquery: searchQuery,\r\n\t\t\t\tfields: 'id,name,bitrate,images,previews,tags',\r\n\t\t\t\ttoken: apiKey\r\n\t\t\t});\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\r\n\t\t\t);\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\r\n\t\t\tsetSounds(randomPianoSounds);\r\n\t\t\tconsole.log(randomPianoSounds);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching sounds:', error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSoundSelect = (sound: Sound) => {\r\n\t\tif (audioRef.current) {\r\n\t\t\taudioRef.current.pause();\r\n\t\t\taudioRef.current.currentTime = 0;\r\n\t\t}\r\n\r\n\t\tsetSelectedSound(sound);\r\n\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\r\n\t\taudioRef.current = audio;\r\n\t\taudio.play();\r\n\t};\r\n\r\n\tconst handleStopPreview = () => {\r\n\t\tif (audioRef.current) {\r\n\t\t\taudioRef.current.pause();\r\n\t\t\taudioRef.current.currentTime = 0;\r\n\t\t\tsetSelectedSound(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSearch = (e: React.FormEvent) => {\r\n\t\te.preventDefault();\r\n\t\tfetchSounds(query);\r\n\t};\r\n\r\n\tconst handlePresetSelect = (presetSounds: Sound[]) => {\r\n\t\tsetAssignedSounds(presetSounds);\r\n\t\tconsole.log('Sending preset to backend:', presetSounds);\r\n\t\tpresetSounds.forEach((sound, index) => {\r\n\t\t  const pin = buttonPins[index];\r\n\t\t  console.log('Sending sound to backend:', { pin, sound });\r\n\t\t  if (socket.current) {\r\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\r\n\t\t  }\r\n\t\t});\r\n\t  };\r\n\t\t\r\n\r\n\tconst buttonPins = [\r\n\t\t5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18\r\n\t];\r\n\r\n\tconst handleButtonSoundClick = (sound: Sound, index: number) => {\r\n\t\tconst newAssignedSounds = [...assignedSounds];\r\n\t\tnewAssignedSounds[index] = sound;\r\n\t\tconst audio = sound.previews['preview-hq-mp3'];\r\n\t\tsetAssignedSounds(newAssignedSounds);\r\n\r\n\t\t// Send the selected sound to the backend\r\n\t\tif (sound && socket.current) {\r\n\t\t\tconst pin = buttonPins[index];\r\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\r\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\r\n\t\t}\r\n\t\tif (audioRef.current) {\r\n\t\t\taudioRef.current.pause();\r\n\t\t\taudioRef.current.currentTime = 0;\r\n\t\t\tsetSelectedSound(null);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleButtonSoundDrop = (\r\n\t\tindex: number,\r\n\t\te: React.DragEvent<HTMLButtonElement>\r\n\t) => {\r\n\t\te.preventDefault();\r\n\t\tconst soundData = e.dataTransfer.getData('sound');\r\n\t\tconst sound = JSON.parse(soundData);\r\n\t\tconst newAssignedSounds = [...assignedSounds];\r\n\t\tnewAssignedSounds[index] = sound;\r\n\t\tsetAssignedSounds(newAssignedSounds);\r\n\r\n\t\t// Send the selected sound to the backend\r\n\t\tif (sound && socket.current) {\r\n\t\t\tconst pin = buttonPins[index];\r\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\r\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleButtonSoundDragOver = (e: React.DragEvent<HTMLButtonElement>) => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"main-page\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t<h1>SynthPiser</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={handleSearch}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\tclassName=\"search-bar\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div className=\"sounds-wrapper\">\r\n\t\t\t\t\t<div className=\"slider\">\r\n\t\t\t\t\t\t<label htmlFor=\"left-slider\">Reverb</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tid=\"left-slider\"\r\n\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\tvalue={leftSliderValue}\r\n\t\t\t\t\t\t\tonChange={(e) => setLeftSliderValue(parseInt(e.target.value))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span>{leftSliderValue}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"preview-menu\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"stop-button reset-button\"\r\n\t\t\t\t\t\t\tonClick={handleStopPreview}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStop Preview\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t<div className=\"sounds\">\r\n\t\t\t\t\t\t\t<div className=\"presets\">\r\n\t\t\t\t\t\t\t\t<PresetsDropdown \r\n\t\t\t\t\t\t\t\t\thandlePresetSelect={handlePresetSelect}\r\n\t\t\t\t\t\t\t\t\tsocket={socket.current}\r\n\t\t\t\t\t\t\t\t\tbuttonPins={buttonPins}\r\n\t\t\t\t\t\t\t\t\tassignedSounds={assignedSounds}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"sounds-grid\">\r\n\t\t\t\t\t\t\t\t{sounds.map((sound, index) => (\r\n\t\t\t\t\t\t\t\t\t<SoundComponent\r\n\t\t\t\t\t\t\t\t\t\tkey={sound.id}\r\n\t\t\t\t\t\t\t\t\t\tsound={sound}\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tonClick={handleSoundSelect}\r\n\t\t\t\t\t\t\t\t\t\tonDragStart={() => setSelectedSound(sound)}\r\n\t\t\t\t\t\t\t\t\t\tisSelected={selectedSound === sound}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"slider\">\r\n\t\t\t\t\t\t<label htmlFor=\"right-slider\">Distortion</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\t\t\tid=\"right-slider\"\r\n\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\tmax=\"100\"\r\n\t\t\t\t\t\t\tvalue={rightSliderValue}\r\n\t\t\t\t\t\t\tonChange={(e) => setRightSliderValue(parseInt(e.target.value))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<span>{rightSliderValue}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<BeatControls socket={socket.current} />\r\n\r\n\t\t\t\t<div className=\"embedded-keyboard\">\r\n\t\t\t\t\t{assignedSounds.map((sound, index) => (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tclassName={`embedded-key ${\r\n\t\t\t\t\t\t\t\tsound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonDrop={(e) => handleButtonSoundDrop(index, e)}\r\n\t\t\t\t\t\t\tonDragOver={handleButtonSoundDragOver}\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tselectedSound && handleButtonSoundClick(selectedSound, index)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}