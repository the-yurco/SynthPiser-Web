{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  const [leftSliderValue, setLeftSliderValue] = useState(0);\n  const [rightSliderValue, setRightSliderValue] = useState(0);\n  const [looping, setLooping] = useState(false);\n  const [recording, setRecording] = useState(false); // State for recording\n  const [recordedAudio, setRecordedAudio] = useState(null); // State for recorded audio\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [playbackAudio, setPlaybackAudio] = useState(null);\n  const socket = useRef(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection\n    socket.current = new WebSocket('ws://192.168.0.201:8765');\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    socket.current.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  useEffect(() => {\n    if (recording) {\n      startRecording();\n    } else {\n      stopRecording();\n    }\n  }, [recording]);\n  useEffect(() => {\n    if (recordedAudio) {\n      setPlaybackAudio(new Audio(recordedAudio));\n    }\n  }, [recordedAudio]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,bitrate,images,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n      console.log(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundSelect = sound => {\n    setSelectedSound(sound);\n    const audio = new Audio(sound.previews['preview-hq-mp3']);\n    audio.play();\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchSounds(query);\n  };\n  const buttonPins = [4, 17, 27, 22, 18, 23, 24, 25, 5, 6, 13, 19, 26, 16, 20, 21];\n  const handleButtonSoundClick = (sound, index) => {\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    const audio = sound.previews['preview-hq-mp3'];\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n    setSelectedSound(null);\n  };\n  const handleResetSounds = () => {\n    setAssignedSounds(Array(16).fill(null));\n    setSelectedSound(null);\n  };\n  const toggleLooping = () => {\n    setLooping(!looping); // Toggle looping state\n  };\n  const toggleRecording = () => {\n    setRecording(!recording); // Toggle recording state\n  };\n  const startRecording = () => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorder.ondataavailable = handleDataAvailable;\n      mediaRecorder.start();\n      setMediaRecorder(mediaRecorder);\n    }).catch(err => console.error('Error recording:', err));\n  };\n  const stopRecording = () => {\n    if (mediaRecorder) {\n      mediaRecorder.stop();\n    }\n  };\n  const handleDataAvailable = event => {\n    if (event.data.size > 0) {\n      const blob = event.data;\n      const reader = new FileReader();\n      reader.onload = () => {\n        const arrayBuffer = reader.result;\n        const uint8Array = new Uint8Array(arrayBuffer);\n        setAudioChunks([...audioChunks, uint8Array]);\n      };\n      reader.readAsArrayBuffer(blob);\n    }\n  };\n  const handlePlayback = () => {\n    if (playbackAudio) {\n      playbackAudio.play();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search\",\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"left-slider\",\n            children: \"Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"left-slider\",\n            min: \"-20\",\n            max: \"20\",\n            value: leftSliderValue,\n            onChange: e => setLeftSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: leftSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sounds\",\n          children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `sound-button ${selectedSound === sound ? 'selected' : ''}`,\n            onClick: () => handleSoundSelect(sound),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sound.images.waveform_m,\n              alt: \"\",\n              height: 75,\n              width: 75\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 9\n            }, this)\n          }, sound.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"right-slider\",\n            children: \"Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"right-slider\",\n            min: \"-20\",\n            max: \"20\",\n            value: rightSliderValue,\n            onChange: e => setRightSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rightSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"loop-button\",\n          onClick: toggleLooping,\n          children: looping ? 'Stop Looping' : 'Start Looping'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button\",\n          onClick: toggleRecording,\n          children: recording ? 'Stop Recording' : 'Start Recording'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"playback-button\",\n          onClick: handlePlayback,\n          children: \"Playback Recorded Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleResetSounds,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embedded-keyboard\",\n        children: assignedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `embedded-key ${sound ? 'assigned' : selectedSound ? ' empty' : 'empty'} `,\n          onClick: () => selectedSound && handleButtonSoundClick(selectedSound, index),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"yZim9Q9KXvL7V9xXPlNBduWfjos=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","selectedSound","setSelectedSound","assignedSounds","setAssignedSounds","Array","fill","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","looping","setLooping","recording","setRecording","recordedAudio","setRecordedAudio","audioChunks","setAudioChunks","mediaRecorder","setMediaRecorder","playbackAudio","setPlaybackAudio","socket","current","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","fetchSounds","startRecording","stopRecording","Audio","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","json","randomPianoSounds","results","slice","error","handleSoundSelect","sound","audio","previews","play","handleSearch","e","preventDefault","buttonPins","handleButtonSoundClick","index","newAssignedSounds","pin","send","JSON","stringify","type","handleResetSounds","toggleLooping","toggleRecording","navigator","mediaDevices","getUserMedia","then","stream","MediaRecorder","ondataavailable","handleDataAvailable","start","catch","err","stop","size","blob","reader","FileReader","onload","arrayBuffer","result","uint8Array","Uint8Array","readAsArrayBuffer","handlePlayback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","htmlFor","id","min","max","parseInt","map","onClick","src","images","waveform_m","alt","height","width","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tbitrate: string;\n\timages: {\n\t\twaveform_m: string;\n\t\tspectral_l: string;\n\t};\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\ttags: string[] | undefined;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [query, setQuery] = useState<string>('Drums');\n\tconst [selectedSound, setSelectedSound] = useState<Sound | null>(null);\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\n\t\tArray(16).fill(null)\n\t);\n\tconst [leftSliderValue, setLeftSliderValue] = useState<number>(0);\n\tconst [rightSliderValue, setRightSliderValue] = useState<number>(0);\n\tconst [looping, setLooping] = useState<boolean>(false);\n\tconst [recording, setRecording] = useState<boolean>(false); // State for recording\n\tconst [recordedAudio, setRecordedAudio] = useState<string | null>(null); // State for recorded audio\n\tconst [audioChunks, setAudioChunks] = useState<Uint8Array[]>([]);\n\tconst [mediaRecorder, setMediaRecorder] = useState<MediaRecorder | null>(\n\t\tnull\n\t);\n\tconst [playbackAudio, setPlaybackAudio] = useState<HTMLAudioElement | null>(\n\t\tnull\n\t);\n\n\tconst socket = useRef<WebSocket | null>(null);\n\n\tuseEffect(() => {\n\t\t// Initialize the WebSocket connection\n\t\tsocket.current = new WebSocket('ws://192.168.0.201:8765');\n\n\t\tsocket.current.onopen = () => {\n\t\t\tconsole.log('WebSocket connection established.');\n\t\t};\n\n\t\tsocket.current.onmessage = (event: any) => {\n\t\t\tconsole.log('Received message:', event.data);\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\t\tconsole.log('WebSocket connection closed.');\n\t\t};\n\n\t\t// Clean up WebSocket connection when component unmounts\n\t\treturn () => {\n\t\t\tif (socket.current) {\n\t\t\t\tsocket.current.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchSounds(query);\n\t}, [query]);\n\n\tuseEffect(() => {\n\t\tif (recording) {\n\t\t\tstartRecording();\n\t\t} else {\n\t\t\tstopRecording();\n\t\t}\n\t}, [recording]);\n\n\tuseEffect(() => {\n\t\tif (recordedAudio) {\n\t\t\tsetPlaybackAudio(new Audio(recordedAudio));\n\t\t}\n\t}, [recordedAudio]);\n\n\tconst fetchSounds = async (searchQuery: string) => {\n\t\ttry {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\tquery: searchQuery,\n\t\t\t\tfields: 'id,name,bitrate,images,previews,tags',\n\t\t\t\ttoken: apiKey\n\t\t\t});\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\n\t\t\tsetSounds(randomPianoSounds);\n\t\t\tconsole.log(randomPianoSounds);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundSelect = (sound: Sound) => {\n\t\tsetSelectedSound(sound);\n\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\n\t\taudio.play();\n\t};\n\n\tconst handleSearch = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tfetchSounds(query);\n\t};\n\n\tconst buttonPins = [\n\t\t4, 17, 27, 22, 18, 23, 24, 25, 5, 6, 13, 19, 26, 16, 20, 21\n\t];\n\n\tconst handleButtonSoundClick = (sound: Sound, index: number) => {\n\t\tconst newAssignedSounds = [...assignedSounds];\n\t\tnewAssignedSounds[index] = sound;\n\t\tconst audio = sound.previews['preview-hq-mp3'];\n\t\tsetAssignedSounds(newAssignedSounds);\n\n\t\t// Send the selected sound to the backend\n\t\tif (sound && socket.current) {\n\t\t\tconst pin = buttonPins[index];\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t\t}\n\t\tsetSelectedSound(null);\n\t};\n\n\tconst handleResetSounds = () => {\n\t\tsetAssignedSounds(Array(16).fill(null));\n\t\tsetSelectedSound(null);\n\t};\n\n\tconst toggleLooping = () => {\n\t\tsetLooping(!looping); // Toggle looping state\n\t};\n\n\tconst toggleRecording = () => {\n\t\tsetRecording(!recording); // Toggle recording state\n\t};\n\n\tconst startRecording = () => {\n\t\tnavigator.mediaDevices\n\t\t\t.getUserMedia({ audio: true })\n\t\t\t.then((stream) => {\n\t\t\t\tconst mediaRecorder = new MediaRecorder(stream);\n\t\t\t\tmediaRecorder.ondataavailable = handleDataAvailable;\n\t\t\t\tmediaRecorder.start();\n\t\t\t\tsetMediaRecorder(mediaRecorder);\n\t\t\t})\n\t\t\t.catch((err) => console.error('Error recording:', err));\n\t};\n\n\tconst stopRecording = () => {\n\t\tif (mediaRecorder) {\n\t\t\tmediaRecorder.stop();\n\t\t}\n\t};\n\n\tconst handleDataAvailable = (event: BlobEvent) => {\n\t\tif (event.data.size > 0) {\n\t\t\tconst blob = event.data;\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = () => {\n\t\t\t\tconst arrayBuffer = reader.result as ArrayBuffer;\n\t\t\t\tconst uint8Array = new Uint8Array(arrayBuffer);\n\t\t\t\tsetAudioChunks([...audioChunks, uint8Array]);\n\t\t\t};\n\t\t\treader.readAsArrayBuffer(blob);\n\t\t}\n\t};\n\n\tconst handlePlayback = () => {\n\t\tif (playbackAudio) {\n\t\t\tplaybackAudio.play();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={handleSearch}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"sounds-wrapper\">\n\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t<label htmlFor=\"left-slider\">Reverb</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid=\"left-slider\"\n\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\tvalue={leftSliderValue}\n\t\t\t\t\t\t\tonChange={(e) => setLeftSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>{leftSliderValue}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t\t{sounds.map((sound, index) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={sound.id}\n\t\t\t\t\t\t\t\tclassName={`sound-button ${\n\t\t\t\t\t\t\t\t\tselectedSound === sound ? 'selected' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tonClick={() => handleSoundSelect(sound)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={sound.images.waveform_m}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\theight={75}\n\t\t\t\t\t\t\t\t\twidth={75}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/* <p>{sound.name}</p> */}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t<label htmlFor=\"right-slider\">Distortion</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid=\"right-slider\"\n\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\tvalue={rightSliderValue}\n\t\t\t\t\t\t\tonChange={(e) => setRightSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>{rightSliderValue}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"control-menu\">\n\t\t\t\t\t<button className=\"loop-button\" onClick={toggleLooping}>\n\t\t\t\t\t\t{looping ? 'Stop Looping' : 'Start Looping'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"record-button\" onClick={toggleRecording}>\n\t\t\t\t\t\t{recording ? 'Stop Recording' : 'Start Recording'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"playback-button\" onClick={handlePlayback}>\n\t\t\t\t\t\tPlayback Recorded Audio\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"reset-button\" onClick={handleResetSounds}>\n\t\t\t\t\tReset\n\t\t\t\t</button>\n\t\t\t\t<div className=\"embedded-keyboard\">\n\t\t\t\t\t{assignedSounds.map((sound, index) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName={`embedded-key ${\n\t\t\t\t\t\t\t\tsound ? 'assigned' : selectedSound ? ' empty' : 'empty'\n\t\t\t\t\t\t\t} `}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tselectedSound && handleButtonSoundClick(selectedSound, index)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}