{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { FaPlay, FaPause, FaStop, FaRedo, FaCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BeatControls = ({\n  buttonPins\n}) => {\n  _s();\n  const [timerValue, setTimerValue] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [recordedButtons, setRecordedButtons] = useState([]);\n  const timerRef = useRef(null);\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!timerRunning) {\n      setTimerValue(0);\n      setTimerRunning(true);\n      timerRef.current = window.setInterval(() => {\n        setTimerValue(prevValue => {\n          if (prevValue >= 10) {\n            setTimerRunning(false);\n            window.clearInterval(timerRef.current);\n            return 0;\n          }\n          return prevValue + 1;\n        });\n      }, 1000);\n    } else {\n      setTimerRunning(false);\n      window.clearInterval(timerRef.current);\n    }\n  };\n  const stopPlayback = () => {\n    setIsPlaying(false);\n    setTimerRunning(false);\n    setTimerValue(0);\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n  };\n  const resetTimer = () => {\n    setRecordedButtons([]);\n    setTimerValue(0);\n  };\n  const handleButtonClick = buttonPin => {\n    if (!isPlaying) {\n      // If not playing, record the button press\n      setRecordedButtons(prevButtons => [...prevButtons, buttonPin]);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      // If playing, simulate playback based on recorded buttons\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < recordedButtons.length) {\n          setTimerValue(recordedButtons[index]);\n          index++;\n        } else {\n          clearInterval(interval);\n          setIsPlaying(false);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, recordedButtons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beat-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-axis\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: timerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPlayback,\n        children: /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: /*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: buttonPins.map(pin => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(pin),\n        children: /*#__PURE__*/_jsxDEV(FaCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)\n      }, pin, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n};\n_s(BeatControls, \"Cn4fIx34IYEQVb+O9TTMG/yPNrs=\");\n_c = BeatControls;\nexport default BeatControls;\nvar _c;\n$RefreshReg$(_c, \"BeatControls\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaPlay","FaPause","FaStop","FaRedo","FaCircle","jsxDEV","_jsxDEV","BeatControls","buttonPins","_s","timerValue","setTimerValue","isPlaying","setIsPlaying","timerRunning","setTimerRunning","recordedButtons","setRecordedButtons","timerRef","togglePlayPause","current","window","setInterval","prevValue","clearInterval","stopPlayback","resetTimer","handleButtonClick","buttonPin","prevButtons","index","interval","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","pin","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { FaPlay, FaPause, FaStop, FaRedo, FaCircle } from 'react-icons/fa';\n\ninterface BeatControlsProps {\n\tbuttonPins: number[];\n}\n\nconst BeatControls = ({ buttonPins }: BeatControlsProps) => {\n\tconst [timerValue, setTimerValue] = useState<number>(0);\n\tconst [isPlaying, setIsPlaying] = useState<boolean>(false);\n\tconst [timerRunning, setTimerRunning] = useState<boolean>(false);\n\tconst [recordedButtons, setRecordedButtons] = useState<number[]>([]);\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst togglePlayPause = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tif (!timerRunning) {\n\t\t\tsetTimerValue(0);\n\t\t\tsetTimerRunning(true);\n\t\t\ttimerRef.current = window.setInterval(() => {\n\t\t\t\tsetTimerValue((prevValue) => {\n\t\t\t\t\tif (prevValue >= 10) {\n\t\t\t\t\t\tsetTimerRunning(false);\n\t\t\t\t\t\twindow.clearInterval(timerRef.current!);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevValue + 1;\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetTimerRunning(false);\n\t\t\twindow.clearInterval(timerRef.current!);\n\t\t}\n\t};\n\n\tconst stopPlayback = () => {\n\t\tsetIsPlaying(false);\n\t\tsetTimerRunning(false);\n\t\tsetTimerValue(0);\n\t\tif (timerRef.current) {\n\t\t\tclearInterval(timerRef.current);\n\t\t}\n\t};\n\n\tconst resetTimer = () => {\n\t\tsetRecordedButtons([]);\n\t\tsetTimerValue(0);\n\t};\n\n\tconst handleButtonClick = (buttonPin: number) => {\n\t\tif (!isPlaying) {\n\t\t\t// If not playing, record the button press\n\t\t\tsetRecordedButtons((prevButtons) => [...prevButtons, buttonPin]);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (isPlaying) {\n\t\t\t// If playing, simulate playback based on recorded buttons\n\t\t\tlet index = 0;\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (index < recordedButtons.length) {\n\t\t\t\t\tsetTimerValue(recordedButtons[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t} else {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t}\n\t}, [isPlaying, recordedButtons]);\n\n\treturn (\n\t\t<div className=\"beat-controls\">\n\t\t\t<div className=\"timer-axis\">\n\t\t\t\t<div className=\"timer-display\">{timerValue}</div>\n\t\t\t</div>\n\t\t\t<div className=\"playback-controls\">\n\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t{isPlaying ? <FaPause /> : <FaPlay />}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={stopPlayback}>\n\t\t\t\t\t<FaStop />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={resetTimer}>\n\t\t\t\t\t<FaRedo />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"action-buttons\">\n\t\t\t\t{buttonPins.map((pin) => (\n\t\t\t\t\t<button key={pin} onClick={() => handleButtonClick(pin)}>\n\t\t\t\t\t\t<FaCircle />\n\t\t\t\t\t</button>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BeatControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}