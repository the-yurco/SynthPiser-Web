{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sound from 'react-sound'; // Assuming react-sound is installed\nimport './styles.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentSound, setCurrentSound] = useState(null);\n\n  // Fetch sounds on component mount\n  useEffect(() => {\n    const fetchSounds = async () => {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz'; // Replace with your actual API key\n      const response = await fetch('https://freesound.org/apiv2/search/text/?query=sound&token=' + apiKey);\n      const data = await response.json();\n      setSounds(data.results.slice(0, 16)); // Get first 16 sounds\n    };\n    fetchSounds();\n  }, []);\n  const handleSoundClick = sound => {\n    setCurrentSound(sound);\n    setIsPlaying(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds\",\n        children: sounds.map(sound => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSoundClick(sound),\n          children: sound.name\n        }, sound.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Sound, {\n      url: (currentSound === null || currentSound === void 0 ? void 0 : currentSound.preview_url) || '' // Set URL based on currentSound\n      ,\n      playStatus: isPlaying ? Sound.STATUS.PLAYING : Sound.STATUS.STOPPED,\n      onFinishedPlaying: () => setIsPlaying(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"kRzKC/qVY/+hvL71AuvW7zY7DOs=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Sound","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","isPlaying","setIsPlaying","currentSound","setCurrentSound","fetchSounds","apiKey","response","fetch","data","json","results","slice","handleSoundClick","sound","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","name","id","url","preview_url","playStatus","STATUS","PLAYING","STOPPED","onFinishedPlaying","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sound from 'react-sound'; // Assuming react-sound is installed\nimport './styles.css'; // Import your CSS file\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tpreview_url: string;\n}\n\nconst MainPage: React.FC = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [currentSound, setCurrentSound] = useState<Sound | null>(null);\n\n\t// Fetch sounds on component mount\n\tuseEffect(() => {\n\t\tconst fetchSounds = async () => {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz'; // Replace with your actual API key\n\t\t\tconst response = await fetch(\n\t\t\t\t'https://freesound.org/apiv2/search/text/?query=sound&token=' + apiKey\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tsetSounds(data.results.slice(0, 16)); // Get first 16 sounds\n\t\t};\n\n\t\tfetchSounds();\n\t}, []);\n\n\tconst handleSoundClick = (sound: Sound) => {\n\t\tsetCurrentSound(sound);\n\t\tsetIsPlaying(true);\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t{sounds.map((sound) => (\n\t\t\t\t\t\t<button key={sound.id} onClick={() => handleSoundClick(sound)}>\n\t\t\t\t\t\t\t{sound.name}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Sound\n\t\t\t\turl={currentSound?.preview_url || ''} // Set URL based on currentSound\n\t\t\t\tplayStatus={isPlaying ? Sound.STATUS.PLAYING : Sound.STATUS.STOPPED}\n\t\t\t\tonFinishedPlaying={() => setIsPlaying(false)}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}