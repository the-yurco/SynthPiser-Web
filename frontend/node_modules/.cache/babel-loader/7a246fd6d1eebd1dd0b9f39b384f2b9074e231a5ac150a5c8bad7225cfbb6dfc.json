{"ast":null,"code":"var _jsxFileName = \"/Users/ronnie/Desktop/code/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaRedo } from 'react-icons/fa';\nimport SoundComponent from '../components/Sound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  const [leftSliderValue, setLeftSliderValue] = useState(0);\n  const [rightSliderValue, setRightSliderValue] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [timerValue, setTimerValue] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const timerRef = useRef(null);\n  const socket = useRef(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection\n    socket.current = new WebSocket('ws://192.168.0.201:8765');\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    socket.current.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,bitrate,images,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n      console.log(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundSelect = sound => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setSelectedSound(sound);\n    const audio = new Audio(sound.previews['preview-hq-mp3']);\n    audioRef.current = audio;\n    audio.play();\n  };\n  const handleStopPreview = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchSounds(query);\n  };\n  const buttonPins = [5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18];\n\n  // const handleButtonSoundClick = (sound: Sound, index: number) => {\n  // \tconst newAssignedSounds = [...assignedSounds];\n  // \tnewAssignedSounds[index] = sound;\n  // \tconst audio = sound.previews['preview-hq-mp3'];\n  // \tsetAssignedSounds(newAssignedSounds);\n\n  // \t// Send the selected sound to the backend\n  // \tif (sound && socket.current) {\n  // \t\tconst pin = buttonPins[index];\n  // \t\tconsole.log('Sending sound to backend:', { pin, sound });\n  // \t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n  // \t}\n  // \tif (audioRef.current) {\n  //         audioRef.current.pause();\n  //         audioRef.current.currentTime = 0;\n  //         setSelectedSound(null);\n  //     }\n  // };\n\n  const handleButtonSoundDrop = (index, e) => {\n    e.preventDefault();\n    const soundData = e.dataTransfer.getData(\"sound\");\n    const sound = JSON.parse(soundData);\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n  };\n  const handleButtonSoundDragOver = e => {\n    e.preventDefault();\n  };\n  const handleResetSounds = () => {\n    setAssignedSounds(Array(16).fill(null));\n    setSelectedSound(null);\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!timerRunning) {\n      setTimerValue(0);\n      setTimerRunning(true);\n      timerRef.current = window.setInterval(() => {\n        setTimerValue(prevValue => {\n          if (prevValue >= 10) {\n            setTimerRunning(false);\n            window.clearInterval(timerRef.current);\n            return 0;\n          }\n          return prevValue + 1;\n        });\n      }, 1000);\n    } else {\n      setTimerRunning(false);\n      window.clearInterval(timerRef.current);\n    }\n  };\n  const resetAudio = () => {\n    setSelectedSound(null);\n  };\n  const playPauseButton = timerValue > 10 ? /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 21\n  }, this) : isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 60\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search\",\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"left-slider\",\n            children: \"Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"left-slider\",\n            min: \"-20\",\n            max: \"20\",\n            value: leftSliderValue,\n            onChange: e => setLeftSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: leftSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"stop-button reset-button\",\n            onClick: handleStopPreview,\n            children: \"Stop Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sounds\",\n            children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(SoundComponent, {\n              sound: sound,\n              onDragStart: () => setSelectedSound(sound)\n            }, sound.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"right-slider\",\n            children: \"Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            id: \"right-slider\",\n            min: \"-20\",\n            max: \"20\",\n            value: rightSliderValue,\n            onChange: e => setRightSliderValue(parseInt(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rightSliderValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"beat-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visualizer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: timerValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-line\",\n            style: {\n              width: `${timerValue * 10}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"beat-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: togglePlayPause,\n            children: playPauseButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetAudio,\n            children: /*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reset-button\",\n            onClick: handleResetSounds,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embedded-keyboard\",\n        children: assignedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `embedded-key ${sound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'}`,\n          onDrop: e => handleButtonSoundDrop(index, e),\n          onDragOver: handleButtonSoundDragOver,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"LbXCWOkgYOAz6GBaXFmXCjiSzhg=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaPlay","FaPause","FaRedo","SoundComponent","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","selectedSound","setSelectedSound","assignedSounds","setAssignedSounds","Array","fill","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","timerRunning","setTimerRunning","timerValue","setTimerValue","isPlaying","setIsPlaying","timerRef","socket","audioRef","current","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","fetchSounds","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","json","randomPianoSounds","results","slice","error","handleSoundSelect","sound","pause","currentTime","audio","Audio","previews","play","handleStopPreview","handleSearch","e","preventDefault","buttonPins","handleButtonSoundDrop","index","soundData","dataTransfer","getData","JSON","parse","newAssignedSounds","pin","send","stringify","type","handleButtonSoundDragOver","handleResetSounds","togglePlayPause","window","setInterval","prevValue","clearInterval","resetAudio","playPauseButton","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSubmit","value","onChange","target","placeholder","htmlFor","id","min","max","parseInt","onClick","map","onDragStart","style","width","onDrop","onDragOver","_c","$RefreshReg$"],"sources":["/Users/ronnie/Desktop/code/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaRedo } from 'react-icons/fa';\nimport SoundComponent from '../components/Sound';\n\nexport interface Sound {\n\tid: number;\n\tname: string;\n\tbitrate: string;\n\timages: {\n\t\twaveform_m: string;\n\t\tspectral_l: string;\n\t};\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\ttags: string[] | undefined;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [query, setQuery] = useState<string>('Drums');\n\tconst [selectedSound, setSelectedSound] = useState<Sound | null>(null);\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\n\t\tArray(16).fill(null)\n\t);\n\tconst [leftSliderValue, setLeftSliderValue] = useState<number>(0);\n\tconst [rightSliderValue, setRightSliderValue] = useState<number>(0);\n\tconst [timerRunning, setTimerRunning] = useState<boolean>(false);\n\tconst [timerValue, setTimerValue] = useState<number>(0);\n\tconst [isPlaying, setIsPlaying] = useState<boolean>(false);\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst socket = useRef<WebSocket | null>(null);\n\tconst audioRef = useRef<HTMLAudioElement | null>(null);\n\n\tuseEffect(() => {\n\t\t// Initialize the WebSocket connection\n\t\tsocket.current = new WebSocket('ws://192.168.0.201:8765');\n\n\t\tsocket.current.onopen = () => {\n\t\t\tconsole.log('WebSocket connection established.');\n\t\t};\n\n\t\tsocket.current.onmessage = (event: any) => {\n\t\t\tconsole.log('Received message:', event.data);\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\t\tconsole.log('WebSocket connection closed.');\n\t\t};\n\n\t\t// Clean up WebSocket connection when component unmounts\n\t\treturn () => {\n\t\t\tif (socket.current) {\n\t\t\t\tsocket.current.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchSounds(query);\n\t}, [query]);\n\n\tconst fetchSounds = async (searchQuery: string) => {\n\t\ttry {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\tquery: searchQuery,\n\t\t\t\tfields: 'id,name,bitrate,images,previews,tags',\n\t\t\t\ttoken: apiKey\n\t\t\t});\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\n\t\t\tsetSounds(randomPianoSounds);\n\t\t\tconsole.log(randomPianoSounds);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundSelect = (sound: Sound) => {\n\t\tif (audioRef.current) {\n            audioRef.current.pause();\n            audioRef.current.currentTime = 0;\n        }\n\n\t\tsetSelectedSound(sound);\n\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\n\t\taudioRef.current = audio;\n\t\taudio.play();\n\t};\n\n\n    const handleStopPreview = () => {\n        if (audioRef.current) {\n            audioRef.current.pause();\n            audioRef.current.currentTime = 0;\n            setSelectedSound(null);\n        }\n    };\n\n\tconst handleSearch = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tfetchSounds(query);\n\t};\n\n\tconst buttonPins = [\n\t\t5, 6, 13, 19, 26, 16, 20, 21, 4 , 17, 27, 22 ,24 ,25 ,23, 18\n\t];\n\n\t// const handleButtonSoundClick = (sound: Sound, index: number) => {\n\t// \tconst newAssignedSounds = [...assignedSounds];\n\t// \tnewAssignedSounds[index] = sound;\n\t// \tconst audio = sound.previews['preview-hq-mp3'];\n\t// \tsetAssignedSounds(newAssignedSounds);\n\n\t// \t// Send the selected sound to the backend\n\t// \tif (sound && socket.current) {\n\t// \t\tconst pin = buttonPins[index];\n\t// \t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t// \t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t// \t}\n\t// \tif (audioRef.current) {\n    //         audioRef.current.pause();\n    //         audioRef.current.currentTime = 0;\n    //         setSelectedSound(null);\n    //     }\n\t// };\n\n\tconst handleButtonSoundDrop = (index: number, e: React.DragEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        const soundData = e.dataTransfer.getData(\"sound\");\n        const sound = JSON.parse(soundData);\n        const newAssignedSounds = [...assignedSounds];\n        newAssignedSounds[index] = sound;\n        setAssignedSounds(newAssignedSounds);\n\n        // Send the selected sound to the backend\n        if (sound && socket.current) {\n            const pin = buttonPins[index];\n            console.log('Sending sound to backend:', { pin, sound })\n            socket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n        }\n    };\n\n\tconst handleButtonSoundDragOver = (e: React.DragEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n    };\n\n\tconst handleResetSounds = () => {\n\t\tsetAssignedSounds(Array(16).fill(null));\n\t\tsetSelectedSound(null);\n\t};\n\n\tconst togglePlayPause = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tif (!timerRunning) {\n\t\t\tsetTimerValue(0);\n\t\t\tsetTimerRunning(true);\n\t\t\ttimerRef.current = window.setInterval(() => {\n\t\t\t\tsetTimerValue((prevValue) => {\n\t\t\t\t\tif (prevValue >= 10) {\n\t\t\t\t\t\tsetTimerRunning(false);\n\t\t\t\t\t\twindow.clearInterval(timerRef.current!);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevValue + 1;\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetTimerRunning(false);\n\t\t\twindow.clearInterval(timerRef.current!);\n\t\t}\n\t};\n\n\tconst resetAudio = () => {\n\t\tsetSelectedSound(null);\n\t};\n\n\tconst playPauseButton =\n\t\ttimerValue > 10 ? <FaPlay /> : isPlaying ? <FaPause /> : <FaPlay />;\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={handleSearch}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\n\t\t\t\t<div className=\"sounds-wrapper\">\n\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t<label htmlFor=\"left-slider\">Reverb</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid=\"left-slider\"\n\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\tvalue={leftSliderValue}\n\t\t\t\t\t\t\tonChange={(e) => setLeftSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>{leftSliderValue}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"preview-menu\">\n\t\t\t\t\t\t<button className=\"stop-button reset-button\" onClick={handleStopPreview}>\n\t\t\t\t\t\t\tStop Preview\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t\t\t{sounds.map((sound, index) => (\n                            <SoundComponent key={sound.id} sound={sound} onDragStart={() => setSelectedSound(sound)} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t<label htmlFor=\"right-slider\">Distortion</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid=\"right-slider\"\n\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\tvalue={rightSliderValue}\n\t\t\t\t\t\t\tonChange={(e) => setRightSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span>{rightSliderValue}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"beat-controls\">\n\t\t\t\t\t<div className=\"visualizer\">\n\t\t\t\t\t\t<div className=\"timer-wrapper\">\n\t\t\t\t\t\t\t<div className=\"timer\">{timerValue}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"timer-line\"\n\t\t\t\t\t\t\tstyle={{ width: `${timerValue * 10}%` }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"beat-buttons\">\n\t\t\t\t\t\t<button onClick={togglePlayPause}>{playPauseButton}</button>\n\t\t\t\t\t\t<button onClick={resetAudio}>\n\t\t\t\t\t\t\t<FaRedo />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button className=\"reset-button\" onClick={handleResetSounds}>\n\t\t\t\t\t\tReset\n\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t\t<div className=\"embedded-keyboard\">\n\t\t\t\t\t{assignedSounds.map((sound, index) => (\n                        <button\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tclassName={`embedded-key ${sound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'}`}\n\t\t\t\t\t\tonDrop={(e) => handleButtonSoundDrop(index, e)}\n\t\t\t\t\t\tonDragOver={handleButtonSoundDragOver}\n\t\t\t\t\t>\n\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}