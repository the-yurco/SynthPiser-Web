{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const token = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n  useEffect(() => {\n    fetchSounds();\n  }, []);\n  const fetchSounds = async () => {\n    try {\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?query=piano&page=2&token=${token}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch piano sounds');\n      }\n      const data = await response.json();\n      setSounds(data.results.map(result => result.url));\n    } catch (error) {\n      console.error('Error fetching piano sounds:', error);\n    }\n  };\n  const handleSoundClick = soundUrl => {\n    const audio = new Audio(soundUrl);\n    audio.play().catch(error => {\n      console.error('Error playing sound:', error);\n    });\n  };\n  const renderSounds = () => {\n    return sounds.map((soundUrl, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSoundClick(soundUrl),\n      children: [\"Sound \", index + 1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SynthPiser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sounds\",\n      children: renderSounds()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"WyCneQezkptqIEaTwmdsA9OQ0p4=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","token","fetchSounds","response","fetch","ok","Error","data","json","results","map","result","url","error","console","handleSoundClick","soundUrl","audio","Audio","play","catch","renderSounds","index","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MainPage: React.FC = () => {\n\tconst [sounds, setSounds] = useState<string[]>([]);\n\tconst token = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\n\tuseEffect(() => {\n\t\tfetchSounds();\n\t}, []);\n\n\tconst fetchSounds = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?query=piano&page=2&token=${token}`\n\t\t\t);\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to fetch piano sounds');\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetSounds(data.results.map((result: any) => result.url));\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching piano sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundClick = (soundUrl: string) => {\n\t\tconst audio = new Audio(soundUrl);\n\t\taudio.play().catch((error) => {\n\t\t\tconsole.error('Error playing sound:', error);\n\t\t});\n\t};\n\n\tconst renderSounds = () => {\n\t\treturn sounds.map((soundUrl, index) => (\n\t\t\t<button key={index} onClick={() => handleSoundClick(soundUrl)}>\n\t\t\t\tSound {index + 1}\n\t\t\t</button>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"logo\">\n\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t</div>\n\t\t\t<div className=\"sounds\">{renderSounds()}</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAMQ,KAAK,GAAG,0CAA0C;EAExDP,SAAS,CAAC,MAAM;IACfQ,WAAW,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEAAoEH,KAAM,EAC5E,CAAC;MACD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,SAAS,CAACO,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,MAAW,IAAKA,MAAM,CAACC,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACrD;EACD,CAAC;EAED,MAAME,gBAAgB,GAAIC,QAAgB,IAAK;IAC9C,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,QAAQ,CAAC;IACjCC,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEP,KAAK,IAAK;MAC7BC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACH,CAAC;EAED,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IAC1B,OAAOtB,MAAM,CAACW,GAAG,CAAC,CAACM,QAAQ,EAAEM,KAAK,kBACjC1B,OAAA;MAAoB2B,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACC,QAAQ,CAAE;MAAAQ,QAAA,GAAC,QACxD,EAACF,KAAK,GAAG,CAAC;IAAA,GADJA,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC;EACH,CAAC;EAED,oBACChC,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACzB5B,OAAA;MAAKiC,SAAS,EAAC,MAAM;MAAAL,QAAA,eACpB5B,OAAA;QAAA4B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACNhC,OAAA;MAAKiC,SAAS,EAAC,QAAQ;MAAAL,QAAA,EAAEH,YAAY,CAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAER,CAAC;AAAC9B,EAAA,CA9CID,QAAkB;AAAAiC,EAAA,GAAlBjC,QAAkB;AAgDxB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}