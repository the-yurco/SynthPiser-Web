{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundClick = previewUrl => {\n    const audio = new Audio(previewUrl);\n    audio.play();\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    fetchSounds(query);\n  };\n  const handleDragStop = (index, event, data) => {\n    const sound = sounds[index];\n    const buttonIndex = getButtonIndex(data.x, data.y);\n    if (buttonIndex !== -1) {\n      const newAssignedSounds = [...assignedSounds];\n      newAssignedSounds[buttonIndex] = sound;\n      setAssignedSounds(newAssignedSounds);\n    }\n  };\n  const getButtonIndex = (x, y) => {\n    // Logic to determine which button the sound was dropped onto\n    // This logic depends on your UI layout, you may need to adjust it accordingly\n    // For example, you can use coordinates to determine the button index\n    // Here, I'm assuming a simple grid layout with 4 buttons per row\n    const row = Math.floor(y / buttonHeight);\n    const col = Math.floor(x / buttonWidth);\n    const index = row * 4 + col;\n    if (index >= 0 && index < 16) {\n      return index;\n    }\n    return -1;\n  };\n  const handleButtonSoundClick = sound => {\n    if (sound) {\n      const audio = new Audio(sound.previews['preview-hq-mp3']);\n      audio.play();\n    }\n  };\n  const buttonWidth = 100; // Adjust this value based on your button width\n  const buttonHeight = 50; // Adjust this value based on your button height\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search\",\n          className: \"search-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds\",\n        children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          onStop: (e, data) => handleDragStop(index, e, data),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sound-button\",\n            onClick: () => handleSoundClick(sound.previews['preview-hq-mp3']),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/assets/note.png\",\n              alt: \"\",\n              height: 20,\n              width: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this)\n        }, sound.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embedded-keyboard\",\n        children: assignedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"embedded-key\",\n          onClick: () => handleButtonSoundClick(sound),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: sound ? sound.name : 'Empty'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 8\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"glcYwkPtKqOiIHarn0Lc5HIK/Zk=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","Draggable","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","assignedSounds","setAssignedSounds","Array","fill","fetchSounds","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","data","json","randomPianoSounds","results","slice","error","console","handleSoundClick","previewUrl","audio","Audio","play","handleSearch","e","preventDefault","handleDragStop","index","event","sound","buttonIndex","getButtonIndex","x","y","newAssignedSounds","row","Math","floor","buttonHeight","col","buttonWidth","handleButtonSoundClick","previews","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","onStop","onClick","src","alt","height","width","id","name","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Draggable from 'react-draggable';\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\ttags: string[] | undefined;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [query, setQuery] = useState<string>('Drums');\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\n\t\tArray(16).fill(null)\n\t);\n\n\tuseEffect(() => {\n\t\tfetchSounds(query);\n\t}, [query]);\n\n\tconst fetchSounds = async (searchQuery: string) => {\n\t\ttry {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\tquery: searchQuery,\n\t\t\t\tfields: 'id,name,previews,tags',\n\t\t\t\ttoken: apiKey\n\t\t\t});\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\n\t\t\tsetSounds(randomPianoSounds);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundClick = (previewUrl: string) => {\n\t\tconst audio = new Audio(previewUrl);\n\t\taudio.play();\n\t};\n\n\tconst handleSearch = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\tfetchSounds(query);\n\t};\n\n\tconst handleDragStop = (\n\t\tindex: number,\n\t\tevent: MouseEvent | TouchEvent | DraggableEvent,\n\t\tdata: DraggableData\n\t) => {\n\t\tconst sound = sounds[index];\n\t\tconst buttonIndex = getButtonIndex(data.x, data.y);\n\t\tif (buttonIndex !== -1) {\n\t\t\tconst newAssignedSounds = [...assignedSounds];\n\t\t\tnewAssignedSounds[buttonIndex] = sound;\n\t\t\tsetAssignedSounds(newAssignedSounds);\n\t\t}\n\t};\n\n\tconst getButtonIndex = (x: number, y: number): number => {\n\t\t// Logic to determine which button the sound was dropped onto\n\t\t// This logic depends on your UI layout, you may need to adjust it accordingly\n\t\t// For example, you can use coordinates to determine the button index\n\t\t// Here, I'm assuming a simple grid layout with 4 buttons per row\n\t\tconst row = Math.floor(y / buttonHeight);\n\t\tconst col = Math.floor(x / buttonWidth);\n\t\tconst index = row * 4 + col;\n\t\tif (index >= 0 && index < 16) {\n\t\t\treturn index;\n\t\t}\n\t\treturn -1;\n\t};\n\n\tconst handleButtonSoundClick = (sound: Sound | null) => {\n\t\tif (sound) {\n\t\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\n\t\t\taudio.play();\n\t\t}\n\t};\n\n\tconst buttonWidth = 100; // Adjust this value based on your button width\n\tconst buttonHeight = 50; // Adjust this value based on your button height\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={handleSearch}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t{sounds.map((sound, index) => (\n\t\t\t\t\t\t<Draggable\n\t\t\t\t\t\t\tkey={sound.id}\n\t\t\t\t\t\t\tonStop={(e, data) => handleDragStop(index, e, data)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"sound-button\"\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\thandleSoundClick(sound.previews['preview-hq-mp3'])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img src=\"/assets/note.png\" alt=\"\" height={20} width={20} />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"embedded-keyboard\">\n\t\t\t\t\t{assignedSounds.map((sound, index) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName=\"embedded-key\"\n\t\t\t\t\t\t\tonClick={() => handleButtonSoundClick(sound)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div>{sound ? sound.name : 'Empty'}</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}