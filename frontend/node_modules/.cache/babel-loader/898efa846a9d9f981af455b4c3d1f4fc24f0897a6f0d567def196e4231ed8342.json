{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SoundComponent from '../components/Sound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [query, setQuery] = useState('Drums');\n  const [selectedSound, setSelectedSound] = useState(null);\n  const [assignedSounds, setAssignedSounds] = useState(Array(16).fill(null));\n  const [leftSliderValue, setLeftSliderValue] = useState(0);\n  const [rightSliderValue, setRightSliderValue] = useState(0);\n  const socket = useRef(null);\n  const audioRef = useRef(null);\n  useEffect(() => {\n    // Initialize the WebSocket connection\n    socket.current = new WebSocket('ws://192.168.0.201:8765');\n    socket.current.onopen = () => {\n      console.log('WebSocket connection established.');\n    };\n    socket.current.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n    socket.current.onclose = () => {\n      console.log('WebSocket connection closed.');\n    };\n\n    // Clean up WebSocket connection when component unmounts\n    return () => {\n      if (socket.current) {\n        socket.current.close();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    fetchSounds(query);\n  }, [query]);\n  const fetchSounds = async searchQuery => {\n    try {\n      const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        fields: 'id,name,bitrate,images,previews,tags',\n        token: apiKey\n      });\n      const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}`);\n      const data = await response.json();\n      const randomPianoSounds = data.results.slice(0, 16);\n      setSounds(randomPianoSounds);\n      console.log(randomPianoSounds);\n    } catch (error) {\n      console.error('Error fetching sounds:', error);\n    }\n  };\n  const handleSoundSelect = sound => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setSelectedSound(sound);\n    const audio = new Audio(sound.previews['preview-hq-mp3']);\n    audioRef.current = audio;\n    audio.play();\n  };\n  const handleStopPreview = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const buttonPins = [5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18];\n  const handleButtonSoundClick = (sound, index) => {\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    const audio = sound.previews['preview-hq-mp3'];\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n      setSelectedSound(null);\n    }\n  };\n  const handleButtonSoundDrop = (index, e) => {\n    e.preventDefault();\n    const soundData = e.dataTransfer.getData('sound');\n    const sound = JSON.parse(soundData);\n    const newAssignedSounds = [...assignedSounds];\n    newAssignedSounds[index] = sound;\n    setAssignedSounds(newAssignedSounds);\n\n    // Send the selected sound to the backend\n    if (sound && socket.current) {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      socket.current.send(JSON.stringify({\n        type: 'assign_sound',\n        pin,\n        sound\n      }));\n    }\n  };\n  const handleButtonSoundDragOver = e => {\n    e.preventDefault();\n  };\n  const resetAudio = () => {\n    setSelectedSound(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [\"return (\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"SynthPiser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSearch,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Search\",\n            className: \"search-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sounds-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"left-slider\",\n              children: \"Reverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"left-slider\",\n              min: \"-20\",\n              max: \"20\",\n              value: leftSliderValue,\n              onChange: e => setLeftSliderValue(parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: leftSliderValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"stop-button reset-button\",\n              onClick: handleStopPreview,\n              children: \"Stop Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sounds\",\n              children: sounds.map((sound, index) => /*#__PURE__*/_jsxDEV(SoundComponent, {\n                sound: sound,\n                index: index,\n                onClick: handleSoundSelect,\n                onDragStart: () => setSelectedSound(sound),\n                isSelected: selectedSound === sound\n              }, sound.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"right-slider\",\n              children: \"Distortion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              id: \"right-slider\",\n              min: \"-20\",\n              max: \"20\",\n              value: rightSliderValue,\n              onChange: e => setRightSliderValue(parseInt(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: rightSliderValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"embedded-keyboard\",\n          children: assignedSounds.map((sound, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `embedded-key ${sound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'}`,\n            onDrop: e => handleButtonSoundDrop(index, e),\n            onDragOver: handleButtonSoundDragOver,\n            onClick: () => selectedSound && handleButtonSoundClick(selectedSound, index),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 9\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"usPXsemr5A99p6O3fQ5iw4aHbS0=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SoundComponent","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","query","setQuery","selectedSound","setSelectedSound","assignedSounds","setAssignedSounds","Array","fill","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","socket","audioRef","current","WebSocket","onopen","console","log","onmessage","event","data","onclose","close","fetchSounds","searchQuery","apiKey","queryParams","URLSearchParams","fields","token","response","fetch","json","randomPianoSounds","results","slice","error","handleSoundSelect","sound","pause","currentTime","audio","Audio","previews","play","handleStopPreview","buttonPins","handleButtonSoundClick","index","newAssignedSounds","pin","send","JSON","stringify","type","handleButtonSoundDrop","e","preventDefault","soundData","dataTransfer","getData","parse","handleButtonSoundDragOver","resetAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSearch","value","onChange","target","placeholder","htmlFor","id","min","max","parseInt","onClick","map","onDragStart","isSelected","onDrop","onDragOver","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaRedo } from 'react-icons/fa';\nimport SoundComponent from '../components/Sound';\nimport BeatControls from '../components/BeatControls';\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tbitrate: string;\n\timages: {\n\t\twaveform_m: string;\n\t\tspectral_l: string;\n\t};\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\ttags: string[] | undefined;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [query, setQuery] = useState<string>('Drums');\n\tconst [selectedSound, setSelectedSound] = useState<Sound | null>(null);\n\tconst [assignedSounds, setAssignedSounds] = useState<(Sound | null)[]>(\n\t\tArray(16).fill(null)\n\t);\n\tconst [leftSliderValue, setLeftSliderValue] = useState<number>(0);\n\tconst [rightSliderValue, setRightSliderValue] = useState<number>(0);\n\n\tconst socket = useRef<WebSocket | null>(null);\n\tconst audioRef = useRef<HTMLAudioElement | null>(null);\n\n\tuseEffect(() => {\n\t\t// Initialize the WebSocket connection\n\t\tsocket.current = new WebSocket('ws://192.168.0.201:8765');\n\n\t\tsocket.current.onopen = () => {\n\t\t\tconsole.log('WebSocket connection established.');\n\t\t};\n\n\t\tsocket.current.onmessage = (event: any) => {\n\t\t\tconsole.log('Received message:', event.data);\n\t\t};\n\n\t\tsocket.current.onclose = () => {\n\t\t\tconsole.log('WebSocket connection closed.');\n\t\t};\n\n\t\t// Clean up WebSocket connection when component unmounts\n\t\treturn () => {\n\t\t\tif (socket.current) {\n\t\t\t\tsocket.current.close();\n\t\t\t}\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tfetchSounds(query);\n\t}, [query]);\n\n\tconst fetchSounds = async (searchQuery: string) => {\n\t\ttry {\n\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\tquery: searchQuery,\n\t\t\t\tfields: 'id,name,bitrate,images,previews,tags',\n\t\t\t\ttoken: apiKey\n\t\t\t});\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}`\n\t\t\t);\n\t\t\tconst data = await response.json();\n\t\t\tconst randomPianoSounds = data.results.slice(0, 16);\n\t\t\tsetSounds(randomPianoSounds);\n\t\t\tconsole.log(randomPianoSounds);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching sounds:', error);\n\t\t}\n\t};\n\n\tconst handleSoundSelect = (sound: Sound) => {\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t}\n\n\t\tsetSelectedSound(sound);\n\t\tconst audio = new Audio(sound.previews['preview-hq-mp3']);\n\t\taudioRef.current = audio;\n\t\taudio.play();\n\t};\n\n\tconst handleStopPreview = () => {\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t\tsetSelectedSound(null);\n\t\t}\n\t};\n\n\tconst buttonPins = [\n\t\t5, 6, 13, 19, 26, 16, 20, 21, 4, 17, 27, 22, 24, 25, 23, 18\n\t];\n\n\tconst handleButtonSoundClick = (sound: Sound, index: number) => {\n\t\tconst newAssignedSounds = [...assignedSounds];\n\t\tnewAssignedSounds[index] = sound;\n\t\tconst audio = sound.previews['preview-hq-mp3'];\n\t\tsetAssignedSounds(newAssignedSounds);\n\n\t\t// Send the selected sound to the backend\n\t\tif (sound && socket.current) {\n\t\t\tconst pin = buttonPins[index];\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t\t}\n\t\tif (audioRef.current) {\n\t\t\taudioRef.current.pause();\n\t\t\taudioRef.current.currentTime = 0;\n\t\t\tsetSelectedSound(null);\n\t\t}\n\t};\n\n\tconst handleButtonSoundDrop = (\n\t\tindex: number,\n\t\te: React.DragEvent<HTMLButtonElement>\n\t) => {\n\t\te.preventDefault();\n\t\tconst soundData = e.dataTransfer.getData('sound');\n\t\tconst sound = JSON.parse(soundData);\n\t\tconst newAssignedSounds = [...assignedSounds];\n\t\tnewAssignedSounds[index] = sound;\n\t\tsetAssignedSounds(newAssignedSounds);\n\n\t\t// Send the selected sound to the backend\n\t\tif (sound && socket.current) {\n\t\t\tconst pin = buttonPins[index];\n\t\t\tconsole.log('Sending sound to backend:', { pin, sound });\n\t\t\tsocket.current.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\n\t\t}\n\t};\n\n\tconst handleButtonSoundDragOver = (e: React.DragEvent<HTMLButtonElement>) => {\n\t\te.preventDefault();\n\t};\n\n\tconst resetAudio = () => {\n\t\tsetSelectedSound(null);\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\treturn (\n\t\t\t<div className=\"main-page\">\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form onSubmit={handleSearch}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\n\t\t\t\t\t<div className=\"sounds-wrapper\">\n\t\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t\t<label htmlFor=\"left-slider\">Reverb</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tid=\"left-slider\"\n\t\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\t\tvalue={leftSliderValue}\n\t\t\t\t\t\t\t\tonChange={(e) => setLeftSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{leftSliderValue}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"preview-menu\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"stop-button reset-button\"\n\t\t\t\t\t\t\t\tonClick={handleStopPreview}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tStop Preview\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t\t\t\t{sounds.map((sound, index) => (\n\t\t\t\t\t\t\t\t\t<SoundComponent\n\t\t\t\t\t\t\t\t\t\tkey={sound.id}\n\t\t\t\t\t\t\t\t\t\tsound={sound}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tonClick={handleSoundSelect}\n\t\t\t\t\t\t\t\t\t\tonDragStart={() => setSelectedSound(sound)}\n\t\t\t\t\t\t\t\t\t\tisSelected={selectedSound === sound}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"slider\">\n\t\t\t\t\t\t\t<label htmlFor=\"right-slider\">Distortion</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tid=\"right-slider\"\n\t\t\t\t\t\t\t\tmin=\"-20\"\n\t\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\t\tvalue={rightSliderValue}\n\t\t\t\t\t\t\t\tonChange={(e) => setRightSliderValue(parseInt(e.target.value))}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{rightSliderValue}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Remaining JSX */}\n\t\t\t\t\t<div className=\"embedded-keyboard\">\n\t\t\t\t\t\t{assignedSounds.map((sound, index) => (\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tclassName={`embedded-key ${\n\t\t\t\t\t\t\t\t\tsound ? 'assigned' : selectedSound ? 'glow empty' : 'empty'\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tonDrop={(e) => handleButtonSoundDrop(index, e)}\n\t\t\t\t\t\t\t\tonDragOver={handleButtonSoundDragOver}\n\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\tselectedSound && handleButtonSoundClick(selectedSound, index)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div></div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t);\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}