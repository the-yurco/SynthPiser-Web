{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [sounds, setSounds] = useState([]);\n  const [packs, setPacks] = useState([]);\n  const [selectedPackId, setSelectedPackId] = useState(null);\n  useEffect(() => {\n    const fetchPacks = async () => {\n      try {\n        const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n        const response = await fetch(`https://freesound.org/apiv2/packs/?fields=id,name&token=${apiKey}&page_size=10`);\n        const data = await response.json();\n        setPacks(data.results);\n      } catch (error) {\n        console.error('Error fetching packs:', error);\n      }\n    };\n    fetchPacks();\n  }, []);\n  useEffect(() => {\n    if (selectedPackId !== null) {\n      const fetchSoundsFromPack = async () => {\n        try {\n          const apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n          const queryParams = new URLSearchParams({\n            fields: 'id,name,previews,pack',\n            token: apiKey\n          });\n          const response = await fetch(`https://freesound.org/apiv2/search/text/?${queryParams}&pack=${selectedPackId}`);\n          const data = await response.json();\n          const soundsFromPack = data.results.slice(0, 16);\n          setSounds(soundsFromPack);\n        } catch (error) {\n          console.error('Error fetching sounds from pack:', error);\n        }\n      };\n      fetchSoundsFromPack();\n    }\n  }, [selectedPackId]);\n  const handleSoundClick = previewUrl => {\n    const audio = new Audio(previewUrl);\n    audio.play();\n  };\n  const handlePackClick = packName => {\n    const selectedPack = packs.find(pack => pack.name === packName);\n    if (selectedPack) {\n      setSelectedPackId(selectedPack.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SynthPiser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"packs\",\n        children: packs.map(pack => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePackClick(pack.name),\n          className: \"pack-button\",\n          children: pack.name\n        }, pack.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sounds\",\n        children: sounds.map(sound => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSoundClick(sound.previews['preview-hq-mp3']),\n          className: \"sound-button\",\n          children: [sound.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"packle\",\n            children: sound.pack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 8\n          }, this)]\n        }, sound.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n_s(MainPage, \"+ECv8s/EOwSwKdGZk/cDFIjZQPk=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainPage","_s","sounds","setSounds","packs","setPacks","selectedPackId","setSelectedPackId","fetchPacks","apiKey","response","fetch","data","json","results","error","console","fetchSoundsFromPack","queryParams","URLSearchParams","fields","token","soundsFromPack","slice","handleSoundClick","previewUrl","audio","Audio","play","handlePackClick","packName","selectedPack","find","pack","name","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","sound","previews","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/pages/MainPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\ninterface Sound {\n\tid: number;\n\tname: string;\n\tpreviews: {\n\t\t'preview-hq-mp3': string;\n\t};\n\tpack: string;\n}\n\ninterface Pack {\n\tid: number;\n\tname: string;\n}\n\nconst MainPage = () => {\n\tconst [sounds, setSounds] = useState<Sound[]>([]);\n\tconst [packs, setPacks] = useState<Pack[]>([]);\n\tconst [selectedPackId, setSelectedPackId] = useState<number | null>(null);\n\n\tuseEffect(() => {\n\t\tconst fetchPacks = async () => {\n\t\t\ttry {\n\t\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`https://freesound.org/apiv2/packs/?fields=id,name&token=${apiKey}&page_size=10`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetPacks(data.results);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching packs:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetchPacks();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (selectedPackId !== null) {\n\t\t\tconst fetchSoundsFromPack = async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst apiKey = 'Aj9x06vq60VC37YLo9psCPwzvEIyTu0eBQfphtoz';\n\t\t\t\t\tconst queryParams = new URLSearchParams({\n\t\t\t\t\t\tfields: 'id,name,previews,pack',\n\t\t\t\t\t\ttoken: apiKey\n\t\t\t\t\t});\n\t\t\t\t\tconst response = await fetch(\n\t\t\t\t\t\t`https://freesound.org/apiv2/search/text/?${queryParams}&pack=${selectedPackId}`\n\t\t\t\t\t);\n\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\tconst soundsFromPack = data.results.slice(0, 16);\n\t\t\t\t\tsetSounds(soundsFromPack);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Error fetching sounds from pack:', error);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfetchSoundsFromPack();\n\t\t}\n\t}, [selectedPackId]);\n\n\tconst handleSoundClick = (previewUrl: string) => {\n\t\tconst audio = new Audio(previewUrl);\n\t\taudio.play();\n\t};\n\n\tconst handlePackClick = (packName: string) => {\n\t\tconst selectedPack = packs.find((pack) => pack.name === packName);\n\t\tif (selectedPack) {\n\t\t\tsetSelectedPackId(selectedPack.id);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"main-page\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t<h1>SynthPiser</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"packs\">\n\t\t\t\t\t{packs.map((pack) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={pack.id}\n\t\t\t\t\t\t\tonClick={() => handlePackClick(pack.name)}\n\t\t\t\t\t\t\tclassName=\"pack-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{pack.name}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sounds\">\n\t\t\t\t\t{sounds.map((sound) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={sound.id}\n\t\t\t\t\t\t\tonClick={() => handleSoundClick(sound.previews['preview-hq-mp3'])}\n\t\t\t\t\t\t\tclassName=\"sound-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{sound.name} <br />\n\t\t\t\t\t\t\t<span className=\"packle\">{sound.pack}</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MainPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}