{"ast":null,"code":"var _jsxFileName = \"/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FaPlay, FaPause, FaStop, FaRedo, FaCircle, FaSquare } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BeatControls = ({\n  socket\n}) => {\n  _s();\n  const [timerValue, setTimerValue] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [recordedButtons, setRecordedButtons] = useState([]);\n  const timerRef = useRef(null);\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (!timerRunning) {\n      setTimerValue(0);\n      setTimerRunning(true);\n      timerRef.current = window.setInterval(() => {\n        setTimerValue(prevValue => {\n          if (prevValue >= 10) {\n            setTimerRunning(false);\n            window.clearInterval(timerRef.current);\n            return 0;\n          }\n          return prevValue + 1;\n        });\n      }, 1000);\n    } else {\n      setTimerRunning(false);\n      window.clearInterval(timerRef.current);\n    }\n  };\n  const stopPlayback = () => {\n    setIsPlaying(false);\n    setTimerRunning(false);\n    setTimerValue(0);\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n  };\n  const resetTimer = () => {\n    setRecordedButtons([]);\n    setTimerValue(0);\n  };\n  const handleClearRecordedButtons = () => {\n    setRecordedButtons([]);\n  };\n  useEffect(() => {\n    if (socket) {\n      socket.onmessage = event => {\n        const data = JSON.parse(event.data);\n        if (data.type === 'assign_sound' && data.pin) {\n          setRecordedButtons(prevButtons => [...prevButtons, data.pin]);\n        }\n      };\n    }\n  }, [socket]);\n  useEffect(() => {\n    if (isPlaying) {\n      let index = 0;\n      const interval = setInterval(() => {\n        if (index < recordedButtons.length) {\n          setTimerValue(recordedButtons[index]);\n          index++;\n        } else {\n          clearInterval(interval);\n          setIsPlaying(false);\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, recordedButtons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"beat-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-axis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-display\",\n        children: timerValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), recordedButtons.map((buttonPin, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-indicator\",\n        children: buttonPin % 2 === 0 ? /*#__PURE__*/_jsxDEV(FaSquare, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(FaCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 45\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playback-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? /*#__PURE__*/_jsxDEV(FaPause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(FaPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopPlayback,\n        children: /*#__PURE__*/_jsxDEV(FaStop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: /*#__PURE__*/_jsxDEV(FaRedo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearRecordedButtons,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n_s(BeatControls, \"eo/3czruISWE6L7A13rEA34+/r8=\");\n_c = BeatControls;\nexport default BeatControls;\nvar _c;\n$RefreshReg$(_c, \"BeatControls\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaPlay","FaPause","FaStop","FaRedo","FaCircle","FaSquare","jsxDEV","_jsxDEV","BeatControls","socket","_s","timerValue","setTimerValue","isPlaying","setIsPlaying","timerRunning","setTimerRunning","recordedButtons","setRecordedButtons","timerRef","togglePlayPause","current","window","setInterval","prevValue","clearInterval","stopPlayback","resetTimer","handleClearRecordedButtons","onmessage","event","data","JSON","parse","type","pin","prevButtons","index","interval","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buttonPin","onClick","_c","$RefreshReg$"],"sources":["/home/jurco/SynthPiser-Web/frontend/src/components/BeatControls.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n\tFaPlay,\n\tFaPause,\n\tFaStop,\n\tFaRedo,\n\tFaCircle,\n\tFaSquare\n} from 'react-icons/fa';\n\ntype BeatControlsProps = {\n\tsocket: WebSocket | null;\n};\n\nconst BeatControls: React.FC<BeatControlsProps> = ({\n\tsocket\n}: BeatControlsProps) => {\n\tconst [timerValue, setTimerValue] = useState<number>(0);\n\tconst [isPlaying, setIsPlaying] = useState<boolean>(false);\n\tconst [timerRunning, setTimerRunning] = useState<boolean>(false);\n\tconst [recordedButtons, setRecordedButtons] = useState<number[]>([]);\n\tconst timerRef = useRef<number | null>(null);\n\n\tconst togglePlayPause = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tif (!timerRunning) {\n\t\t\tsetTimerValue(0);\n\t\t\tsetTimerRunning(true);\n\t\t\ttimerRef.current = window.setInterval(() => {\n\t\t\t\tsetTimerValue((prevValue) => {\n\t\t\t\t\tif (prevValue >= 10) {\n\t\t\t\t\t\tsetTimerRunning(false);\n\t\t\t\t\t\twindow.clearInterval(timerRef.current!);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn prevValue + 1;\n\t\t\t\t});\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\tsetTimerRunning(false);\n\t\t\twindow.clearInterval(timerRef.current!);\n\t\t}\n\t};\n\n\tconst stopPlayback = () => {\n\t\tsetIsPlaying(false);\n\t\tsetTimerRunning(false);\n\t\tsetTimerValue(0);\n\t\tif (timerRef.current) {\n\t\t\tclearInterval(timerRef.current);\n\t\t}\n\t};\n\n\tconst resetTimer = () => {\n\t\tsetRecordedButtons([]);\n\t\tsetTimerValue(0);\n\t};\n\n\tconst handleClearRecordedButtons = () => {\n\t\tsetRecordedButtons([]);\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket) {\n\t\t\tsocket.onmessage = (event) => {\n\t\t\t\tconst data = JSON.parse(event.data);\n\t\t\t\tif (data.type === 'assign_sound' && data.pin) {\n\t\t\t\t\tsetRecordedButtons((prevButtons) => [...prevButtons, data.pin]);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, [socket]);\n\n\tuseEffect(() => {\n\t\tif (isPlaying) {\n\t\t\tlet index = 0;\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tif (index < recordedButtons.length) {\n\t\t\t\t\tsetTimerValue(recordedButtons[index]);\n\t\t\t\t\tindex++;\n\t\t\t\t} else {\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\tsetIsPlaying(false);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t\treturn () => clearInterval(interval);\n\t\t}\n\t}, [isPlaying, recordedButtons]);\n\n\treturn (\n\t\t<div className=\"beat-controls\">\n\t\t\t<div className=\"timer-axis\">\n\t\t\t\t<div className=\"timer-display\">{timerValue}</div>\n\t\t\t\t{recordedButtons.map((buttonPin, index) => (\n\t\t\t\t\t<div key={index} className=\"button-indicator\">\n\t\t\t\t\t\t{buttonPin % 2 === 0 ? <FaSquare /> : <FaCircle />}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<div className=\"playback-controls\">\n\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t{isPlaying ? <FaPause /> : <FaPlay />}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={stopPlayback}>\n\t\t\t\t\t<FaStop />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={resetTimer}>\n\t\t\t\t\t<FaRedo />\n\t\t\t\t</button>\n\t\t\t\t<button onClick={handleClearRecordedButtons}>Clear</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BeatControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}