{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronni\\\\OneDrive\\\\Po\\u010D\\xEDta\\u010D\\\\react-js\\\\SynthPiser-Web\\\\frontend\\\\src\\\\components\\\\PresetsDropdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PresetsDropdown = ({\n  handlePresetSelect\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const presets = [{\n    name: 'Piano Notes',\n    sounds: []\n  },\n  // Add your sounds here\n  {\n    name: 'Guitar Chords',\n    sounds: []\n  } // Add your sounds here\n  // Add more presets as needed\n  ];\n  const handlePresetClick = preset => {\n    handlePresetSelect(preset.sounds);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"presets-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(!isOpen),\n      children: \"Presets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presets-menu\",\n      children: presets.map((preset, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePresetClick(preset),\n        children: preset.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PresetsDropdown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = PresetsDropdown;\nexport default PresetsDropdown;\nvar _c;\n$RefreshReg$(_c, \"PresetsDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PresetsDropdown","handlePresetSelect","_s","isOpen","setIsOpen","presets","name","sounds","handlePresetClick","preset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/ronni/OneDrive/Počítač/react-js/SynthPiser-Web/frontend/src/components/PresetsDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Sound } from '../pages/MainPage';\r\n\r\n\r\ninterface Preset {\r\n  name: string;\r\n  sounds: Sound[];\r\n}\r\n\r\ninterface PresetsDropdownProps {\r\n  handlePresetSelect: (sounds: Sound[]) => void;\r\n}\r\n\r\nconst PresetsDropdown: React.FC<PresetsDropdownProps> = ({ handlePresetSelect }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const presets: Preset[] = [\r\n    { name: 'Piano Notes', sounds: [] }, // Add your sounds here\r\n    { name: 'Guitar Chords', sounds: [] }, // Add your sounds here\r\n    // Add more presets as needed\r\n  ];\r\n\r\n  const handlePresetClick = (preset: Preset) => {\r\n    handlePresetSelect(preset.sounds);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"presets-dropdown\">\r\n      <button onClick={() => setIsOpen(!isOpen)}>Presets</button>\r\n      {isOpen && (\r\n        <div className=\"presets-menu\">\r\n          {presets.map((preset, index) => (\r\n            <button key={index} onClick={() => handlePresetClick(preset)}>\r\n              {preset.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresetsDropdown;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAaxC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMQ,OAAiB,GAAG,CACxB;IAAEC,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAG,CAAC;EAAE;EACrC;IAAED,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAE;EACvC;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;IAC5CR,kBAAkB,CAACQ,MAAM,CAACF,MAAM,CAAC;IACjCH,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEL,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAQa,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAQ,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1Db,MAAM,iBACLJ,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BN,OAAO,CAACY,GAAG,CAAC,CAACR,MAAM,EAAES,KAAK,kBACzBnB,OAAA;QAAoBa,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACC,MAAM,CAAE;QAAAE,QAAA,EAC1DF,MAAM,CAACH;MAAI,GADDY,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CA5BIF,eAA+C;AAAAmB,EAAA,GAA/CnB,eAA+C;AA8BrD,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}