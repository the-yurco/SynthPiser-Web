{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronni\\\\OneDrive\\\\Po\\u010D\\xEDta\\u010D\\\\react-js\\\\SynthPiser-Web\\\\frontend\\\\src\\\\components\\\\PresetsDropdown.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PresetsDropdown = ({\n  handlePresetSelect,\n  socket,\n  buttonPins\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedPreset, setSelectedPreset] = useState('Presets');\n  const presets = [{\n    name: 'Piano Notes',\n    sounds: []\n  },\n  // Add your sounds here\n  {\n    name: 'Guitar Chords',\n    sounds: []\n  } // Add your sounds here\n  // Add more presets as needed\n  ];\n  const handlePresetClick = preset => {\n    preset.sounds.forEach((sound, index) => {\n      const pin = buttonPins[index];\n      console.log('Sending sound to backend:', {\n        pin,\n        sound\n      });\n      if (socket) {\n        socket.send(JSON.stringify({\n          type: 'assign_sound',\n          pin,\n          sound\n        }));\n      }\n    });\n    handlePresetSelect(preset.sounds);\n    setSelectedPreset(preset.name);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"presets\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"presets-dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"preset-button\",\n        onClick: () => setIsOpen(!isOpen),\n        children: selectedPreset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: presets.map((preset, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"preset-button-dropdown\",\n          onClick: () => handlePresetClick(preset),\n          children: preset.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(PresetsDropdown, \"sfuVFmZYpgbHcFI6O9QJ9HKUrwY=\");\n_c = PresetsDropdown;\nexport default PresetsDropdown;\nvar _c;\n$RefreshReg$(_c, \"PresetsDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PresetsDropdown","handlePresetSelect","socket","buttonPins","_s","isOpen","setIsOpen","selectedPreset","setSelectedPreset","presets","name","sounds","handlePresetClick","preset","forEach","sound","index","pin","console","log","send","JSON","stringify","type","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/ronni/OneDrive/Počítač/react-js/SynthPiser-Web/frontend/src/components/PresetsDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Sound } from '../pages/MainPage';\r\n\r\ninterface Preset {\r\n  name: string;\r\n  sounds: Sound[];\r\n}\r\n\r\ninterface PresetsDropdownProps {\r\n    handlePresetSelect: (sounds: Sound[]) => void;\r\n    socket: WebSocket | null; // Add socket prop\r\n    buttonPins: number[]; // Add buttonPins prop\r\n  }\r\n\r\nconst PresetsDropdown: React.FC<PresetsDropdownProps> = ({ handlePresetSelect, socket, buttonPins }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedPreset, setSelectedPreset] = useState<string>('Presets');\r\n\r\n  const presets: Preset[] = [\r\n    { name: 'Piano Notes', sounds: [] }, // Add your sounds here\r\n    { name: 'Guitar Chords', sounds: [] }, // Add your sounds here\r\n    // Add more presets as needed\r\n  ];\r\n\r\n  const handlePresetClick = (preset: Preset) => {\r\n    preset.sounds.forEach((sound, index) => {\r\n      const pin = buttonPins[index];\r\n      console.log('Sending sound to backend:', { pin, sound });\r\n      if (socket) {\r\n        socket.send(JSON.stringify({ type: 'assign_sound', pin, sound }));\r\n      }\r\n    });\r\n    handlePresetSelect(preset.sounds);\r\n    setSelectedPreset(preset.name);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"presets\">\r\n      <div className=\"presets-dropdown\">\r\n        <button className=\"preset-button\" onClick={() => setIsOpen(!isOpen)}>\r\n          {selectedPreset}\r\n        </button>\r\n        {isOpen && (\r\n          <div className=\"dropdown-menu\">\r\n            {presets.map((preset, index) => (\r\n              <button\r\n                className='preset-button-dropdown'\r\n                key={index}\r\n                onClick={() => handlePresetClick(preset)}\r\n              >\r\n                {preset.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresetsDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcxC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAS,SAAS,CAAC;EAEvE,MAAMY,OAAiB,GAAG,CACxB;IAAEC,IAAI,EAAE,aAAa;IAAEC,MAAM,EAAE;EAAG,CAAC;EAAE;EACrC;IAAED,IAAI,EAAE,eAAe;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAE;EACvC;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAIC,MAAc,IAAK;IAC5CA,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACtC,MAAMC,GAAG,GAAGd,UAAU,CAACa,KAAK,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;QAAEF,GAAG;QAAEF;MAAM,CAAC,CAAC;MACxD,IAAIb,MAAM,EAAE;QACVA,MAAM,CAACkB,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAE,cAAc;UAAEN,GAAG;UAAEF;QAAM,CAAC,CAAC,CAAC;MACnE;IACF,CAAC,CAAC;IACFd,kBAAkB,CAACY,MAAM,CAACF,MAAM,CAAC;IACjCH,iBAAiB,CAACK,MAAM,CAACH,IAAI,CAAC;IAC9BJ,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA;IAAKyB,SAAS,EAAC,SAAS;IAAAC,QAAA,eACtB1B,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1B,OAAA;QAAQyB,SAAS,EAAC,eAAe;QAACE,OAAO,EAAEA,CAAA,KAAMpB,SAAS,CAAC,CAACD,MAAM,CAAE;QAAAoB,QAAA,EACjElB;MAAc;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACRzB,MAAM,iBACLN,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BhB,OAAO,CAACsB,GAAG,CAAC,CAAClB,MAAM,EAAEG,KAAK,kBACzBjB,OAAA;UACEyB,SAAS,EAAC,wBAAwB;UAElCE,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACC,MAAM,CAAE;UAAAY,QAAA,EAExCZ,MAAM,CAACH;QAAI,GAHPM,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA7CIJ,eAA+C;AAAAgC,EAAA,GAA/ChC,eAA+C;AA+CrD,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}